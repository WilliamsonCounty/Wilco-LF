<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Laserfiche.RepositoryAccess</name>
    </assembly>
    <members>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivitiesReflection">
            <summary>Holder for reflection information generated from activities.proto</summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivitiesReflection.Descriptor">
            <summary>File descriptor for activities.proto</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.TargetIdFieldNumber">
            <summary>Field number for the "target_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.TargetEtypeFieldNumber">
            <summary>Field number for the "target_etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.TargetUuidFieldNumber">
            <summary>Field number for the "target_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.ParentUuidFieldNumber">
            <summary>Field number for the "parent_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.IsLockedFieldNumber">
            <summary>Field number for the "is_locked" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.DestPathFieldNumber">
            <summary>Field number for the "dest_path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.DestIdFieldNumber">
            <summary>Field number for the "dest_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.DestUuidFieldNumber">
            <summary>Field number for the "dest_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.DestParentIdFieldNumber">
            <summary>Field number for the "dest_parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.DestParentUuidFieldNumber">
            <summary>Field number for the "dest_parent_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.EntryNamespaceActivityMessage.LockTokenFieldNumber">
            <summary>Field number for the "lock_token" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.SrcVolumeIdFieldNumber">
            <summary>Field number for the "src_volume_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.SrcVolumeNameFieldNumber">
            <summary>Field number for the "src_volume_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.DestVolumeIdFieldNumber">
            <summary>Field number for the "dest_volume_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.MigrateEntryActivityMessage.DestVolumeNameFieldNumber">
            <summary>Field number for the "dest_volume_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.PageIdFieldNumber">
            <summary>Field number for the "page_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.PageNumberFieldNumber">
            <summary>Field number for the "page_number" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.RangeStartFieldNumber">
            <summary>Field number for the "range_start" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.RangeEndFieldNumber">
            <summary>Field number for the "range_end" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.PagePartFieldNumber">
            <summary>Field number for the "page_part" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.AnnotationIdFieldNumber">
            <summary>Field number for the "annotation_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.StampIdFieldNumber">
            <summary>Field number for the "stamp_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.AnnotationTypeFieldNumber">
            <summary>Field number for the "annotation_type" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.DestPageIdFieldNumber">
            <summary>Field number for the "dest_page_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.DestItemIdFieldNumber">
            <summary>Field number for the "dest_item_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.DestPageNumberFieldNumber">
            <summary>Field number for the "dest_page_number" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.StreamNameFieldNumber">
            <summary>Field number for the "stream_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.SourceEntryIdFieldNumber">
            <summary>Field number for the "source_entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.SourceUuidFieldNumber">
            <summary>Field number for the "source_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.WriteEntryActivityMessage.SourcePathFieldNumber">
            <summary>Field number for the "source_path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.PropertyIdFieldNumber">
            <summary>Field number for the "property_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.PropertyNameFieldNumber">
            <summary>Field number for the "property_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.PropertyTypeFieldNumber">
            <summary>Field number for the "property_type" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropvalActivityMessage.PropertyValueFieldNumber">
            <summary>Field number for the "property_value" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.OldPsetIdFieldNumber">
            <summary>Field number for the "old_pset_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.OldPsetNameFieldNumber">
            <summary>Field number for the "old_pset_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.NewPsetIdFieldNumber">
            <summary>Field number for the "new_pset_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetEntryPropsetActivityMessage.NewPsetNameFieldNumber">
            <summary>Field number for the "new_pset_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.TagIdFieldNumber">
            <summary>Field number for the "tag_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.TagEntryActivityMessage.TagNameFieldNumber">
            <summary>Field number for the "tag_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.PropertyIdFieldNumber">
            <summary>Field number for the "property_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.PropertyNameFieldNumber">
            <summary>Field number for the "property_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.PropertyFlagsFieldNumber">
            <summary>Field number for the "property_flags" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.PropertyTypeFieldNumber">
            <summary>Field number for the "property_type" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.PropertyLengthFieldNumber">
            <summary>Field number for the "property_length" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.OldPropertyNameFieldNumber">
            <summary>Field number for the "old_property_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.OldPropertyFlagsFieldNumber">
            <summary>Field number for the "old_property_flags" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.OldPropertyTypeFieldNumber">
            <summary>Field number for the "old_property_type" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ModifyPropdefActivityMessage.OldPropertyLengthFieldNumber">
            <summary>Field number for the "old_property_length" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetDBOptionActivityMessage.DboptionNameFieldNumber">
            <summary>Field number for the "dboption_name" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetDBOptionActivityMessage.OldDboptionValueFieldNumber">
            <summary>Field number for the "old_dboption_value" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.SetDBOptionActivityMessage.NewDboptionValueFieldNumber">
            <summary>Field number for the "new_dboption_value" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.EventsFieldNumber">
            <summary>Field number for the "events" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.MinAsnFieldNumber">
            <summary>Field number for the "min_asn" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.MaxAsnFieldNumber">
            <summary>Field number for the "max_asn" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.ActivityCountFieldNumber">
            <summary>Field number for the "activity_count" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.IsVersionedFieldNumber">
            <summary>Field number for the "is_versioned" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.IsIndexedFieldNumber">
            <summary>Field number for the "is_indexed" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivityMessage.LockTokenFieldNumber">
            <summary>Field number for the "lock_token" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.DigitalSignatureActivityMessage.SignatureIdFieldNumber">
            <summary>Field number for the "signature_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityMessage.VersioningActionFieldNumber">
            <summary>Field number for the "versioning_action" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.LinkTypeIdFieldNumber">
            <summary>Field number for the "link_type_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.SourcePathFieldNumber">
            <summary>Field number for the "source_path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.SourceEntryIdFieldNumber">
            <summary>Field number for the "source_entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.SourceParentIdFieldNumber">
            <summary>Field number for the "source_parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.SourceEtypeFieldNumber">
            <summary>Field number for the "source_etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.SourceUuidFieldNumber">
            <summary>Field number for the "source_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.TargetPathFieldNumber">
            <summary>Field number for the "target_path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.TargetEntryIdFieldNumber">
            <summary>Field number for the "target_entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.TargetParentIdFieldNumber">
            <summary>Field number for the "target_parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.TargetEtypeFieldNumber">
            <summary>Field number for the "target_etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.TargetUuidFieldNumber">
            <summary>Field number for the "target_uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.LinkNotesFieldNumber">
            <summary>Field number for the "link_notes" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LinkEntryActivityMessage.EntryLinkIdFieldNumber">
            <summary>Field number for the "entry_link_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.EntryIdFieldNumber">
            <summary>Field number for the "entry_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.ParentIdFieldNumber">
            <summary>Field number for the "parent_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.EtypeFieldNumber">
            <summary>Field number for the "etype" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.UuidFieldNumber">
            <summary>Field number for the "uuid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.LockTokenFieldNumber">
            <summary>Field number for the "lock_token" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.TimeoutFieldNumber">
            <summary>Field number for the "timeout" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.ScopeFieldNumber">
            <summary>Field number for the "scope" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.DepthFieldNumber">
            <summary>Field number for the "depth" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.LockEntryActivityMessage.IsPersistentFieldNumber">
            <summary>Field number for the "is_persistent" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.AsnFieldNumber">
            <summary>Field number for the "asn" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.WhenFieldNumber">
            <summary>Field number for the "when" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.ActivityTypeFieldNumber">
            <summary>Field number for the "activity_type" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.UserSidFieldNumber">
            <summary>Field number for the "user_sid" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.SessionIdFieldNumber">
            <summary>Field number for the "session_id" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.ApplicationFieldNumber">
            <summary>Field number for the "application" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.WhenNanoFieldNumber">
            <summary>Field number for the "when_nano" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.EntryNsFieldNumber">
            <summary>Field number for the "entry_ns" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.MigrateEntryFieldNumber">
            <summary>Field number for the "migrate_entry" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.WriteEntryFieldNumber">
            <summary>Field number for the "write_entry" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.ModifyPropvalFieldNumber">
            <summary>Field number for the "modify_propval" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.SetPropsetFieldNumber">
            <summary>Field number for the "set_propset" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.TagEntryFieldNumber">
            <summary>Field number for the "tag_entry" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.ModifyPropdefFieldNumber">
            <summary>Field number for the "modify_propdef" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.DboptionFieldNumber">
            <summary>Field number for the "dboption" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.ReleaseFieldNumber">
            <summary>Field number for the "release" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.DigitalSignatureFieldNumber">
            <summary>Field number for the "digital_signature" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.VersioningFieldNumber">
            <summary>Field number for the "versioning" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.LinkEntryFieldNumber">
            <summary>Field number for the "link_entry" field.</summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityMessage.LockEntryFieldNumber">
            <summary>Field number for the "lock_entry" field.</summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityMessage.DetailsOneofCase">
            <summary>Enum of possible cases for the "details" oneof.</summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.AnnotationActivity">
            <summary>
            Base type for types that represent annotation related activity records.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.EntryPath">
            <summary>
            Gets the repository path to the document that activity occurred in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document that the activity occurred in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.EntryId">
            <summary>
            Gets the entry ID of the document that the activity occurred in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.ParentId">
            <summary>
            Gets the entry ID of the parent folder of the document that the activity
            occurred in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.PageId">
            <summary>
            Gets the ID of the page the associated annotation is on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.PageNumber">
            <summary>
            Gets the page number of the page in the document the associated annotation is on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.AnnotationType">
            <summary>
            Gets a member of the <c>AnnotationType</c> enumeration which specifies the
            type of annotation involved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.AnnotationId">
            <summary>
            Gets the repository-wide unique ID of the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AnnotationActivity.ItemId">
            <summary>
            Gets the item ID of the annotation, which is an identifier that is unique
            on the page.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.AssignTagActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry tag assignment activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.EntryId">
            <summary>
            Gets the ID of the entry that was assigned a tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.EntryPath">
            <summary>
            Gets the repository path to the entry that was assigned a tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry that was assigned a tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the entry that was assigned the tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.TagId">
            <summary>
            Gets the ID of the tag that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.TagName">
            <summary>
            Gets the name of the tag that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTagActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration indicating the type of
            entry that was assigned a tag.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry template assignment activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.EntryId">
            <summary>
            Gets the ID of the entry that was assigned a template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.EntryPath">
            <summary>
            Gets the repository path to the entry that was assigned a template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry that was assigned a template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the entry that was assigned a template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.OldTemplateId">
            <summary>
            Gets the ID of the template that was previously assigned to the entry,
            or 0 if no template was previously assigned.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.OldTemplateName">
            <summary>
            Gets the name of the template that was previously assigned to the entry,
            or the empty string if no template was previously assigned.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.TemplateId">
            <summary>
            Gets the ID of the template that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.TemplateName">
            <summary>
            Gets the name of the template that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.AssignTemplateActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration which specifies the type
            of entry that a template was assigned to.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CopyPageActivity">
            <summary>
            Represents a Laserfiche activity log record for a copy page activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.SourceEntryUuid">
            <summary>
            Gets the UUID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.SourceEntryPath">
            <summary>
            Gets the repository path to the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.SourceEntryId">
            <summary>
            Gets the ID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestinationEntryPath">
            <summary>
            Gets the repository path to the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestinationEntryUuid">
            <summary>
            Gets the UUID of the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestinationEntryId">
            <summary>
            Gets the ID of the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestinationEntryParentId">
            <summary>
            Gets the entry ID of the parent of the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.StartPageNumber">
            <summary>
            Gets the starting page number in the source document that was copied.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.EndPageNumber">
            <summary>
            Gets the ending page number in the source document that was copied.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestPageNumber">
            <summary>
            Gets the destination page number. An alias for <c>DestinationPageNumber</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyPageActivity.DestinationPageNumber">
            <summary>
            Gets the destination page number.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CreateAnnotationActivity">
            <summary>
            Represents an annotation creation activity.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity">
            <summary>
            Represents a Laserfiche activity log record for digitally signing a document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity.EntryId">
            <summary>
            Gets the entry ID of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity.EntryPath">
            <summary>
            Gets the repository path to the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateDocumentSignatureActivity.SignatureId">
            <summary>
            Gets the ID of the digital signature that was created.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CreatePageActivity">
            <summary>
            Represents a Laserfiche activity log record for a create page activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.EntryPath">
            <summary>
            Gets the repository path to the document in which the page was created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.EntryId">
            <summary>
            Gets the entry ID of the document in which the page was created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document in which the page was created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document in which the page was
            created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.PageNumber">
            <summary>
            Gets the number of the page that was created in the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreatePageActivity.PageId">
            <summary>
            Gets the ID of the page that was created.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.DeleteAnnotationActivity">
            <summary>
            Represents a Laserfiche activity log record for a delete annotation activity.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity">
            <summary>
            Represents a Laserfiche activity log record for a delete document digital
            signature activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity.EntryId">
            <summary>
            Gets the entry ID of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity.EntryPath">
            <summary>
            Gets the repository path to the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document that was signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteDocumentSignatureActivity.SignatureId">
            <summary>
            Gets the ID of the digital signature that was deleted.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.DeletePageActivity">
            <summary>
            Represents a Laserfiche activity log record for a delete document page or
            page range activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.EntryPath">
            <summary>
            Gets the repository path to the document that contained the deleted page(s).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.EntryId">
            <summary>
            Gets the entry ID of the document that contained the deleted page(s).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document that contained the deleted page(s).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document that contained the
            deleted page(s).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.StartPageNumber">
            <summary>
            Gets the page number of the first page in the deleted page range.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeletePageActivity.EndPageNumber">
            <summary>
            Gets the page number of the last page in the deleted page range.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry link creation
            or modification activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.LinkTypeId">
            <summary>
            Gets the entry link type ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.LinkNotes">
            <summary>
            Gets the entry link notes/comments.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.TargetEntryType">
            <summary>
            Gets the type of the target entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.TargetUuid">
            <summary>
            Gets the UUID of the target entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.TargetId">
            <summary>
            Gets the ID of the target entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.TargetParentId">
            <summary>
            Gets the ID of the target entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.TargetPath">
            <summary>
            Gets the path to the target entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.SourceEntryType">
            <summary>
            Gets the type of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.SourceUuid">
            <summary>
            Gets the UUID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.SourceId">
            <summary>
            Gets the ID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.SourceParentId">
            <summary>
            Gets the ID of the source entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.EntryLinkActivity.SourcePath">
            <summary>
            Gets the path to the source entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.LockEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry lock operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.EntryId">
            <summary>
            The ID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.EntryType">
            <summary>
            The type of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.EntryUuid">
            <summary>
            The UUID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.ParentId">
            <summary>
            The ID of the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.Path">
            <summary>
            The path to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.LockToken">
            <summary>
            The lock token, which uniquely identifies the entry lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.LockTimeout">
            <summary>
            The entry lock's timeout, in seconds.  A negative value indicates no timeout.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.LockScope">
            <summary>
            A code indicating the scope of the entry lock (exclusive, shared, etc.).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.LockDepth">
            <summary>
            A code indicating the depth of the lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.LockEntryActivity.IsLockPersistent">
            <summary>
            A boolean indicating if the lock perists across session termination.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry migration activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.EntryPath">
            <summary>
            Gets the repository path to the migrated entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.EntryId">
            <summary>
            Gets the ID of the migrated entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.EntryUuid">
            <summary>
            Gets the UUID of the migrated entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.ParentId">
            <summary>
            Gets the entry ID of the migrated entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.SourceVolumeId">
            <summary>
            Gets the ID of the source volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.DestinationVolumeId">
            <summary>
            Gets the ID of the destination volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.SourceVolumeName">
            <summary>
            Gets the name of the source volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.DestinationVolumeName">
            <summary>
            Gets the name of the destination volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MigrateDocumentActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration, which indicates the type of
            entry that was migrated.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ModifyAnnotationActivity">
            <summary>
            Represents a Laserfiche activity log record for a modify annotation activity.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity">
            <summary>
            Represents a Laserfiche activity log record for a move annotation between pages
            activity.  The pages may be in different documents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.SourceEntryPath">
            <summary>
            Gets the repository path to the document containing the source page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.SourceEntryUuid">
            <summary>
            Gets the entry UUID of the document containing the source page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.SourceEntryId">
            <summary>
            Gets the entry ID of the document containing the source page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationEntryPath">
            <summary>
            Gets the repository path to the document containing the destination page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationEntryUuid">
            <summary>
            Gets the entry UUID of the document containing the destination page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationEntryId">
            <summary>
            Gets the entry ID of the document containing the destination page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationEntryParentId">
            <summary>
            Gets the entry ID of the destination document's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.SourcePageNumber">
            <summary>
            Gets the page number of the source page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationPageNumber">
            <summary>
            Gets the page number of the destination page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.AnnotationType">
            <summary>
            Gets a member of the <c>AnnotationType</c> enumeration which specifies the
            type of annotation that was moved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.SourceItemId">
            <summary>
            Gets the item ID of the annotation on the source page before moving.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveAnnotationActivity.DestinationItemId">
            <summary>
            Gets the item ID of the annotation on the destination page after moving.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.MovePageActivity">
            <summary>
            Represents a Laserfiche activity log record for a move page or move page range activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.SourceEntryUuid">
            <summary>
            Gets the entry UUID of the source document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.SourceEntryPath">
            <summary>
            Gets the repository path to the source document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.SourceEntryId">
            <summary>
            Gets the entry ID of the source document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.DestinationEntryPath">
            <summary>
            Gets the repository path to the destination document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.DestinationEntryUuid">
            <summary>
            Gets the entry UUID of the destination document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.DestinationEntryId">
            <summary>
            Gets the entry ID of the destination document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.DestinationEntryParentId">
            <summary>
            Gets the entry ID of the destination document's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.StartPageNumber">
            <summary>
            Gets the page number of the first page in the source range that was moved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.EndPageNumber">
            <summary>
            Gets the page number of the last page in the source range that was moved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MovePageActivity.DestinationPageNumber">
            <summary>
            Gets the page number in the destination document to which the page or pages
            were moved.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity">
            <summary>
            Represents a Laserfiche activity log record for a set field value activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.EntryId">
            <summary>
            Gets the ID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.EntryPath">
            <summary>
            Gets the repository path to the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.FieldId">
            <summary>
            Gets the ID of the template field referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.FieldName">
            <summary>
            Gets the name of the template field referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration which specifies the type of
            entry that had a field value set.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.SetFieldValueActivity.FieldType">
            <summary>
            Gets a member of the <c>FieldType</c> enumeration which denotes the type of
            field that had its value set.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity">
            <summary>
            Represents a Laserfiche activity log record for an unassign tag activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.EntryId">
            <summary>
            Gets the ID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.EntryPath">
            <summary>
            Gets the repository path to the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.TagId">
            <summary>
            Gets the ID of the tag that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.TagName">
            <summary>
            Gets the name of the tag that was assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.UnassignTagActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration specifying the type of
            entry the tag was assigned to.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity">
            <summary>
            Represents a Laserfiche activity log record for a remove field value activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.EntryId">
            <summary>
            Gets the ID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.EntryPath">
            <summary>
            Gets the repository path to the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.ParentId">
            <summary>
            Gets the entry ID of the parent folder of the entry referenced in the activity
            log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.FieldId">
            <summary>
            Gets the ID of the field that was removed from the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.FieldName">
            <summary>
            Gets the name of the field that was removed from the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration that specifies the type
            of entry referenced in the activity log record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RemoveFieldValueActivity.FieldType">
            <summary>
            Gets a member of the <c>FieldType</c> enumeration which denotes the type of
            field that had its value set.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.VersioningActivityType">
            <summary>
            An enumeration of versioning related activity types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityType.PutUnderVersionControl">
            <summary>
            The activity corresponds to a request to put a document under version control.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityType.CheckIn">
            <summary>
            The activity corresponds to a request to check in a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.VersioningActivityType.CheckOut">
            <summary>
            The activity corresponds to a request to check out a document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.VersioningActivity">
            <summary>
            Represents a Laserfiche activity log record for a number of versioning
            related activities in Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.EntryId">
            <summary>
            Gets the entry ID of the document involved in the activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.EntryPath">
            <summary>
            Gets the repository path to the document involved in the activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document involved in the activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document involved in the activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.Version">
            <summary>
            Gets the version number of the entry involved in the activity, if applicable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.VersioningActivity.Action">
            <summary>
            Gets a member of the <c>VersioningActivityType</c> enumeration that indicates
            the type of versioning related activity that occurred.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity">
            <summary>
            Represents a Laserfiche activity log record for a write alternate
            electronic document content activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity.EntryPath">
            <summary>
            Gets the repository path to the document containing the alternate
            electronic document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity.EntryId">
            <summary>
            Gets the entry ID of the document containing the alternate electronic
            document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document containing the alternate electronic
            document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document containing the alternate
            electronic document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteAltEdocActivity.AlternateEdocName">
            <summary>
            Gets the name of the alternate electronic document stream.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.WriteEdocActivity">
            <summary>
            Represents a Laserfiche activity log record for a write electronic document
            content activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteEdocActivity.EntryPath">
            <summary>
            Gets the repository path to the document containing the electronic
            document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteEdocActivity.EntryId">
            <summary>
            Gets the entry ID of the document containing the electronic document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteEdocActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document containing the electronic document stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WriteEdocActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document containing the electronic
            document stream.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.WritePageActivity">
            <summary>
            Represents a Laserfiche activity log record for a write page part
            content activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.EntryPath">
            <summary>
            Gets the repository path to the document containing the page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.EntryId">
            <summary>
            Gets the entry ID of the document containing the page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.EntryUuid">
            <summary>
            Gets the entry UUID of the document containing the page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.ParentId">
            <summary>
            Gets the entry ID of the parent of the document containing the page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.PageNumber">
            <summary>
            Gets the page number of the page part in the document that was written to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.PageId">
            <summary>
            Gets the page ID of the page part that was written to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.WritePageActivity.PagePart">
            <summary>
            Gets a member of the <c>PagePart</c> enumeration which specifies the page part
            that was written to.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityLogReader">
            <summary>
            Reads a Laserfiche repository activity log and constructs
            <c>ActivityRecord</c> instances from the log data.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.GetActivityRecord(System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves an <c>ActivityRecord</c> instance which represents an activity
            record in a Laserfiche repository activity log.
            </summary>
            <param name="asn">The ASN to read</param>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
            <returns>An <c>ActivityRecord</c> instance which represents an activity
            record in a Laserfiche repository activity log.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>ActivityLogReader</c> instance configured to read the
            entire activity log in ascending order.
            </summary>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.#ctor(Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>ActivityLogReader</c> instance configured to read the
            entire activity log in the specified order.
            </summary>
            <param name="sortDirection">A member of <c>SortDirection</c> which specifies
            which order to read the activity log in.</param>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.#ctor(System.Guid,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>ActivityLogReader</c> instance configured to read activity
            log records pertaining to an entry with the specified UUID.
            </summary>
            <param name="entryUuid">The UUID of the entry to filter on</param>
            <param name="sortDirection">A member of <c>SortDirection</c> which specifies
            which order to read the activity log in.</param>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.#ctor(System.Int32,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>ActivityLogReader</c> instance configured to read activity
            log records pertaining to an entry with the specified ID.
            </summary>
            <param name="entryId">The ID of the entry to filter on</param>
            <param name="sortDirection">A member of <c>SortDirection</c> which specifies
            which order to read the activity log in.</param>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.#ctor(System.Int64,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>ActivityLogReader</c> instance configured to read activity
            log records in the specified range of activity sequence numbers (ASN).  If the
            <paramref name="startAsn"/> parameter is greater than the <paramref name="endAsn"/>
            parameter, the records are returned descending order by ASN.
            </summary>
            <param name="startAsn">The starting ASN to read from.</param>
            <param name="endAsn">The ending ASN to read to. -1 as meaning end of log.</param>
            <param name="session">The <c>Session</c> instance to connect to
            Laserfiche with.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.Session">
            <summary>
            Gets the <c>Session</c> instance used to connect to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.Close">
            <summary>
            Closes the reader and releases all acquired resources.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.Read">
            <summary>
            Reads the next activity log record from the Laserfiche activity log.
            </summary>
            <returns>True if a record was read, false if EOF was reached.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.Reset">
            <summary>
            Resets the activity log and begins reading from the beginning of
            the selected range.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.Item">
            <summary>
            Gets an instance of <c>ActivityRecord</c> which represents the current
            activity log record being read.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityLogReader.GetEnumerator">
            <summary>
            Returns an enumerator over the entries in the activity log.
            </summary>
            <returns>An enumerator over the entries in the activity log.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityType">
            <summary>
            An enumeration of Laserfiche repository activity types.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityTypeConverter">
            <summary>
            A set of utility methods to convert between <c>ActivityType</c> enumeration values
            and activity masks.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityTypeConverter.ActivityTypeToMask(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Returns an activity mask that has only the given <c>ActivityType</c> member
            set.
            </summary>
            <param name="activity">A member of the <c>ActivityType</c> enumeration.</param>
            <returns>An activity mask that has only the given <c>ActivityType</c> member
            set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityTypeConverter.ActivityTypesToMask(Laserfiche.RepositoryAccess.Activity.ActivityType[])">
            <summary>
            Returns an activity mask that has only the given <c>ActivityType</c> members
            set.
            </summary>
            <param name="activities">An array of <c>ActivityType</c> values that will
            be present in the returned mask.</param>
            <returns>An activity mask that has only the given <c>ActivityType</c> members
            set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityTypeConverter.HasActivityType(System.Int32,Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Returns true if the given activity mask has the given <c>ActivityType</c>
            enumeration value set.
            </summary>
            <param name="mask">An activity mask to check.</param>
            <param name="at">A member of the <c>ActivityType</c> enumeration.</param>
            <returns>True if the given activity mask has the given <c>ActivityType</c>
            enumeration value set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityTypeConverter.MaskToActivityTypes(System.Int32)">
            <summary>
            Returns an array of <c>ActivityType</c> values corresponding to the given
            activity mask.
            </summary>
            <param name="mask">An activity mask to decode.</param>
            <returns>An array of <c>ActivityType</c> values corresponding to the given
            activity mask.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityRecordSource">
            <summary>
            The source of the activity record. Some ActivityRecord properties are not valid from the notification source.
            View the Remarks of the ActivityRecord class to see which properties are not valid.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityRecordSource.Unknown">
            <summary>
            The activity record source is not known.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityRecordSource.ActivityLog">
            <summary>
            The activity record is populated with data from the activity log.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.ActivityRecordSource.Notification">
            <summary>
            The activity record is populated with data from a notification.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ActivityRecord">
            <summary>
            Base class for types which represent Laserfiche activity log records.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.Activity.ActivityRecord" /> class.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityRecord.RecordSource">
            <summary>
            Gets the activity record source.
            </summary>
            <value>
            The record source.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityRecord.ActivityType">
            <summary>
            Gets a member of the <c>ActivityType</c> enumeration, which specifies the
            type of Laserfiche activity this record was generated from.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityRecord.SequenceNumber">
            <summary>
            Gets the Laserfiche activity log sequence number (ASN) for this record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityRecord.UserSid">
            <summary>
            Gets the SID of the user that initiated the activity for this record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ActivityRecord.IsPartialRecord">
            <summary>
            Gets or sets a value indicating whether this instance is from a notification and is not 
            the full activity record.
            </summary>
            <value>
            <c>True</c> if this instance contains unloaded data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityRecord.FromXml(System.Xml.XmlReader)">
            <summary>
            Creates the activity record from XML.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ActivityRecord.ParseFromNotification(Laserfiche.RepositoryAccess.Activity.Notification)">
            <summary>
            Parses the activity record from notification data.
            </summary>
            <param name="notification">The notification.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for a copy entry activity.
            </summary>
            <remarks>The DestinationParentUuid, DestinationParentId may not be valid
            when retrieved from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationUuid">
            <summary>
            Gets the UUID of the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationId">
            <summary>
            Gets the ID of the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationParentId">
            <summary>
            Gets the ID of the destination parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationPath">
            <summary>
            Gets the path to the destination entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationParentPath">
            <summary>
            Gets the path to the destination parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.DestinationParentUuid">
            <summary>
            Gets the UUID of the destination parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.EntryType">
            <summary>
            Gets the type of the copied entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourceUuid">
            <summary>
            Gets the UUID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourceId">
            <summary>
            Gets the ID of the source entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourceParentPath">
            <summary>
            Gets the path to the source parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourceParentUuid">
            <summary>
            Gets the UUID of the source parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourceParentId">
            <summary>
            Gets the ID of the source parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CopyEntryActivity.SourcePath">
            <summary>
            Gets the path to the source entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for a create entry activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.EntryId">
            <summary>
            The ID of the new entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.EntryType">
            <summary>
            The type of the new entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.EntryUuid">
            <summary>
            The UUID of the new entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.ParentId">
            <summary>
            The ID of the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.ParentPath">
            <summary>
            The path to the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.ParentUuid">
            <summary>
            The UUID of the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.Path">
            <summary>
            The path to the new entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.IsLocked">
            <summary>
            True if the entry was locked upon creation, false if it was not locked,
            or null if the locked status is not available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.CreateEntryActivity.LockToken">
            <summary>
            The lock token for the entry, if the entry was locked upon creation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for a delete entry activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.EntryId">
            <summary>
            Gets the ID of the deleted entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.EntryType">
            <summary>
            Gets the type of deleted entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.EntryUuid">
            <summary>
            Gets the UUID of the deleted entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.ParentId">
            <summary>
            Gets the ID of the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.ParentPath">
            <summary>
            Gets the path to the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.ParentUuid">
            <summary>
            Gets the UUID of the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.Path">
            <summary>
            Gets the path to the deleted entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.TargetUuid">
            <summary>
            Gets the UUID of the target entry if the deleted entry was a shortcut.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteEntryActivity.TargetId">
            <summary>
            Gets the ID of the target entry if the deleted entry was a shortcut.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.DeleteFieldActivity">
            <summary>
            Represents a Laserfiche activity log record for a delete template field activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteFieldActivity.FieldName">
            <summary>
            Gets the name of the deleted template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.DeleteFieldActivity.FieldId">
            <summary>
            Gets the ID of the deleted template field.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationException">
            <summary>
            Represents an error in the notification client.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationException.#ctor">
            <summary>
            Initializes a <c>NotificationException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationException.#ctor(System.String)">
            <summary>
            Initializes a <c>NotificationException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>NotificationException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ModifyRepositoryOptionActivity">
            <summary>
            Represents a Laserfiche activity log record for a modify repository option activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyRepositoryOptionActivity.OptionName">
            <summary>
            Gets the name of the modified repository option.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity">
            <summary>
            Represents a Laserfiche activity log record for a modify template
            field definition activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.FieldName">
            <summary>
            Gets the name of the modified template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.FieldId">
            <summary>
            Gets the ID of the modified template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.NewFieldFlags">
            <summary>
            Gets the new template field flags.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.NewFieldType">
            <summary>
            Gets the new template field type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.NewFieldLength">
            <summary>
            Gets the new template field length.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.OldFieldFlags">
            <summary>
            Gets the previous template field flags.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.OldFieldType">
            <summary>
            Gets the previous template field type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.OldFieldLength">
            <summary>
            Gets the previous template field length.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ModifyFieldActivity.OldFieldName">
            <summary>
            Gets the previous template field name.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for a move entry activity.
            </summary>
            <remarks>The DestinationParentUuid, DestinationParentId, SourceParentId,
            SourceParentUuid may not be valid when retrieved from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.DestinationParentId">
            <summary>
            Gets the ID of the destination parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.DestinationParentPath">
            <summary>
            Gets the path to the destination parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.DestinationParentUuid">
            <summary>
            Gets the UUID to the destination parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.DestinationPath">
            <summary>
            Gets the path to the destination.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.EntryId">
            <summary>
            Gets the ID of the moved entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.EntryType">
            <summary>
            Gets the type of the moved entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.EntryUuid">
            <summary>
            Gets the UUID of the moved entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.SourceParentId">
            <summary>
            Gets the ID of the source parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.SourceParentPath">
            <summary>
            Gets the path to the source parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.SourceParentUuid">
            <summary>
            Gets the UUID of the source parent folder.
            </summary>
            <remarks>This property may not be valid when the RecordSource is from a notification.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.MoveEntryActivity.SourcePath">
            <summary>
            Gets the path to the source entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.Notification">
            <summary>
            Represents a Laserfiche repository notification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.SubscriptionId">
            <summary>
            Gets the subscription ID corresponding to this notification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.ActivityMessage">
            <summary>
            Gets the underlying <c>ActivityMessage</c>, if the notification was reported using one.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.SequenceNumber">
            <summary>
            Gets the sequence number of this notification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.MissedNotifications">
            <summary>
            Gets the number of notifications that were missed since the last notification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.ActivityType">
            <summary>
            Gets a member of the <c>ActivityType</c> enumeration which indicates the type
            of activity that triggered this notification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.Notification.SessionId">
            <summary>
            Gets the ID of the Laserfiche session that initiated the activity that triggered
            this notification.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.Notification.GetActivityRecord">
            <summary>
            Returns an <c>ActivityRecord</c>-derived type instance containing the
            information about the activity that triggered the represented notification.
            </summary>
            <returns>An <c>ActivityRecord</c>-derived type instance containing the
            information about the activity that triggered the represented notification.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.Notification.CreateFromActivityMessage(Laserfiche.RepositoryAccess.Activity.ActivityMessage)">
            <summary>
            Creates the notification using an ActivityMessage.  ActivityMessage is typically constructed from data sent to an external queue using ActivityMessage.ParseFrom.
            </summary>
            <param name="message">The message received from an activity notification queue or HTTP listener.</param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings">
            <summary>
            Settings which specify which Laserfiche activity notifications to subscribe to.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.#ctor">
            <summary>
            Initializes an instance of <c>NotificationSubscriptionSettings</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.Entry">
            <summary>
            Gets or sets the <c>EntryInfo</c> instance representing the entry used
            as the base for activities to subscribe to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.Scope">
            <summary>
            Gets or sets a member of the <c>NotificationSubscriptionScope</c> enum,
            specifying the scope of activity notifications to subscribe to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.Activities">
            <summary>
            Gets or sets the activity mask specifying what types of activities to
            receive notifications about.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.Options">
            <summary>
            Gets or sets options which control the activity notification subscription.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.ActivityVector">
            <summary>
            Gets a reference to a bit vector indicating which activitites should generate
            a notification.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.AddActivity(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Enables the corresponding bit in the activity vector for the specified activity.
            </summary>
            <param name="activityType">A member of the <c>ActivityType</c> enumeration
            specifying the activity.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.RemoveActivity(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Disables the corresponding bit in the activity vector for the specified activity.
            </summary>
            <param name="activityType">A member of the <c>ActivityType</c> enumeration
            specifying the activity.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.RemoveAllActivities">
            <summary>
            Clears all bits (sets to 0) in the activity vector.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings.IsActivitySetInVector(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Returns true if the corresponding bit in the activity vector is set, false otherwise.
            </summary>
            <param name="activityType">A member of the <c>ActivityType</c> enumeration
            specifying the activity.</param>
            <returns>True if the corresponding bit in the activity vector is set, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.QueuingSystem">
            <summary>
            An enumeration of external message queuing system types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.QueuingSystem.Msmq">
            <summary>
            Microsoft Message Queuing (MSMQ)
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.QueuingSystem.AwsSqs">
            <summary>
            Amazon Web Services (AWS) Simple Queuing System (SQS)
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.QueuingSystem.RabbitMQ">
            <summary>
            RabbitMQ
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings">
            <summary>
            Specifies the external message queue settings that <c>Laserfiche</c>
            will use when enqueuing activity notifications.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings.#ctor">
            <summary>
            Initializes an instance of <c>ExternalQueueSettings</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings.QueuePath">
            <summary>
            Gets or sets the queue identifier that <c>Laserfiche</c> can use to
            open the queue to send messages.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings.QueuingSystem">
            <summary>
            Gets or sets which type of message queuing system to use to send messages.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings.ApplicationData">
            <summary>
            Gets or sets the application data that will be included in every message.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings.Options">
            <summary>
            Gets or sets the options to pass to <c>Laserfiche</c> to control how
            it interacts with the external message queuing system.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationManager">
            <summary>
            Manages notification subscriptions and receives notifications from a
            Laserfiche repository for a single Laserfiche session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.IsConnected">
            <summary>
            Gets a boolean indicating if this instance is connected to Laserfiche and
            ready to subscribe to and receive notifications. The state of this property
            is only updated after calling <c>Connect</c>, <c>Disconnect</c>,
            <c>WaitForNotification</c>, and <c>TryGetNotification</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.ErrorCode">
            <summary>
            Gets the last error code received from the Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.ErrorMessage">
            <summary>
            Gets the last error message received from the Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.QueuedNotificationsCount">
            <summary>
            Gets the number of queued notifications that are waiting to be dequeued.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.Subscriptions">
            <summary>
            Gets the current notification subscriptions being managed by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.SubscriptionCount">
            <summary>
            Gets the number of active subscriptions being managed by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.Session">
            <summary>
            Gets the <c>Session</c> instance associated with this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>NotificationManager</c> instance using the specified session.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Connect">
            <summary>
            Connects to the Laserfiche repository so it is prepared to subscribe
            to and receive notifications.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Disconnect">
            <summary>
            Disconnects from the Laserfiche repository and frees all resources allocated
            for this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.EnqueueNotifications">
            <summary>
            Reads any pending notifications from the network
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.TryGetSubscription(System.Int32)">
            <summary>
            Returns a <c>NotificationSubscription</c> instance which describes the
            subscription information for the specified subscription ID for the current
            <c>NotificationManager</c> instance.
            </summary>
            <param name="subscriptionId">The subscription ID of the
            <c>NotificationSubscription</c> instance to get.</param>
            <returns>A <c>NotificationSubscription</c> instance with the specified ID
            or null if no such subscription was found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.TryGetNotification">
            <summary>
            Checks to see if a notification is pending, and if there is returns a
            <c>Notification</c> instance representing the notification.  If no
            notification is pending null is returned.  This method returns without
            waiting for a notification to be received.
            </summary>
            <returns>A <c>Notification</c> instance representing the next pending
            notification or null if there is none.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.WaitForNotification(System.TimeSpan)">
            <summary>
            Returns a <c>Notification</c> instance which represents the next pending
            notification.  This method waits for the specified period for a notification
            to be received if there are no pending notifications to return immediately.
            If no notification can be read within the specified timeout, null is returned.
            </summary>
            <param name="timeout">A <c>TimeSpan</c> value indicating how long to
            wait for a notification to be received.</param>
            <returns>A <c>Notification</c> instance which represents the next pending
            notification or null if there is no such notification.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.WaitForNotification(System.Int32)">
            <summary>
            Returns a <c>Notification</c> instance which represents the next pending
            notification.  This method waits for the specified period for a notification
            to be received if there are no pending notifications to return immediately.
            If no notification can be read within the specified timeout, null is returned.
            </summary>
            <param name="milliseconds">An <c>int</c> value indicating how long to
            wait for a notification to be received.</param>
            <returns>A <c>Notification</c> instance which represents the next pending
            notification or null if there is no such notification.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.WaitForNotification">
            <summary>
            Returns a <c>Notification</c> instance which represents the next pending
            notification.  This method waits indefinitely until a notification
            is be received if there are no pending notifications to return immediately.
            </summary>
            <returns>A <c>Notification</c> instance which represents the next pending
            notification.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.CancelWait">
             <summary>
             Cancels blocking notification retrieval operations initiated by calls to
             <c>WaitForNotification</c>.
             </summary>
             <remarks>
             This method is asynchronous and the call to <c>WaitForNotification</c> may
             return before or after <c>CancelWait</c> returns.  This method is thread-safe.
             Clients should wait for <c>WaitForNotification</c> to return before attempting
             to make any additional method calls from any thread to the instance.  Callers
             do not have to wait for <c>CancelWait</c> to return before making additional calls,
             if <c>WaitForNotification</c> has returned.
            
             Calling <c>CancelWait</c> when there are no blocked calls to
             <c>WaitForNotification</c> will do nothing successfully.  However, calls to
             <c>WaitForNotification</c> made after <c>CancelWait</c> is called may be
             canceled while <c>CancelWait</c> is still in progress.
             
             <c>CancelWait</c> has no effect on operations besides <c>WaitForNotification</c>
             and cannot be used to cancel subscription change operations.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Subscribe(Laserfiche.RepositoryAccess.Activity.NotificationActivities,Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions)">
            <summary>
            Subscribes to notifications for the Laserfiche repository activities meeting
            the specified criteria.
            </summary>
            <param name="activities">Members of <c>NotificationActivities</c>
            which specify which kinds of server activities to subscribe to notifications for.</param>
            <param name="options">Options which affect which activities to
            subscribe to.</param>
            <returns>A <c>NotificationSubscription</c> instance which represents
            the subscription.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Subscribe(Laserfiche.RepositoryAccess.EntryInfo,Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionScope,Laserfiche.RepositoryAccess.Activity.NotificationActivities,Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions)">
            <summary>
            Subscribes to notifications for the Laserfiche repository activities meeting
            the specified criteria.
            </summary>
            <param name="entry">The entry or root folder to receive notifications about.</param>
            <param name="scope">The scope of the entry namespace to receive notifications about.</param>
            <param name="activities">Members of <c>NotificationActivities</c>
            which specify which kinds of server activities to subscribe to notifications for.</param>
            <param name="options">Options which affect which activities to
            subscribe to.</param>
            <returns>A <c>NotificationSubscription</c> instance which represents
            the subscription.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Subscribe(Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings)">
            <summary>
            Subscribes to notifications for the Laserfiche repository activities meeting
            the specified criteria.
            </summary>
            <param name="settings">The criteria for which activities to subscribe to,
            and other options controlling the subscription.</param>
            <returns>A <c>NotificationSubscription</c> instance which represents
            the subscription.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.StartExternalQueue(Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionSettings,Laserfiche.RepositoryAccess.Activity.ExternalQueueSettings)">
            <summary>
            Subscribes to notifications for the Laserfiche repository activities meeting
            the specified criteria, and begins the process of enqueuing messages containing
            notifications to an external message queuing system.
            </summary>
            <param name="subSettings">The criteria for which activities to subscribe to,
            and other options controlling the subscription.</param>
            <param name="queueSettings">The settings for where and how <c>Laserfiche</c>
            should enqueue notification messages.</param>
            <returns>A <c>NotificationSubscription</c> instance which represents
            the subscription.</returns>
            <remarks>
            There must be no active subscriptions when this method is called.  After this
            method returns successfully, call <c>Subscribe</c> to create new subscriptions.
            Notifications for all active subscriptions will be sent using messages to
            the same external queue.
            
            This method is not supported when LRNP is being used.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.ParseNotificationsFromExternalQueue(System.IO.Stream)">
            <summary>
            Parse an incoming stream containing notification data in binary form and 
            return the extracted notifications.
            </summary>
            <param name="notificationData">The binary stream containing notification data. </param>
            <returns>A <c>List</c> of <c>Notification</c> instance which represents 
            the notifications extracted from the input stream.</returns>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationManager.MaxExternalQueueNotifications">
            <summary>
             Maximum number of notifications can be sent in one external queue message.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.ParseNotificationsFromExternalQueue(System.IO.Stream,System.Collections.Generic.IList{Laserfiche.RepositoryAccess.Activity.Notification})">
            <summary>
            Parse an incoming stream containing notification data in binary form and 
            return the extracted notifications.
            </summary>
            <param name="notificationData">The binary stream containing notification data. </param>
            <param name="resultNotifications">A <c>IList</c> of <c>Notification</c> instance which 
            will be used to host the notifications extracted from the input stream.</param>
            <returns>Number of notifications extracted. </returns>
            <remarks>
            If the size of the <c>IList</c> passing in is smaller than the number of notifications extracted 
            from the notification data, an <c>ArgumentOutOfRangeException</c> will be thrown. Nothing will be 
            written to to <c>IList</c> in that case and the stream will no longer be at the begining.
            Note that only <c>MaxExternalQueueNotifications</c> of notifications will be sent in one batch,
            so an <c>IList</c> of that size should be enough to hold all extracted notifications.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.ChangeSubscription(System.Int32,Laserfiche.RepositoryAccess.Activity.NotificationActivities,System.Collections.BitArray)">
            <summary>
            Changes the filtering criteria for an existing Laserfiche activity notification subscription.
            </summary>
            <param name="subscriptionId">The ID of an existing subscription to change.</param>
            <param name="newActivities">Members of <c>NotificationActivities</c> which
            specify the set of server activities to subscribe to.  Overwrites the old set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.ChangeSubscription(Laserfiche.RepositoryAccess.Activity.NotificationSubscription,Laserfiche.RepositoryAccess.Activity.NotificationActivities,System.Collections.BitArray)">
            <summary>
            Changes the filtering criteria for an existing Laserfiche activity notification subscription.
            </summary>
            <param name="subscription">A <c>NotificationSubscription</c> instance representing the
            subscription to update.</param>
            <param name="newActivities">Members of <c>NotificationActivities</c> which
            specify the set of server activities to subscribe to.  Overwrites the old set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Unsubscribe(Laserfiche.RepositoryAccess.Activity.NotificationSubscription)">
            <summary>
            Unsubscribes from receiving the specified Laserfiche activity notifications.
            </summary>
            <param name="subscription">A <c>NotificationSubscription</c> instance which
            specifies which subscription to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Unsubscribe(System.Int32)">
            <summary>
            Unsubscribes from receiving the specified notifications.
            </summary>
            <param name="subscriptionId">The ID of the notification subscription
            to unsubscribe from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.NotificationManager.Shutdown">
            <summary>
            Unsubscribes all managed notifications, and shuts down the LRNP session
            and connection.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationManager.InternalCode">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionScope">
            <summary>
            An enumeration to specify the scope of entries in the entry namespace
            to receive notifications for.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionScope.All">
            <summary>
            Receive notifications regarding all entries in the repository.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionScope.FolderTree">
            <summary>
            Receive notifications regarding entries that are located in a specified folder tree.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionScope.SingleEntry">
            <summary>
            Receive notifications regarding a specified entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationActivities">
            <summary>
            An enumeration of activity types which notifications may be sent regarding.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions">
            <summary>
            An enumeration of flags to control notification subscription operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions.OtherSessionsOnly">
            <summary>
            Only receive notifications for operations that occurred in other sessions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Activity.NotificationSubscriptionOptions.IndexedEntriesOnly">
            <summary>
            Only receive notifications for entries which are marked as indexed.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.NotificationSubscription">
            <summary>
            Represents a subscription to Laserfiche repository activity notifications.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.Id">
            <summary>
            Gets the ID of the represented repository activity notification subscription.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.Scope">
            <summary>
            Gets the scope of the repository activity notification subscription in the
            entry namespace.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.Activities">
            <summary>
            Gets an activity mask which indicates the activities that are being subscribed to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.ActivityVector">
            <summary>
            Gets a bit vector indicating the full set of activites that are being subscribted to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.Options">
            <summary>
            Gets members of the <c>NotificationSubscriptionOptions</c> enumeration which
            specify the options that control the activity notification subscription.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.NotificationSubscription.EntryObject">
            <summary>
            Gets the <c>EntryInfo</c> instance associated with the represented activity
            notification subscription.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.LrnpSession.SendCloseFrame(System.Int32,Laserfiche.RepositoryAccess.Activity.MessageType,System.String)">
            <summary>
            Sends the close frame to the server for the given channel but does not wait for the reply.
            </summary>
            <param name="channelNo">The channel no.</param>
            <param name="type">The type.</param>
            <param name="payLoad">The pay load.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for an entry RELEASE notification.
            RELEASE notifications usually occur when an entry is unlocked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.ActivityMask">
            <summary>
            Gets a mask which represents which activities occured with the lock
            for the RELEASE notification.  The mask values correspond to members
            of the <c>ActivityType</c> enumeration.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.EntryId">
            <summary>
            Gets the ID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.EntryType">
            <summary>
            Gets the entry type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.EntryUuid">
            <summary>
            Gets the UUID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.ParentId">
            <summary>
            Gets the entry ID of the parent entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.ParentPath">
            <summary>
            Gets the path to the entry's parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.Path">
            <summary>
            Gets the path to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.LowestSequenceNumber">
            <summary>
            The lowest sequence number of the activity log entries that are associated
            with the RELEASE activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.HighestSequenceNumber">
            <summary>
            The highest sequence number of the activity log entries that are associated
            with the RELEASE activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.ActivityRecordCount">
            <summary>
            Gets the number of activity records that were written using the entry lock
            or handle that was associated with this RELEASE activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.IsVersionControlled">
            <summary>
            Returns true if the entry is under version control, false if it's not, or
            null if the versioning status is unknown.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.HasActivity(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Determines if a particular activity has occured during the scope of the
            operation that triggered the RELEASE notification.
            </summary>
            <param name="activityType">A member of <c>ActivityType</c> which specifies
            which activity to check for.</param>
            <returns>True if the specified activity has occurred.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Activity.ReleaseEntryActivity.GetActivities">
            <summary>
            Returns an array of <c>ActivityType</c> members which record which activities
            have occurred during the scope of the operation that triggered the
            RELEASE notification.
            </summary>
            <returns>An array of <c>ActivityType</c> values which record which activities
            have occurred.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity">
            <summary>
            Represents a Laserfiche activity log record for a restore entry
            from the recycle bin activity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.EntryId">
            <summary>
            Gets the ID of the restored entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.EntryType">
            <summary>
            Gets the type of the restored entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.EntryUuid">
            <summary>
            Gets the UUID of the restored entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.ParentId">
            <summary>
            Gets the entry ID of the restored entry's new parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.ParentPath">
            <summary>
            Gets the path to the restored entry's new parent folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Activity.RestoreEntryActivity.Path">
            <summary>
            Gets the new path to the restored entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationReason">
            <summary>
            Represents an annotation reason definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReason.Id">
            <summary>
            The ID of the annotation reason definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReason.Text">
            <summary>
            The text of the annotation reason definition.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationReasonCommandType">
            <summary>
            An enumeration of annotation reason definition command types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationReasonCommandType.Create">
            <summary>
            Create a new annotation reason definition definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationReasonCommandType.Update">
            <summary>
            Update an existing annotation reason definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationReasonCommandType.Delete">
            <summary>
            Delete an existing annotation reason definition.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationReasonCommand">
            <summary>
            Represents the input for an annotation reason definition change command.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommand.CommandType">
            <summary>
            Gets or sets a member of the <c>AnnotationReasonOperation</c> enumeration that specifies
            the command type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommand.Id">
            <summary>
            Gets or sets the ID of the annotation reason definition.  Applicable to Update and Delete.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommand.Text">
            <summary>
            Gets or sets the text of the annotation reason definition.  Application to Create and Update.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommand.Force">
            <summary>
            Gets or sets a boolean that indicates if the deletion operation should proceed even
            if the reason is referenced by one or more annotations.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationReasonCommandResult">
            <summary>
            Represents the result of an annotation reason definition command.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommandResult.Id">
            <summary>
            Gets or sets the ID of the annotation reason.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationReasonCommandResult.ErrorCode">
            <summary>
            Gets or sets the Laserfiche error code for the command.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.BusinessProcessAuditEvent">
            <summary>
            Represents a business process event record.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditEventType">
            <summary>
            An enumeration of the audit event types supported by Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditEvent">
            <summary>
            Represents a print or export audit event and its data that is generated by clients.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.EventType">
            <summary>
            A member of the <c>AuditEventType</c> enumeration that indicates the event
            type that the represented event belongs to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.PageRange">
            <summary>
            Gets or sets the range of pages that are being processed during the event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.EntryId">
            <summary>
            Gets or sets the ID of the entry that is being processed as part of the event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.Version">
            <summary>
            Gets or sets the version number of the document version that is being
            processed as part of the event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.Comment">
            <summary>
            Gets or sets the comment for this audit event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.AuditReasonId">
            <summary>
            Gets or sets the reason id for this audit event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.Format">
            <summary>
            Gets or sets the document format being processed for this audit event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.Watermark">
            <summary>
            Gets or sets the watermark string used for this audit event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditEvent.RecipientEmailAddress">
            <summary>
            Gets or sets the recipient email address string used for 
            share document audit event.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditEvent.#ctor(Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>AuditEvent</c> instance representing a client generated
            audit event.
            </summary>
            <param name="type">A member of the <c>AuditEventType</c> enumeration indicating
            the type of audit event to report.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditEvent.ReportAuditEvent">
            <summary>
            Reports the stored data about the represented audit event to Laserfiche.  This
            event can be reported multiple times and each time will be considered a separate
            event.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditEvent.ReportAuditEvent(System.Object)">
            <summary>
            Reports the stored data about the represented audit event to Laserfiche.  This
            event can be reported multiple times and each time will be considered a separate
            event.
            </summary>
            <param name="obj">The object that the operation is modifying or using.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditorErrorMode">
            <summary>
            Enumeration of options for what actions the server takes after the auditor
            encounters an error when writing to the audit log.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Audit.AuditorErrorMode.NoAction">
            <summary>
            Continue running as before with no interruption.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Audit.AuditorErrorMode.LockDown">
            <summary>
            Disables all audited actions in the server until the audit log becomes
            writable again.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.Auditing">
            <summary>
            Collection of static methods for managing audit logs and the auditing
            subsystem in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.DeleteAuditLog(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an archived audit log.
            </summary>
            <param name="name">The name of the archived audit log to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.RolloverCurrentLog(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Archives the current active log file and creates a new active log file.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.EnumArchivedAuditLogs(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AuditLogReader</c> instance which can be used to enumerate
            information about archived audit logs.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditLogReader</c> instance which can be used to enumerate
            information about archived audit logs.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetCurrentLogContents(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which represents the contents of the current
            audit log file.
            </summary>
            <param name="maxLogFormatVersion">The maximum log format version to accept.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Stream</c> instance which represents the contents of the current
            audit log file.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetLogContents(System.String,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which represents the contents of the audit
            log file with the specified name.
            </summary>
            <param name="name">The name of the audit log of which its contents shall be returned.</param>
            <param name="maxLogFormatVersion">The maximum log format version to accept.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Stream</c> instance which represents the contents of the specified
            audit log file.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetCurrentLogContents(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which represents the contents of the current
            audit log file.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Stream</c> instance which represents the contents of the current
            audit log file.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetLogContentsByDate(System.DateTime,System.DateTime,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which represents the contents of the
            audit trail for the current repository within the specified time range.
            </summary>
            <param name="startTimestamp">A <c>DateTime</c> value specifying the starting
            timestamp to return audit data for.</param>
            <param name="endTimestamp">A <c>DateTime</c> value specifying the ending
            timestamp to return audit data for.</param>
            <param name="attemptRecovery">A boolean indicating whether or not to attempt
            recovery of audit log records.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Stream</c> instance which represents the contents of the
            audit trail within the specified time range.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.CreateAuditReason(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Defines a new audit reason associated with the specified trustee for the
            current repository.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance which represents
            a reference to the Laserfiche account to associate a new audit reason
            with.</param>
            <param name="auditEventType">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type that the new audit
            reason will be associated with.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReason</c> instance which represents the newly
            created audit reason.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.CreateAuditReason(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Defines a new audit reason associated with the specified trustee for the
            current repository.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the trustee to associate a new audit reason with.</param>
            <param name="auditEventType">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type that the new audit
            reason will be associated with.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReason</c> instance which represents the newly
            created audit reason.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetAuditReasons(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.
            </summary>
            <param name="acct">An <c>AccountReference</c> instanc which represents a
            reference to the Laserfiche account to retrieve audit reasons for.</param>
            <param name="type">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type to retrieve registered
            audit reasons for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetAuditReasons(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the trustee to retrieve audit reasons for.</param>
            <param name="type">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type to retrieve registered
            audit reasons for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetAuditReasons(System.String,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.
            </summary>
            <param name="userName">The name of the trustee to retrieve audit reasons
            for.</param>
            <param name="type">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type to retrieve registered
            audit reasons for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetAuditReasons(System.Int32,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.
            </summary>
            <param name="accountId">The trustee ID of the Laserfiche account in the
            current repository to retrieve audit reasons for.</param>
            <param name="type">A member of the <c>AuditEventType</c>
            enumeration which specifies the audit event type to retrieve registered
            audit reasons for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AuditReasonReader</c> instance which can be used to enumerate
            all of the configured audit reasons for the specified trustee and audit
            event type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.Auditing.GetLogContents(Laserfiche.RepositoryAccess.Audit.AuditLogOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> which can be used to read the raw contents of
            the specified portion of the audit log associated with the current
            repository.
            </summary>
            <param name="options">A <c>AuditLogOptions</c> instance which specifies
            the portion of the audit log to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Stream</c> which can be used to read the raw contents of
            the specified portion of the audit log associated with the current
            repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditLogOptions">
            <summary>
            Specifications for which section of the Laserfiche audit log to retrieve when calling
            <c>Auditing.GetLogContents</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.Current">
            <summary>
            Gets or sets a boolean which indicates if the audit log is the current one.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.DateRange">
            <summary>
            Gets a boolean indicating whether or not the retrieval will be
            filtered by date range.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.Filtered">
            <summary>
            Gets a boolean indicating if records might have been filtered out.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.LogName">
            <summary>
            Gets or sets the name of the log file to export.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.AuditFilterMask">
            <summary>
            Gets or sets the set of audit masks to filter out (exclude).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.EntryIds">
            <summary>
            Gets or sets the collection of entry IDs to return audit log records for.
            If null, no entry ID filtering will be done.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.AttemptRecovery">
            <summary>
            Attempt audit log recovery if errors are encountered when reading the log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.MaxLogFormatVersion">
            <summary>
            Gets or sets the maximum version of the audit log format that can be read.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.StartTimeStamp">
            <summary>
            Gets or sets the timestamp of the earliest audit record to retrieve.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLogOptions.EndTimeStamp">
            <summary>
            Gets or sets the timestamp of the most recent audit record to retrieve.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditLog">
            <summary>
            Represents a Laserfiche audit log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.Name">
            <summary>
            Gets the name of the audit log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.StartTimestamp">
            <summary>
            Gets the timestamp of the beginning of the represented audit log in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.StartTimestampUtc">
            <summary>
            Gets the timestamp of the beginning of the represented audit log in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.EndTimestamp">
            <summary>
            Gets the timestamp of the last record in the represented audit log in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.EndTimestampUtc">
            <summary>
            Gets the timestamp of the last record in the represented audit log in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.FileSize">
            <summary>
            Gets the size of the audit log file, in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.Guid">
            <summary>
            Gets the GUID of the audit log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.FirstEventId">
            <summary>
            Gets the audit event ID of the first audit record in the audit log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.LastEventId">
            <summary>
            Gets the audit event ID of the last audit record in the audit log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.Version">
            <summary>
            Gets the version of the audit log format used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditLog.IsCompressed">
            <summary>
            Gets a boolean indicating if the audit log data is compressed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditLog.Delete">
            <summary>
            Sends a request to delete the audit log file represented by this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditLog.GetContents">
            <summary>
            Returns a <c>Stream</c> which can be used to read the contents of the audit
            log, including the file header, trailer, and checkpoints.
            </summary>
            <returns>An instance of <c>Stream </c> which can be used to read the
            contents of the audit log, including the file header, trailer, and
            checkpoints.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditLog.GetContents(System.Int32)">
            <summary>
            Returns a <c>Stream</c> which can be used to read the contents of the audit
            log, including the file header, trailer, and checkpoints.
            </summary>
            <param name="maxLogFormatVersion">The version number of the highest version
            audit log format that will be returned.</param>
            <returns>An instance of <c>Stream</c> which can be used to read the contents
            of the audit log, including the file header, trailer, and checkpoints.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditLogReader">
            <summary>
            Provides the ability to enumerate <c>AuditLog</c> instances for a Laserfiche
            repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditReason">
            <summary>
            Represents a user-defined audit reason for an audit event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditReason.Id">
            <summary>
            Gets the ID of the user-defined audit reason.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditReason.Trustee">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the security
            identifier (SID) of the trustee the represented reason is associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditReason.ReasonText">
            <summary>
            Gets or sets the text of the user-defined audit reason.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditReason.AuditEventType">
            <summary>
            Gets the audit event type that the user-defined audit reason is applicable to.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditReason.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AuditReason</c> instance representing a new user-defined
            audit reason.
            </summary>
            <param name="account">An <c>AccountReference</c> instance referencing the user account to use.</param>
            <param name="eventType">A member of the <c>AuditEventType</c> enumeration
            specifying which audit event type the new audit reason is applicable to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditReason.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AuditReason</c> instance representing a new user-defined
            audit reason.
            </summary>
            <param name="account">The Laserfiche account reference to use.</param>
            <param name="eventType">A member of the <c>AuditEventType</c> enumeration
            specifying which audit event type the new audit reason is applicable to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditReason.#ctor(Laserfiche.RepositoryAccess.Audit.AuditEventType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AuditReason</c> instance representing a new user-defined
            audit reason.
            </summary>
            <param name="eventType">A member of the <c>AuditEventType</c> enumeration
            specifying which audit event type the new audit reason is applicable to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditReason.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AuditReason</c> instance representing a the specified
            audit reason.
            </summary>
            <param name="auditReasonId">The ID of the desired audit reason.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditReason.Delete">
            <summary>
            Marks the user-defined audit reason that this instance represents for deletion
            when pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditLogHeader">
            <summary>
            Aggregates information stored in the header of a Laserfiche audit event log.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditRecordHeader">
            <summary>
            Aggregates information stored in a Laserfiche audit event record header.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditRecordReader">
            <summary>
            Supports reading audit records from a Laserfiche audit log file.
            </summary>
            <remarks>
            The <c>AuditRecordReader</c> class implements reading audit record headers and
            returning raw record payload data to the caller.  Callers are responsible for
            decoding the record payload.
            
            After <c>Open</c> is called, the reader is positioned at the beginning of the
            first record.  The <c>ReadAuditEvent</c> method can then be called to
            read the record data.  The reader automatically advances to the next record
            when <c>ReadAuditEvent</c> returns.  The <c>MoveNext</c> and <c>MovePrevious</c>
            methods can be called to move the reader's current position without reading
            any data.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.IsOpen">
            <summary>
            Gets a boolean indicating if the log is open for reading.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.CurrentPosition">
            <summary>
            Gets the current position of the reader in the audit log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.AuditLogLength">
            <summary>
            Gets the length of the audit log file in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.AuditLogHeader">
            <summary>
            Get an <c>AuditLogHeader</c> instance which represents the audit log
            header data for the opened audit log file.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.#ctor">
            <summary>
            Initializes an instance of <c>AuditRecordReader</c> that is not opened.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.#ctor(System.String)">
            <summary>
            Initializes an instance of <c>AuditRecordReader</c> that is initialized
            and ready to read records from file specified by the <paramref name="path"/>
            argument.
            </summary>
            <param name="path">The path to the Laserfiche audit log file to read.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.Open(System.String)">
            <summary>
            Opens a Laserfiche audit log file for reading and positions this reader instance
            at the start of the first record.
            </summary>
            <param name="path">The path to the Laserfiche audit log file to read.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.ReadAuditEvent(Laserfiche.RepositoryAccess.Audit.AuditRecordHeader@)">
            <summary>
            Reads the next audit event record from the audit log file.  The reader position
            is then advanced to the start of the next event in the audit log.
            </summary>
            <param name="recordHeader">The <c>AuditRecordHeader</c> instance representing
            the next audit record header in the audit log.</param>
            <returns>The data payload for the next audit event record.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.ReadNextValidAuditEvent(System.Int64,Laserfiche.RepositoryAccess.Audit.AuditRecordHeader@)">
            <summary>
            Finds a special marker to recover from a corruption and reads the next audit
            event record.  The reader position is then advanced to the start of the next
            event in the audit log.
            </summary>
            <param name="pos">The position in the log stream to start looking for
            the recovery marker.</param>
            <param name="recordHeader">The <c>AuditRecordHeader</c> instance representing
            the next valid audit record header found.</param>
            <returns>The data payload for the next audit event record.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.IsRecoveryMark(System.Char[])">
            <summary>
            Determines if a sequence of characters is a recovery mark.
            </summary>
            <param name="seqChars">A character array holding the sequence of characters
            to check.</param>
            <returns>True if the sequence is a recovery mark, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.Reset">
            <summary>
            Positions the instance at the beginning of the audit log file.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.MoveNext">
            <summary>
            Positions the reader to the begninning of the next audit event record.
            </summary>
            <returns>True if there is more data to read, false if EOF is hit.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.MovePrevious">
            <summary>
            Positions the reader to the beginning of the previous audit event record.
            </summary>
            <returns>True if there is more data to read, false if EOF (really BOF) is hit.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.AuditRecordReader.Close">
            <summary>
            Closes the reader and releases all underlying resources.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent">
            <summary>
            Represents a custom audit event record.
            </summary>
            <remarks>
            A custom audit event is a bag of string property names and values.  Clients
            are free to store whatever they like in a custom audit event, but to ease
            use and reporting, Laserfiche has defined a customary set of properties
            for a variety of Laserfiche object types.  Methods such as <c>AddAnnotation</c>
            and <c>AddEntry</c> are provided which adds these customary properties
            from RepositoryAccess object instances.
            
            Laserfiche imposes a limit of 64 KB on the size of a single audit record.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.CustomAuditReason">
            <summary>
            Gets or sets a <c>CustomAuditReason</c> instance which represents the
            custom audit event type that this instance records.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.#ctor(Laserfiche.RepositoryAccess.Audit.CustomAuditReason,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>CustomAuditEvent</c> representing a new custom audit event record.
            </summary>
            <param name="reason">A <c>CustomAuditReason</c> instance which represents the
            custom audit event type that this new instance will record.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.ReportAuditEvent">
            <summary>
            Reports the represented custom audit event to Laserfiche for recording
            in the audit log.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddAnnotation(Laserfiche.RepositoryAccess.AnnotationBase)">
            <summary>
            Add information about an annotation to the custom audit event.
            </summary>
            <param name="annot">An instance of a class derived from <c>AnnotationBase</c>
            representing the annotation whose information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Add information about an entry to the audit record.
            </summary>
            <param name="entry">An instance of a class derived from <c>EntryInfo</c> whose
            information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddField(Laserfiche.RepositoryAccess.FieldInfo)">
            <summary>
            Add information about a template field definition to the audit record.
            </summary>
            <param name="field">A <c>FieldInfo</c> instance representing the field definition
            whose information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddPage(Laserfiche.RepositoryAccess.PageInfo)">
            <summary>
            Add information about a document page to the audit record.
            </summary>
            <param name="page">A <c>PageInfo</c> instance representing the page
            whose information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddTemplate(Laserfiche.RepositoryAccess.TemplateInfo)">
            <summary>
            Add information about a Laserfiche template definition to the audit record.
            </summary>
            <param name="template">A <c>TemplateInfo</c> instance representing the
            Laserfiche template whose information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddTrustee(Laserfiche.RepositoryAccess.AccountInfo)">
            <summary>
            Add information about a Laserfiche account to the audit record.
            </summary>
            <param name="trustee">An <c>AccountInfo</c> instance representing the
            Laserfiche account whose information will be added to the audit record.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditEvent.AddVolume(Laserfiche.RepositoryAccess.VolumeInfo)">
            <summary>
            Add information about a Laserfiche volume to the audit record.
            </summary>
            <param name="volume">A <c>VolumeInfo</c> instance representing the volume
            whose information will be added to the audit record.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.CustomAuditReason">
            <summary>
            Represents a defined custom audit event type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.CustomAuditReason.Id">
            <summary>
            Gets the ID of the represented custom audit event type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Audit.CustomAuditReason.EventName">
            <summary>
            Gets or sets the name of the custom audit event type.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditReason.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>CustomAuditReason</c> instance representing a new custom
            audit event type.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditReason.Delete">
            <summary>
            Marks the represented custom audit event type for deletion when
            pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.CustomAuditReasonReader">
            <summary>
            Provides the ability to enumerate <c>CustomAuditReason</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Audit.CustomAuditReasonReader.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>CustomAuditReasonReader</c> which can be used to enumerate
            <c>CustomAuditReason</c> instances representing all of the registered custom
            audit event types registered in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Audit.AuditReasonReader">
            <summary>
            Provides the ability to enumerate information about the configured audit
            reasons in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BadFieldValue">
            <summary>
            Contains information about a failed template field value update.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BadFieldValue.GetObject">
            <summary>
            Returns a <c>FieldInfo</c> instance representing the field that received a bad
            value.
            </summary>
            <returns>A <c>FieldInfo</c> instance representing the field that received a bad
            value.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcess">
            <summary>
            A collection of methods for creating and managing business processes in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.Create(Laserfiche.RepositoryAccess.BusinessProcessInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a business process object in Laserfiche and returns a new
            <c>BusinessProcessInfo</c> instance which represents it.
            </summary>
            <param name="info">A <c>BusinessProcessInfo</c> instance which specifies the
            properties for the new business process.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessInfo</c> instance which represents the created
            business process.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessInfo</c> instance which represents the business
            process in the current Laserfiche repository with the specified ID.
            </summary>
            <param name="id">The ID of the business process to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessInfo</c> instance which represents the business
            process in the current Laserfiche repository with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.Update(System.Int32,Laserfiche.RepositoryAccess.BusinessProcessInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Update the definition of the specified business project object.
            </summary>
            <param name="id">The ID of the business process in the current repository to update.</param>
            <param name="info">A <c>BusinessProcessInfo</c> instance which specifies the new properties.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessInfoReader</c> instance which can be used to enumerate
            all of the business process objects in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessInfoReader</c> instance which can be used to enumerate
            all of the business process objects in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.EnumByName(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessInfoReader</c> instance which can be used to enumerate
            the business process objects that share the specified name.
            </summary>
            <param name="name">A string containing the name of the business processes to enumerate.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessInfoReader</c> instance which can be used to enumerate
            the business process objects that share the specified name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcess.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified business process object in the current Laserfiche repository.
            </summary>
            <param name="id">The ID of the business process in the current repository to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcessEntity">
            <summary>
            A collection of methods for creating and managing business process entities
            in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.Create(Laserfiche.RepositoryAccess.BusinessProcessEntityInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a business process entity object in the current Laserfiche repository.
            </summary>
            <param name="info">A <c>BusinessProcessEntityInfo</c> instance which describes
            the properties of the new business process entity.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfo</c> instance that represents the
            business process entity that was created.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.GetInfo(System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfo</c> instance which represents the specified
            business process entity object.
            </summary>
            <param name="id">The ID of the business process entity in the current Laserfiche
            repository to return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfo</c> instance which represents the specified
            business process entity object.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.Update(System.Int64,Laserfiche.RepositoryAccess.BusinessProcessEntityInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Update the definition of the specified business process entity.
            </summary>
            <param name="id">The ID of the business process entity in the current repository
            to update.</param>
            <param name="info">A <c>BusinessProcessEntityInfo</c> instance that represents
            the new definition of the updated business process entity.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.Delete(System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified business process entity object.
            </summary>
            <param name="id">The ID of the business process entity in the current repository
            to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if a business process entity object was deleted.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.DeleteByEntry(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the business process entities which are associated with the specified
            entry.
            </summary>
            <param name="entryId">The ID of the entry in the current repository whose associated
            business process entities will be deleted.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The number of business process entity objects that were deleted.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.DeleteByTrustee(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the business process entities which are associated with the specified
            trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance which represents the
            security identifier (SID) of the trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The number of business process entity objects that were deleted.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.DeleteByTrustee(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the business process entities which are associated with the specified
            trustee.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance representing the trustee
            associated with the business processes to be deleted.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The number of business process entity objects that were deleted.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.EnumBySource(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfoReader</c> instance which will
            enumerate the business process entities in the current repository with the
            specified source identifier.
            </summary>
            <param name="sourceId">A string containing the source identifier.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfoReader</c> instance which can be used to
            enumerate the business process entities in the current repository with the
            specified source identifier.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.EnumByParent(System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfoReader</c> instance which will enumerate
            the business process entities in the current repository with the specified
            parent business process entity.
            </summary>
            <param name="parentId">The ID of the parent business process entity in the
            current repository.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfoReader</c> instance which will enumerate
            the business process entities in the current repository with the specified
            parent business process entity.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.EnumByEntry(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified entry.
            </summary>
            <param name="entryId">The ID of the entry in the current repository that is
            associated with the entities.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.EnumByTrustee(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance representing the security
            identifier (SID) of the trustee associated with the entities.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntity.EnumByTrustee(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified trustee.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance referencing the trustee that
            is associated with the entities.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>BusinessProcessEntityInfoReader</c> instance which will enumerate the
            business process entities in the current repository that are associated with the
            specified trustee.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo">
            <summary>
            Represents a business process entity object in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.#ctor">
            <summary>
            Initializes a new <c>BusinessProcessEntityInfo</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new <c>BusinessProcessEntityInfo</c> instance associated with
            the specified session.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.Id">
            <summary>
            Gets the ID of the represented business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.Name">
            <summary>
            Gets or sets the name of the represented business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.SourceId">
            <summary>
            Gets or sets the source ID of the represented business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.BusinessProcessId">
            <summary>
            Gets or sets the ID of the associated business process definition for the represented
            business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.Status">
            <summary>
            Gets or sets the status text of the represented business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.StartTimeUtc">
            <summary>
            Gets or sets the start time of the represented business process entity in
            Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.StartTime">
            <summary>
            Gets the start time of the represented business process entity in
            local time. To set the start time, call StartTimeUTC.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.EndTimeUtc">
            <summary>
            Gets or sets the end time of the represented business process entity in
            Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.EndTime">
            <summary>
            Gets the end time of the represented business process entity in
            local time. To set the end time, call EndTimeUTC.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.UserInstructions">
            <summary>
            Gets or sets the user instructions of the represented business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.HasParentEntityId">
            <summary>
            Gets a boolean indicating if the represented business process entity has a parent
            entity defined.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.ParentEntityId">
            <summary>
            Gets or sets the ID of the parent business process entity.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AssociatedEntryIds">
            <summary>
            Gets an array containing the IDs of the entries that are associated with the
            represented business process entity.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.ClearAssociatedEntries">
            <summary>
            Removes all associations with entries from the represented business process
            entity.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AddAssociatedEntry(System.Int32)">
            <summary>
            Add the specified entry ID to the set of entries associated with the represented
            business process entity.
            </summary>
            <param name="newEntryId">The ID to add to the set.</param>
            <returns>True if the ID was added, false if the ID is already a member of the set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AddAssociatedEntries(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Adds a set of entry IDs to the set of entries associated with the represented
            business process entity.
            </summary>
            <param name="entryIds">The set of entry IDs to add to the existing set.</param>
            <returns>The number of entry IDs that were added to the set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.RemoveAssociatedEntry(System.Int32)">
            <summary>
            Removes the specified entry ID from the set of entries that are associated with
            the represented business process entity.
            </summary>
            <param name="entryId">The ID of the entry to disassociate with the represented
            business process entity.</param>
            <returns>True if the entry was disassociated from the entity, false if there
            was no association to begin with.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AssociatedTrusteeSids">
            <summary>
            Gets an array of <c>SecurityIdentifier</c> instances which represnets the
            security identifiers (SID) of the trustees that are associated with the
            represented business process entity.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.ClearAssociatedTrustees">
            <summary>
            Removes all associations between the represented business process entity
            and trustees.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AddAssociatedTrustee(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Adds a security identifier (SID) to the set of trustee SIDs associated with
            the represented business process entity.
            </summary>
            <param name="newSid">A <c>SecurityIdentifier</c> instance representing the security
            identifier (SID) to add.</param>
            <returns>True if the SID was added, false if the SID was already associated with
            the entity.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.AddAssociatedTrustees(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier})">
            <summary>
            Adds a set of security identifiers (SIDs) to the set of trustee SIDs
            associated with the represented business process entity.
            </summary>
            <param name="sids">A set of <c>SecurityIdentifier</c> instances representing
            the security identifiers (SIDs) to add.</param>
            <returns>The number of SIDs added to the set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.RemoveAssociatedTrustee(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Removes the specified security identifier (SID) from the set of trustee
            security identifiers associated with the represented business process entity.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance representing the security
            identifier (SID) to remove.</param>
            <returns>True if the SID was disassociated, false if the SID was not associated
            to begin with.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessEntityInfo.Delete">
            <summary>
            Marks the represented business process entity for deletion when changes are
            saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcessEntityInfoReader">
            <summary>
            Enumerates <c>BusinessProcessEntityInfo</c> instances which represent business
            process entity objects in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcessInfo">
            <summary>
            Represents a business process object in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessInfo.#ctor">
            <summary>
            Initializes a <c>BusinessProcessInfo</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>BusinessProcessInfo</c> instance associated with the
            specified <c>Session</c>.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Id">
            <summary>
            Gets the ID of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Name">
            <summary>
            Gets or sets the name of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Version">
            <summary>
            Gets or sets the version number of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.SecurityPolicy">
            <summary>
            Gets or sets the security policy of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.StartInstructions">
            <summary>
            Gets or sets the start instructions of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Definition">
            <summary>
            Gets or sets the textual definition of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Source">
            <summary>
            Gets or sets the source of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Executions">
            <summary>
            Gets or sets the number of executions of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.AverageDuration">
            <summary>
            Gets or sets the average duration of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.MaximumDuration">
            <summary>
            Gets or sets the observed maximum duration of the represented business process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BusinessProcessInfo.Flags">
            <summary>
            Gets or sets the flags word for the represented business process.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BusinessProcessInfo.Delete">
            <summary>
            Marks the represented business process for deletion when changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BusinessProcessInfoReader">
            <summary>
            Enumerates <c>BusinessProcessEntityInfo</c> instances which represent business
            process objects in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CertificateInfo">
            <summary>
            Represents information about an X.509 certificate and if applicable,
            information about the encryption used to protect a secure channel.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.EncryptionAlgorithmName">
            <summary>
            Gets the name of the encryption algorithm used to secure the
            associated network connection.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.Expiry">
            <summary>
            Gets the date that the represented certificate expires on, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.Issuer">
            <summary>
            Gets a string that identifies the issuer of the represented
            certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.KeySize">
            <summary>
            Gets the size of the symmetric encryption key in bits.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.ProtocolName">
            <summary>
            Gets the name of the transport layer network protocol used to negotiate
            and establish the secure connection the represented certificate is securing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.SignatureAlgorithmName">
            <summary>
            Gets the name of the public-key encryption algorithm used to
            sign the represented certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.Subject">
            <summary>
            Gets a string that identifies the subject that the represented
            certificate identifies.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.Thumbprint">
            <summary>
            Gets the thumbprint of the represented certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CertificateInfo.ValidFrom">
            <summary>
            Gets the starting date that the represented certificate is valid from,
            in local time.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CertificateInfo.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a <c>CertificateInfo</c> instance from an <c>X509Certificate2</c>
            instance.
            </summary>
            <param name="cert">An <c>X509Certificate2</c> instance to initialize the
            <c>CertificateInfo</c> instance from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CertificateInfo.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a <c>CertificateInfo</c> instance from an <c>X509Certificate</c>
            instance.
            </summary>
            <param name="cert">An <c>X509Certificate</c> instance to initialize the
            <c>CertificateInfo</c> instance from.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ChangeNumber">
            <summary>
            A collection of static methods for managing change numbers in a Laserfiche
            repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ChangeNumber.GetChangeNumbers(System.Collections.Generic.Dictionary{System.String,System.Int64},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Get change numbers for the properties listed in the input dictionary.
            The results will be saved to the corresponding rows in the dictionary.
            </summary>
            <param name="changeNumbers">A <c>Dictionary</c> contains the property names as key for each record.
            The results will be saved to the corresponding rows in the dictionary.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ChangeNumber.GetChangeNumbers(System.Collections.Generic.Dictionary{Laserfiche.RepositoryAccess.ChangeNumber.ObjectType,System.Int64},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Get change numbers for the properties listed in the input dictionary.
            The results will be saved to the corresponding rows in the dictionary.
            </summary>
            <param name="changeNumbers">A <c>Dictionary</c> contains the property type as key for each record.
            The results will be saved to the corresponding rows in the dictionary.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ChangeNumber.GetSingleChangeNumber(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Get the change number for the property with the input name.
            </summary>
            <param name="target">The name of the property to retrieve change number.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The result change number.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ChangeNumber.GetSingleChangeNumber(Laserfiche.RepositoryAccess.ChangeNumber.ObjectType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Get the change number for the property with the input type.
            </summary>
            <param name="target">The type to retrieve change number. </param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The change number for the specified object type.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ClassificationLevel">
            <summary>
            Collection of methods for managing classification level definitions in a
            Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevel.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>ClassificationLevelInfo</c> instance representing the requested
            classification level in the current Laserfiche repository.
            </summary>
            <param name="levelNumber">The classification level to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ClassificationLevelInfo</c> instance representing the requested
            classification level in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevel.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified classification level definition from the current repository.
            </summary>
            <param name="levelNumber">The classification level definition to delete.</param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevel.Enum(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>ClassificationLevelInfoReader</c> instance which can be used to
            enumerate information about all of the classification level definitions in the
            current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ClassificationLevelInfoReader</c> instance which can be used to
            enumerate information about all of the classification level definitions in the
            current repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ClassificationLevelInfo">
            <summary>
            Represents a security classification level in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevelInfo.#ctor">
            <summary>
            Initializes a <c>ClassificationLevelInfo</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevelInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>ClassificationLevelInfo</c> instance tied to the
            specificed Laserfiche session.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ClassificationLevelInfo.LevelNumber">
            <summary>
            Gets or sets the security classification level number.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ClassificationLevelInfo.Name">
            <summary>
            Gets or sets the name of the security classification level.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ClassificationLevelInfo.Description">
            <summary>
            Gets or sets the description of the security classification level.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ClassificationLevelInfo.Delete">
            <summary>
            Marks the security classification level for deletion from the Laserfiche
            repository when changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ClassificationLevelInfoReader">
            <summary>
            Provides the ability to enumerate <c>ClassificationLevelInfo</c> instances
            representing Laserfiche security classification levels.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.MonthOfYear">
            <summary>
            An enumeration of the months of the calendar (Gregorian) year.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.January">
            <summary>
            January
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.February">
            <summary>
            February
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.March">
            <summary>
            March
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.April">
            <summary>
            April
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.May">
            <summary>
            May
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.June">
            <summary>
            June
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.July">
            <summary>
            July
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.August">
            <summary>
            August
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.September">
            <summary>
            September
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.October">
            <summary>
            October
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.November">
            <summary>
            November
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.MonthOfYear.December">
            <summary>
            December
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LfColor">
            <summary>
            Represents an RGB color value with alpha channel.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.BLACK">
            <summary>
            An <c>LfColor</c> value representing the color black.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.WHITE">
            <summary>
            An <c>LfColor</c> value representing the color white.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.YELLOW">
            <summary>
            An <c>LfColor</c> value representing the color yellow.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.RED">
            <summary>
            An <c>LfColor</c> value representing the color red.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.BLUE">
            <summary>
            An <c>LfColor</c> value representing the color blue.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.GREEN">
            <summary>
            An <c>LfColor</c> value representing the color green.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfColor.TRANSPARENT">
            <summary>
            An <c>LfColor</c> value representing a totally transparent color value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfColor.BaseColor">
            <summary>
            Returns a <c>LfColor</c> that has the same color components with an alpha of 255.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfColor.A">
            <summary>
            The alpha channel component, from 0-255.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfColor.R">
            <summary>
            The red channel component, from 0-255.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfColor.G">
            <summary>
            The green channel component, from 0-255.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfColor.B">
            <summary>
            The blue channel component from 0-255.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromRgb(System.Int32)">
            <summary>
            Initialize a <c>LfColor</c> value from an integer with bytes in RGB order.  The alpha
            component is assumed to be 255.
            </summary>
            <param name="rgb">The color value in RGB byte order.</param>
            <returns>A <c>LfColor</c> value equivalent to the specified RGB color value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromBgr(System.Int32)">
            <summary>
            Initialize a <c>LfColor</c> value from an integer with bytes in BGR order.  The alpha
            component is assumed to be 255.
            </summary>
            <param name="bgr">The color value in BGR byte order.</param>
            <returns>A <c>LfColor</c> value with components equal to the color value of the argument.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromArgb(System.Int32)">
            <summary>
            Initialize a <c>LfColor</c> value from an integer with bytes in ARGB order.
            </summary>
            <param name="argb">The color value in ARGB byte order.</param>
            <returns>A <c>LfColor</c> value equivalent to the specified ARGB color
            value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromArgb(System.Int32,Laserfiche.RepositoryAccess.Common.LfColor)">
            <summary>
            Initialize a <c>LfColor</c> value from a base <c>LfColor</c> and a specified
            alpha channel value.
            </summary>
            <param name="alpha">The value of the alpha channel of the new <c>LfColor</c>.</param>
            <param name="baseColor">The existing <c>LfColor</c> value to base the
            R, G, and B components off of.</param>
            <returns>A <c>LfColor</c> value representing the specified base color and alpha.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromRgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a <c>LfColor</c> value from the specified red, green, and blue
            channel color values.  The alpha channel is set to 255.
            </summary>
            <param name="red">The value of the red component, from 0-255.</param>
            <param name="green">The value of the green component, from 0-255.</param>
            <param name="blue">The value of the blue component, from 0-255.</param>
            <returns>A <c>LfColor</c> value with components equal to the arguments.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a <c>LfColor</c> value from the specified alpha, red, green,
            and blue channel color values.
            </summary>
            <param name="alpha">The value of the alpha channel, from 0-255.</param>
            <param name="red">The value of the red component, from 0-255.</param>
            <param name="green">The value of the green component, from 0-255.</param>
            <param name="blue">The value of the blue component, from 0-255.</param>
            <returns>A <c>LfColor</c> value with components equal to the arguments.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.FromAbgr(System.Int32)">
            <summary>
            Initializes a <c>LfColor</c> value from an integer representing a color in the
            ARGB colorspace in ABGR byte order (red is the least significant byte).
            </summary>
            <param name="abgr">The color value in ABGR byte order.</param>
            <returns>A <c>LfColor</c> value with components equal to the color value of the argument.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.ToArgb">
            <summary>
            Returns an integer representing the color value stored in this object in ARGB
            byte order.
            </summary>
            <returns>An integer representing a color in ARGB byte order.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.ToAbgr">
            <summary>
            Returns an integer representing the color value stored in this object in ABGR
            byte order.
            </summary>
            <returns>An integer representing a color in ABGR byte order.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.ToRgb">
            <summary>
            Returns an integer representing the color value stored in this object in RGB
            byte order.  The alpha component is left at zero.
            </summary>
            <returns>An integer representing a color in RGB byte order.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.ToBgr">
            <summary>
            Returns an integer representing the color value stored in this object in BGR
            byte order.  The alpha component is left at zero.
            </summary>
            <returns>An integer representing a color in BGR byte order.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.GetLuma">
            <summary>
            Returns the Rec. 601 luma value of the color that this <c>LfColor</c> instance
            represents.
            </summary>
            <returns>The luma of the stored color.</returns>
            <remarks>
            Luma is a measure of brightness calculated by a weighted sum of the gamma
            compressed RGB components.  The Rec. 601 coefficients used by this method are
            0.299, 0.587, 0.114.  Luma is measured on a scale from 0 - 1.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.GetHue">
            <summary>
            Returns the hue of the color that this object represents
            using the HSB representation.  The hue is measured in degrees from 0 - 360.
            </summary>
            <returns>The hue of the stored color in the HSB representation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.GetSaturation">
            <summary>
            Returns the saturation of the color that this object represents
            using the HSB representation.  Saturation is represented on a scale from
            0 - 1.
            </summary>
            <returns>The saturation of the stored color in the HSB representation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.GetBrightness">
            <summary>
            Returns the brightness/lightness of the color that this object represents
            using the HSB representation.  Brightness is measured on a scale from 0 - 1.
            </summary>
            <returns>The brightness of the stored color in the HSB representation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.op_Equality(Laserfiche.RepositoryAccess.Common.LfColor,Laserfiche.RepositoryAccess.Common.LfColor)">
            <summary>
            Determines if two <c>LfColor</c> values are identical.
            </summary>
            <param name="c1">A <c>LfColor</c> value to check for equality.</param>
            <param name="c2">A <c>LfColor</c> value to check for equality.</param>
            <returns>True if the two arguments represent identical colors, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.op_Inequality(Laserfiche.RepositoryAccess.Common.LfColor,Laserfiche.RepositoryAccess.Common.LfColor)">
            <summary>
            Determines if two <c>LfColor</c> values are not identical.
            </summary>
            <param name="c1">A <c>LfColor</c> value to check for inequality.</param>
            <param name="c2">A <c>LfColor</c> value to check for inequality.</param>
            <returns>True if the two arguments represent different colors, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.Equals(System.Object)">
            <summary>
            Determines if an object is a <c>LfColor</c> value that represents a color identical
            to this instance.
            </summary>
            <param name="obj">The object to check for value equality.</param>
            <returns>True if the argument is a <c>LfColor</c> value that represents a color
            identical to this instance, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.Equals(Laserfiche.RepositoryAccess.Common.LfColor)">
            <summary>
            Determines if an object is a <c>LfColor</c> value that represents a color identical
            to this instance.
            </summary>
            <param name="other">The object to check for value equality.</param>
            <returns>True if the argument is a <c>LfColor</c> value that represents a color
            identical to this instance, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.GetHashCode">
            <summary>
            Returns the hash code of this object.
            </summary>
            <returns>An integer hash code for this object.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfColor.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A <c>String</c> value that represents the stored color value.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess">
            <summary>
            An enumeration of the types of access to a Laserfiche repository
            which can be controlled via CAS.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.None">
            <summary>
            No access.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.PasswordAuth">
            <summary>
            Log in to Laserfiche using password authentication.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.WindowsAuth">
            <summary>
            Log in to Laserfiche using integrated Windows authentication.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.Retrieval">
            <summary>
            Log in as a read-only session.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.Full">
            <summary>
            Log in with full access.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess.All">
            <summary>
            All Laserfiche access permissions.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LaserficheClientPermission">
            <summary>
            Controls the ability to access Laserfiche servers and repositories.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermission.#ctor">
            <summary>
            Initializes a <c>LaserficheClientPermission</c> instance that grants no access
            to any Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>
            Initializes a <c>LaserficheClientPermission</c> instance with the specified
            <c>PermissionState</c>.
            </summary>
            <param name="state">The <c>PermissionState</c> which controls whether this
            code permission is unrestricted.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermission.AddRepository(Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess,System.String,System.String)">
            <summary>
            Add permission to access a repository to the access set of this code permission.
            If access was already specified for the Laserfiche server and repository name,
            the access level is combined.
            </summary>
            <param name="access">The type of access to Laserfiche to grant.</param>
            <param name="serverName">The name of the Laserfiche server to grant access to,
            or "*" for all servers.</param>
            <param name="repName">The name of the Laserfiche repository to grant access to,
            or "*" for all repository names.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermission.SetRepository(Laserfiche.RepositoryAccess.Common.LaserficheRepositoryAccess,System.String,System.String)">
            <summary>
            Add permission to access a repository to the access set of this code permission.
            If access was already specified for the Laserfiche server and repository name,
            the access level is set to the value of the <paramref name="access"/> parameter.
            </summary>
            <param name="access">The type of access to Laserfiche to grant.</param>
            <param name="serverName">The name of the Laserfiche server to grant access to,
            or "*" for all servers.</param>
            <param name="repName">The name of the Laserfiche repository to grant access to,
            or "*" for all repository names.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute">
            <summary>
            Allows security actions for <c>LaserficheClientPermission</c> to be applied
            to code using declarative security.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.Server">
            <summary>
            Gets or sets the Laserfiche server name that code is allowed to access.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.Repository">
            <summary>
            Gets or sets the Laserfiche repository name that code is allowed to access.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.Access">
            <summary>
            Gets or sets the type of access allowed to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.IsUnrestricted">
            <summary>
            Gets or sets whether unrestricted access to Laserfiche is allowed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>
            Initializes a <c>LaserficheClientPermissionAttribute</c> instance with either
            fully restricted or unrestricted permissions as specified.
            </summary>
            <param name="action">One of the <c>SecurityAction</c> values.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LaserficheClientPermissionAttribute.CreatePermission">
            <summary>
            Creates an instance of <c>LaserficheClientPermission</c> with the access
            specified by this instance of <c>LaserficheClientPermissionAttribute</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LfPoint">
            <summary>
            Represents a point in a two-dimensional space using integer coordinates.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfPoint.Origin">
            <summary>
            A <c>LfPoint</c> value which represents the origin of the Cartesian plane,
            coordinates (0, 0).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a <c>LfPoint</c> value with the specified X and Y coordinates.
            </summary>
            <param name="x">The value of the X coordinate.</param>
            <param name="y">The value of the Y coordinate.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.#ctor(Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Initializes a <c>LfPoint</c> value from an existing <c>LfSize</c> value.  The
            X coordinate is taken from the <c>Width</c> property, and the Y coordinate
            from the <c>Height</c> property.
            </summary>
            <param name="size">The <c>LfSize</c> value to initialize the <c>LfPoint</c> from.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfPoint.X">
            <summary>
            Gets or sets the value of the X coordinate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfPoint.Y">
            <summary>
            Gets or sets the value of the Y coordinate.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.op_Equality(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Determines if two <c>LfPoint</c> values are equal.
            </summary>
            <param name="p1">A <c>LfPoint</c> value to check for equality.</param>
            <param name="p2">A <c>LfPoint</c> value to check for equality.</param>
            <returns>True if the arguments represent the same point value, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.op_Inequality(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Determines if two <c>LfPoint</c> values are not equal.
            </summary>
            <param name="p1">A <c>LfPoint</c> value to check for inequality.</param>
            <param name="p2">A <c>LfPoint</c> value to check for inequality.</param>
            <returns>True if the arguments do not represent the same point value, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.Equals(Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Determines if a <c>LfPoint</c> object represents a point value equal to the value
            of this instance.
            </summary>
            <param name="other">The <c>LfPoint</c> value to check for equality.</param>
            <returns>True if the argument represents the same point as this instance,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.Add(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Adds a <c>LfSize</c> value to a <c>LfPoint</c> object, returning a new <c>LfPoint</c>.
            </summary>
            <param name="pt">A <c>LfPoint</c> object to add a <c>LfSize</c> offset to.</param>
            <param name="sz">A <c>LfSize</c> value to treat as a point offset.</param>
            <returns>A <c>LfPoint</c> which represents adding the offset to the given point.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.Subtract(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Subtracts a <c>LfSize</c> value from a <c>LfPoint</c> object, returning a new <c>LfPoint</c>.
            </summary>
            <param name="pt">A <c>LfPoint</c> object to subtract a <c>LfSize</c> offset from.</param>
            <param name="sz">A <c>LfSize</c> value to treat as a point offset.</param>
            <returns>A <c>LfPoint</c> which represents subtracting the offset from the given point.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.Offset(System.Int32,System.Int32)">
            <summary>
            Adds an offset to the point represented by this instance.
            </summary>
            <param name="dx">The offset to add to the X coordinate.</param>
            <param name="dy">The offset to add to the Y coordinate.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.Offset(Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Adds an offset to the point represented by this instance.
            </summary>
            <param name="sz">A <c>LfSize</c> value representing the offset to add to the point.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.op_Addition(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Adds a <c>LfSize</c> value to a <c>LfPoint</c> object, returning a new <c>LfPoint</c>.
            </summary>
            <param name="pt">A <c>LfPoint</c> object to add a <c>LfSize</c> offset to.</param>
            <param name="sz">A <c>LfSize</c> value to treat as a point offset.</param>
            <returns>A <c>LfPoint</c> which represents adding the offset to the given point.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfPoint.op_Subtraction(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Subtracts a <c>LfSize</c> value from a <c>LfPoint</c> object, returning a new <c>LfPoint</c>.
            </summary>
            <param name="pt">A <c>LfPoint</c> object to subtract a <c>LfSize</c> offset from.</param>
            <param name="sz">A <c>LfSize</c> value to treat as a point offset.</param>
            <returns>A <c>LfPoint</c> which represents subtracting the offset from the given point.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LfRectangle">
            <summary>
            Represents a rectangular region in a plane defined by integer coordinates.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>LfRectangle</c> from X/Y coordinates of the upper-left corner
            and a width and height value.
            </summary>
            <param name="x">The X coordinate for the upper-left corner.</param>
            <param name="y">The Y coordinate for the upper-left corner.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.#ctor(Laserfiche.RepositoryAccess.Common.LfPoint,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Initializes a <c>LfRectangle</c> from a <c>LfRectangle</c> representing the coordinates
            of the upper-left corner and a <c>LfSize</c> representing the dimensions of the
            rectangle.
            </summary>
            <param name="position">The coordinates of the upper-left corner.</param>
            <param name="size">The dimensions of the rectangle.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>Rectangle given coordinates for the left, top, right, and
            bottom edges of the rectangle.</c>
            </summary>
            <param name="left">The X coordinate of the left edge.</param>
            <param name="top">The Y coordinate of the top edge.</param>
            <param name="right">The X coordinate of the right edge.</param>
            <param name="bottom">The Y coordinate of the bottom edge.</param>
            <returns></returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.X">
            <summary>
            Gets and sets the X coordinate of the rectangle's upper-left corner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Y">
            <summary>
            Gets and sets the Y coordinate of the rectangle's upper-left corner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Width">
            <summary>
            Gets and sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Height">
            <summary>
            Gets and sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Left">
            <summary>
            Gets the X coordinate of the rectangle's left edge.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Right">
            <summary>
            Gets the X coordinate of the rectangle's right edge.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Top">
            <summary>
            Gets the Y coordinate of the rectangle's top edge.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Bottom">
            <summary>
            Gets the Y coordinate of the rectangle's bottom edge.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Location">
            <summary>
            Gets and sets the location of the rectangle's upper-left corner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.Size">
            <summary>
            Gets and sets the dimensions of the rectangle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfRectangle.IsEmpty">
            <summary>
            Gets if the rectangle has a non-zero area or not.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Contains(Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Determines if a point lies within the region bounded by the rectangle.
            The bottom and right edges are not considered part of a rectangle's
            region, but the top and left edges are.
            </summary>
            <param name="pt">A <c>LfRectangle</c> which represents the point to test.</param>
            <returns>Returns true if the point lies within the region bounded by
            the rectangle and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Contains(System.Int32,System.Int32)">
            <summary>
            Determines if a point lies within the region bounded by the rectangle.
            The bottom and right edges are not considered part of a rectangle's
            region, but the top and left edges are.
            </summary>
            <param name="x">The X coordinate of the point to test.</param>
            <param name="y">The Y coordinate of the point to test.</param>
            <returns>Returns true if the point lies within the region bounded by
            the rectangle and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Contains(Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Returns true if the region bounded by the given <c>LfRectangle</c> is a
            subset of the region represented by this object.  The bottom and right
            edges are not considered part of a rectangle's region, but the top
            and left edges are.
            </summary>
            <param name="rect">A <c>LfRectangle</c> representing a region to test
            if it is a subset of the region bounded by the object's region.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Inflate(Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Increases the size of the rectangle that this object represents without
            changing the location of the center of the rectangle.  Each edge of the
            rectangle is shifted by the given amount.
            </summary>
            <param name="size">How much to "inflate" the rectangle this object
            represents in each direction.  The width and height of the rectangle
            shall be offset by twice the Width and Height properties, respectively,
            of <paramref name="size"/>.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Inflate(System.Int32,System.Int32)">
            <summary>
            Increases the size of the rectangle that this object represents without
            changing the location of the center of the rectangle.  Each edge of the
            rectangle is shifted by the given amount.
            </summary>
            <param name="width">Half the amount to inflate the width by.</param>
            <param name="height">Half the amount to inflate the height by.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Inflate(Laserfiche.RepositoryAccess.Common.LfRectangle,System.Int32,System.Int32)">
            <summary>
            Increases the size of the rectangle that this object represents without
            changing the location of the center of the rectangle.  Each edge of the
            rectangle is shifted by the given amount.
            </summary>
            <param name="rect">The <c>LfRectangle</c> object that represents the
            rectangle to inflate.</param>
            <param name="x">Half the amount to inflate the width by.</param>
            <param name="y">Half the amount to inflate the height by.</param>
            <returns>A <c>LfRectangle</c> which represents the input rectangle inflated
            by the given amount.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Offset(System.Int32,System.Int32)">
            <summary>
            Offsets the position of the rectangle that this object represents.
            </summary>
            <param name="dx">The amount of horizontal offset.</param>
            <param name="dy">The amount of vertical offset.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Offset(Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Offsets the position of the rectangle that this object represents.
            </summary>
            <param name="delta">The amount of horizontal and vertical offset.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Union(Laserfiche.RepositoryAccess.Common.LfRectangle,Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Returns the smallest rectangle that covers both of the regions
            represented by the arguments.  This is the rectangular union.
            </summary>
            <param name="a">A <c>LfRectangle</c> which represents a rectangular
            region to union.</param>
            <param name="b">A <c>LfRectangle</c> which represents a rectangular
            region to union.</param>
            <returns>A <c>LfRectangle</c> which represents the union of the two
            input rectangles.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.IntersectsWith(Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Determines if the rectangle that this object represents intersects with
            the rectangle represented by the parameter <paramref name="rect"/>.
            </summary>
            <param name="rect">The <c>LfRectangle</c> which represents the rectangle
            to check for intersection with.</param>
            <returns>True if the rectangles intersect and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.op_Equality(Laserfiche.RepositoryAccess.Common.LfRectangle,Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Determines if two rectangles represented by <c>LfRectangle</c> objects are
            equal.
            </summary>
            <param name="a">A <c>LfRectangle</c> object to check for value equality.</param>
            <param name="b">A <c>LfRectangle</c> object to check for value equality.</param>
            <returns>True if the rectangles which the <c>LfRectangle</c> objects represent
            are equal and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.op_Inequality(Laserfiche.RepositoryAccess.Common.LfRectangle,Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Determines if two rectangles represented by <c>LfRectangle</c> objects are
            not equal.
            </summary>
            <param name="a">A <c>LfRectangle</c> object to check for value inequality.</param>
            <param name="b">A <c>LfRectangle</c> object to check for value inequality.</param>
            <returns>True if the rectangles which the <c>LfRectangle</c> objects represent
            are not equal and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfRectangle.Equals(Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Determines if the rectangle that this object represents is equal to the
            rectangle that the parameter <paramref name="other"/> represents.
            </summary>
            <param name="other">A <c>LfRectangle</c> object to check for value equality.</param>
            <returns>True if the rectangles which the <c>LfRectangle</c> objects represent
            are not equal and false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.LfSize">
            <summary>
            Represents the size of an object with width and height dimensions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.LfSize.Empty">
            <summary>
            The size of an empty object; having zero width and height.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfSize.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a <c>LfSize</c> value with the specified width and height.
            </summary>
            <param name="width">The width of the new <c>LfSize</c>.</param>
            <param name="height">The height of the new <c>LfSize</c>.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfSize.Width">
            <summary>
            Gets or sets the width value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.LfSize.Height">
            <summary>
            Gets or sets the height value.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfSize.op_Equality(Laserfiche.RepositoryAccess.Common.LfSize,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Determines if two <c>LfSize</c> instances are equal.
            </summary>
            <param name="sz1">A <c>LfSize</c> instance to check for equality.</param>
            <param name="sz2">A <c>LfSize</c> instance to check for equality.</param>
            <returns>True if the <c>LfSize</c> instances have equal dimensions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfSize.op_Inequality(Laserfiche.RepositoryAccess.Common.LfSize,Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Determines if two <c>LfSize</c> instances are not equal.
            </summary>
            <param name="sz1">A <c>LfSize</c> instance to check for inequality.</param>
            <param name="sz2">A <c>LfSize</c> instance to check for inequality.</param>
            <returns>True if the <c>LfSize</c> instances have unequal dimensions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.LfSize.Equals(Laserfiche.RepositoryAccess.Common.LfSize)">
            <summary>
            Determines if this <c>LfSize</c> instance is equal to another.
            </summary>
            <param name="other">The <c>LfSize</c> instance to check for value equality.</param>
            <returns>True if the <paramref name="other"/> parameter represents a size
            equal to this instance.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Common.TimeOfDay">
            <summary>
            Represents a time of day value.
            </summary>
            <remarks>
            The <c>TimeOfDay</c> type represents an instant in time but without
            specifying a date.  It is essentially the <c>TimeOfDay</c> component of the
            <c>System.DateTime</c> type.
            </remarks>
            <seealso cref="T:System.DateTime"/>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.TimeOfDay.MinValue">
            <summary>
            Represents the minimum <c>TimeOfDay</c> value.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Common.TimeOfDay.MaxValue">
            <summary>
            Represents the maximum <c>TimeOfDay</c> value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Hour">
            <summary>
            Gets the hour component of the time of day represented by this value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Hour12">
            <summary>
            Gets the hour component of the time day, using a 12-hour clock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.IsAM">
            <summary>
            A boolean indicating if the represented time of day is an a.m. time in the
            12-hour clock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.IsPM">
            <summary>
            A boolean indicating if the represented time of day is a p.m. time in the
            12-hour clock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Minute">
            <summary>
            Gets the minute component of the time of day represented by this value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Second">
            <summary>
            Gets the seconds component of the time of day represented by this value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Millisecond">
            <summary>
            Gets the milliseconds component of the time of day represented by this value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Common.TimeOfDay.Ticks">
            <summary>
            Gets the number of ticks that have elapsed since the beginning of the day for
            the time of day represented by this value.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.#ctor(System.Int64)">
            <summary>
            Initializes a <c>TimeOfDay</c> value to a specified number of ticks since
            midnight.
            </summary>
            <param name="ticks">The number of ticks elapsed since the beginning of the day.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>TimeOfDay</c> value to the specified hour, minute and seconds.
            </summary>
            <param name="hour">The hour component (0 through 23).</param>
            <param name="minute">The minute component (0 through 59).</param>
            <param name="second">The seconds component (0 through 59).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>TimeOfDay</c> value to the specified hour, minute, seconds
            and milliseconds.
            </summary>
            <param name="hour">The hour component (0 through 23).</param>
            <param name="minute">The minute component (0 through 59).</param>
            <param name="second">The seconds component (0 through 59).</param>
            <param name="millisecond">The milliseconds component (0 through 999).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.#ctor(System.TimeSpan)">
            <summary>
            Initializes a <c>TimeOfDay</c> value to a specified number of ticks since
            midnight.
            </summary>
            <param name="ts">A <c>TimeSpan</c> value indicating the elapsed time since
            midnight.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Add(System.TimeSpan)">
            <summary>
            Adds the specified <c>TimeSpan</c> to this value.
            </summary>
            <param name="ts">A <c>TimeSpan</c> that contains the interval to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the time interval represented by
            <paramref name="ts"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.AddHours(System.Int32)">
            <summary>
            Adds the specified number of hours to this value.
            </summary>
            <param name="hours">The number of hours to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the number of hours specified by
            <paramref name="hours"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.AddMinutes(System.Int32)">
            <summary>
            Adds the specified number of minutes to this value.
            </summary>
            <param name="minutes">The number of minutes to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the number of minutes specified by
            <paramref name="minutes"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.AddSeconds(System.Int32)">
            <summary>
            Adds the specified number of seconds to this value.
            </summary>
            <param name="seconds">The number of seconds to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the number of seconds specified by
            <paramref name="seconds"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.AddMilliseconds(System.Int32)">
            <summary>
            Adds the specified number of milliseconds to this value.
            </summary>
            <param name="milliseconds">The number of milliseconds to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the number of milliseconds specified by
            <paramref name="milliseconds"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.AddTicks(System.Int64)">
            <summary>
            Adds the specified number of ticks to this value.
            </summary>
            <param name="ticks">The number of ticks to add.</param>
            <returns>A <c>TimeOfDay</c> whose value is the sum of the value represented
            by this value and the number of ticks specified by
            <paramref name="ticks"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Subtract(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Calculates the time span between this and another <c>TimeOfDay</c> value.
            </summary>
            <param name="tod">The <c>TimeOfDay</c> value to subtract.</param>
            <returns>A <c>TimeSpan</c> who value is the time value represented by the
            <paramref name="tod"/> parameter subtracted from the value represented by
            this value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Subtract(System.TimeSpan)">
            <summary>
            Subtracts a specified time span from this value.
            </summary>
            <param name="ts">The <c>TimeSpan</c> value to subtract.</param>
            <returns>A <c>TimeOfDay</c> whose value is the time value represented by
            this value subtracted by the time span represented by the
            <paramref name="ts"/> parameter.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Implicit(Laserfiche.RepositoryAccess.Common.TimeOfDay)~System.TimeSpan">
            <summary>
            Implicit conversion operator from a <c>TimeOfDay</c> to a <c>TimeSpan</c>.
            </summary>
            <param name="tod">The <c>TimeOfDay</c> value to convert to a <c>TimeSpan</c>.</param>
            <returns>The time elapsed since midnight.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.ToDateTime(System.DateTime)">
            <summary>
            Returns a <c>DateTime</c> representation of the time value in this value.
            </summary>
            <param name="day">The <c>DateTime</c> value containing the day portion.</param>
            <returns>A <c>DateTime</c> whose day value comes from the <paramref name="day"/>
            parameter and whose time of day value comes from this <c>TimeOfDay</c> value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.ToDateTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <c>DateTime</c> representation of the time value in this value.
            </summary>
            <param name="year">The year of the <c>DateTime</c> value.</param>
            <param name="month">The month of the <c>DateTime</c> value.</param>
            <param name="day">The day of the month of the <c>DateTime</c> value.</param>
            <returns>A <c>DateTime</c> whose date comes from the arguments and the time
            of day portion comes from this <c>TimeOfDay</c> value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.ToUniversalTime">
            <summary>
            Returns a <c>TimeOfDay</c> representation of the Universal time value from
            this value, assumed to be in local time.
            </summary>
            <returns>A UTC <c>TimeOfDay</c> whose time value comes from this value.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.FromDateTime(System.DateTime)">
            <summary>
            Returns a <c>TimeOfDay</c> value from a specified <c>DateTime</c>.
            </summary>
            <param name="dt">The <c>DateTime</c> to extract the time of day from.</param>
            <returns>A <c>TimeOfDay</c> whose value represents the time of day stored in
            the specified <c>DateTime</c>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Equals(System.Object)">
            <summary>
            Determines if this value's value is equal to the specified object's value.
            </summary>
            <param name="obj">The object to compare for equality.</param>
            <returns>True if this value is equal to the object's value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Equals(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if this value's value is equal to the specified <c>TimeOfDay</c>.
            </summary>
            <param name="other">The <c>TimeOfDay</c> value to compare for equality.</param>
            <returns>True if this value is equal to the value
            of <paramref name="other"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.ToString(System.String)">
            <summary>
            Converts the <c>TimeOfDay</c> value to a string using the given format and
            the current culture.
            </summary>
            <param name="format">A time of day format string.</param>
            <returns>A string representation of the <c>TimeOfDay</c> value.</returns>
            <remarks>
            The format string can use "T" for the culture's long time format; "t" for the
            culture's short time format; or a combination of the time of day format
            characters used by <c>System.DateTime</c>.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the <c>TimeOfDay</c> value to a string using the given format and
            the specified <c>IFormatProvider</c> instance.
            </summary>
            <param name="format">A time of day format string.</param>
            <param name="formatProvider">An implementation of <c>IFormatProvider</c> used to
            format the string.</param>
            <returns>A string representation of the <c>TimeOfDay</c> value.</returns>
            <remarks>
            The format string can use "T" for the culture's long time format; "t" for the
            culture's short time format; or a combination of the time of day format
            characters used by <c>System.DateTime</c>.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Parse(System.String)">
            <summary>
            Converts the specified string representation of a time of day value to its
            <c>TimeOfDay</c> equivalent.
            </summary>
            <param name="s">The string to parse.</param>
            <returns>A <c>TimeOfDay</c> value equivalent to the time of day contained in
            <paramref name="s"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.TryParse(System.String,Laserfiche.RepositoryAccess.Common.TimeOfDay@)">
            <summary>
            Converts the specified string representation of a time of day value to its
            <c>TimeOfDay</c> equivalent.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="tod">On output, contains a <c>TimeOfDay</c> value equivalent to
            the time of day contained in <paramref name="s"/> if the parse was successful;
            otherwise contains <c>TimeOfDay.MinValue</c>.</param>
            <returns>True if the string was parsed successfully; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Equality(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if two <c>TimeOfDay</c> values are equal.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the arguments are equal, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Inequality(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if two <c>TimeOfDay</c> values are not equal.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the arguments are not equal, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_LessThan(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if the <paramref name="tod1"/> argument represents a point
            in time before the <paramref name="tod2"/> argument.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the first argument represents a time before the second, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_LessThanOrEqual(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if the <paramref name="tod1"/> argument represents a point
            in time equal to or before the <paramref name="tod2"/> argument.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the first argument represents a time before or equal to
            the second, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_GreaterThan(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if the <paramref name="tod1"/> argument represents a point
            in time after the <paramref name="tod2"/> argument.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the first argument represents a time after the second, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_GreaterThanOrEqual(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Determines if the <paramref name="tod1"/> argument represents a point
            in time after the <paramref name="tod2"/> argument.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>True if the first argument represents a time after or equal to
            the second, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Addition(Laserfiche.RepositoryAccess.Common.TimeOfDay,System.TimeSpan)">
            <summary>
            Adds an offset to the specified time, returning a new <c>TimeOfDay</c>
            value.
            </summary>
            <param name="tod">The <c>TimeOfDay</c> value representing the base time.</param>
            <param name="ts">The <c>TimeSpan</c> value representing the offset.</param>
            <returns>A <c>TimeOfDay</c> value representing the base time plus the
            specified offset.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Subtraction(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Returns the difference between two times by subtracting the time
            represented by the second argument from the first argument.
            </summary>
            <param name="tod1">The <c>TimeOfDay</c> value representing the
            minuend time.</param>
            <param name="tod2">The <c>TimeOfDay</c> value representing the
            subtrahend time.</param>
            <returns>The difference between the two times as a <c>TimeSpan</c>
            value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.op_Subtraction(Laserfiche.RepositoryAccess.Common.TimeOfDay,System.TimeSpan)">
            <summary>
            Subtracts an offset from the specified time, returning a new <c>TimeOfDay</c>
            value.
            </summary>
            <param name="tod">The <c>TimeOfDay</c> value representing the base time.</param>
            <param name="ts">The <c>TimeSpan</c> value representing the offset.</param>
            <returns>A <c>TimeOfDay</c> value representing the base time minus the
            specified offset.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Common.TimeOfDay.Compare(Laserfiche.RepositoryAccess.Common.TimeOfDay,Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Compares two <c>TimeOfDay</c> values and returns a value indicating if they are
            equal, and if they are not, which one is ahead.
            </summary>
            <param name="tod1">The first <c>TimeOfDay</c> value to compare.</param>
            <param name="tod2">The second <c>TimeOfDay</c> value to compare.</param>
            <returns>0 if the two arguments are equal, 1 if the first argument is ahead
            of the second, and -1 if the second is ahead of the first.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CryptoKeyManager">
            <summary>
            Container for cryptographic keys used by Laserfiche briefcase encryption and
            digital signature classes.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CryptoKeyManager.Load(System.Xml.XmlReader)">
            <summary>
            Loads cryptographic keys from a collection of keys serialized as XML in
            a Laserfiche briefcase.
            </summary>
            <param name="reader">An <c>XmlReader</c> instance representing the XML
            fragment containing the cryptographic key definitions.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CryptoKeyManager.Load(System.IO.Stream)">
            <summary>
            Loads cryptographic keys from a collection of keys serialized as XML in
            a Laserfiche briefcase.
            </summary>
            <param name="stream">A <c>Stream</c> instance representing the XML fragment
            containing the cryptographic key definitions.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CryptoKeyManager.Load(System.Byte[],System.Int32)">
            <summary>
            Loads cryptographic keys from a collection of keys serialized as XML in
            a Laserfiche briefcase.
            </summary>
            <param name="data">A buffer containing the XML fragment containing the
            cryptographic key definitions.</param>
            <param name="count">The number of bytes in the buffer to read.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CryptoKey">
            <summary>
            Represents a cryptographic key used to encrypt or decrypt a Laserfiche briefcase
            file, usually stored in an encrypted form in the briefcase.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CryptoKey.CALG_AES_128">
            <summary>
            Cryptographic algorithm identifier for AES-128.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CryptoKey.CALG_AES_192">
            <summary>
            Cryptographic algorithm identifier for AES-192.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CryptoKey.CALG_AES_256">
            <summary>
            Cryptographic algorithm identifier for AES-256.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CryptoKey.Name">
            <summary>
            Gets the name of the stored key.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CryptoKey.HashAlgorithm">
            <summary>
            Gets the algorithm identifier of the hash algorithm associated with the
            represented key.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CryptoKey.EncryptionAlgorithm">
            <summary>
            Gets the algorithm identifier of the encryption algorithm used with the
            represented key.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CryptoKey.Key">
            <summary>
            Gets the value of the cryptographic key.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CryptoKey.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a <c>CryptoKey</c> instance from an XML fragment in a Laserfiche
            briefcase file.
            </summary>
            <param name="reader">An <c>XmlReader</c> instance which represents the XML
            fragment describing the cryptographic key.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CryptoKey.Decrypt(System.String)">
            <summary>
            Decrypts the cryptographic keys stored in this instance.
            </summary>
            <param name="password">The password to use to decrypt the keys.</param>
            <returns>True if decryption was successful, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentManifest">
            <summary>
            Represents a Laserfiche document manifest for digital signature purposes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentManifest.EntryId">
            <summary>
            Gets or sets the document's entry ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentManifest.DocumentVersion">
            <summary>
            Gets or sets the document version.  Use 0 to represent no version or the working copy.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentManifest.TargetSignatureIds">
            <summary>
            Gets or sets a list of target digital signature IDs used when calculating the manifest.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentManifest.Data">
            <summary>
            Gets or sets the manifest data.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentManifestCollection">
            <summary>
            Represents a collection of Laserfiche document manifests.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentManifestCollection.GetMatching(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.DocumentSignatureInfo})">
            <summary>
            Returns an enumerable collection of <c>DocumentManifest</c> instances
            which match the given criteria.
            </summary>
            <param name="entryId">The entry ID of the document.</param>
            <param name="version">The version of the document, or 0 to represent no version
            or the current working copy.</param>
            <param name="targetSignatures">An optional collection of <c>DocumentSignatureInfo</c>
            instances representing the target signatures used in calculating the manifest.</param>
            <returns>An enumerable collection of <c>DocumentManifest</c> instances
            which match the given criteria.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ServerTimeStampAuthority">
            <summary>
            Represents a digital time-stamp authority service that a Laserfiche
            server is configured to use.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.#ctor(Laserfiche.RepositoryAccess.Server)">
            <summary>
            Initializes an instance of <c>ServerTimeStampAuthority</c>.
            </summary>
            <param name="server">The Laserfiche server to connect to.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.IsNew">
            <summary>
            Gets a boolean indicating if the configuration is new and has not been saved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.IsModified">
            <summary>
            Gets a boolean indicating if the settings have been modified since the configuration
            was loaded.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.Name">
            <summary>
            Gets or sets the name of the digital time-stamp authority.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.DllPath">
            <summary>
            Gets or sets the path to the client DLL that will be used to communicate
            with the digital time-stamp server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.StoreName">
            <summary>
            Gets or sets the name of the X.509 digital certificate store that will be
            used to retrieve the signing certifcate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.ThumbPrint">
            <summary>
            Gets or sets the thumbprint of the X.509 certificate to use when signing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.TSAPath">
            <summary>
            Gets or sets the TSA path string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.Timeout">
            <summary>
            Gets or sets the digital time-stamp timeout, in seconds.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.IsEnabled">
            <summary>
            Gets or sets a boolean indicating if this digital time-stamp server configuration
            is enabled.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.Delete">
            <summary>
            Marks the represented digital time-stamp server configuration for deletion when
            changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.Refresh(System.Boolean)">
            <summary>
            Retrieves information about the digital time-stamp server configuration from
            Laserfiche.
            </summary>
            <param name="keepChanges">If true, local modifications to this instance are kept;
            if false they are overwritten by the data from Laserfiche.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.RequestTimestamp(System.Byte[])">
            <summary>
            Not yet implemented.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.VerifyTimestamp(Laserfiche.RepositoryAccess.DocumentSignatureInfo)">
            <summary>
            Verifies a time-stamped digital signature on a Laserfiche document.
            </summary>
            <param name="signature">A <c>DocumentSignatureInfo</c> instance which represents
            a time-stamped digital signature.</param>
            <returns>True if the signature and time-stamp are valid, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerTimeStampAuthority.VerifyTimestamp(Laserfiche.RepositoryAccess.IRawTimeStamp,System.DateTime)">
            <summary>
            Verifies a raw time-stamped digital signature.
            </summary>
            <param name="digitalTimestamp">The raw time-stamped digital signature.</param>
            <param name="cutoffTime">The latest point in time the signature could have been
            time-stamped to be considered valid.</param>
            <returns>True if the signature and time-stamp are valid with the given cut-off time,
            false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.X509RevocationCheckMode">
            <summary>
            An enumeration of X.509 digital certification revocation check modes.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VerificationStatus">
            <summary>
            An enumeration of digitial signature verfication status codes.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SignatureVerificationOptions">
            <summary>
            A collection of options that control how digital signatures are verified
            by Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SignatureVerificationOptions.DocumentManifests">
            <summary>
            A collection of document manifests to use for verification operations.
            Passing in a pre-computed manifest avoids having to recalculate the manifest.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SignatureVerificationOptions.VerificationTime">
            <summary>
            Gets or sets the date used when checking the X.509 digital certificate for expiration.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SignatureVerificationOptions.ExtraStore">
            <summary>
            Gets an additional collection of X.509 certificates used when validating the
            X.509 digital certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SignatureVerificationOptions.RevocationCheckMode">
            <summary>
            Gets or sets the X.509 digital certificate revocation mode.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SignatureVerificationOptions.VerificationFlags">
            <summary>
            Gets or sets members of the <c>SignatureVerificationFlags</c> enumeration
            which enables options that control how signature verification occurs.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentChecksumReport">
            <summary>
            A document checksum verification results report.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.AttachmentFileMismatches">
            <summary>
            Gets information about the attachment files which have mismatched checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.AttachmentFilesMissingChecksum">
            <summary>
            Gets information about the attachment files which have missing checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.AttachmentFilesMissingData">
            <summary>
            Gets information about the attachment files which have missing checksum data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.AttachmentFilesChecked">
            <summary>
            Gets a count of the number of attachment files that were checked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ElectronicFileMismatches">
            <summary>
            Gets information about the electronic document files which have mismatched checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ElectronicFilesMissingChecksum">
            <summary>
            Gets information about the electronic document files which have missing checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ElectronicFilesMissingData">
            <summary>
            Gets information about the electronic document files which have missing checksum data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ElectronicFilesChecked">
            <summary>
            Gets a count of the number of electronic document files that were checked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ImageFileMismatches">
            <summary>
            Gets information about the page image files which have mismatched checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ImageFilesMissingChecksum">
            <summary>
            Gets information about the page image files which have missing checksums.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ImageFilesMissingData">
            <summary>
            Gets information about the page image files which have missing checksum data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentChecksumReport.ImageFilesChecked">
            <summary>
            Gets a count of the number of page image files that were checked.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentDifferenceReport">
            <summary>
            A summary of the differences between two versions of a version-controlled
            document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.Session">
            <summary>
            Gets the Laserfiche session that's being used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.EntryId">
            <summary>
            Gets the entry ID of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.Version1">
            <summary>
            Gets the versions number of the first versions being compared.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.Version2">
            <summary>
            Gets the versions number of the second versions being compared.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.PagesAdded">
            <summary>
            Gets the number of pages added between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.PagesDeleted">
            <summary>
            Gets the number of pages deleted between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.ImagePageChangedCount">
            <summary>
            Gets the number of image pages that have changed between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.TextPageChangedCount">
            <summary>
            Gets the number of text pages that have changed between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.EdocChanged">
            <summary>
            Gets a boolean indicating if the electronic document has changed between
            versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.AlternateEdocsChanged">
            <summary>
            Gets a boolean indicating if any alternate electronic documents have
            changed between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.FieldAddedCount">
            <summary>
            Gets the number of fields with values added between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.FieldDeletedCount">
            <summary>
            Gets a count of the number of fields that have had all values removed
            between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.FieldChangedCount">
            <summary>
            Gets the number of fields that have had their values changed
            between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.TemplateChanged">
            <summary>
            Gets a boolean indicating if the assigned template was changed between
            versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.AnnotationAddedCount">
            <summary>
            Gets the number of annotations that were added between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.AnnotationDeletedCount">
            <summary>
            Gets the number of annotations that were deleted between versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentDifferenceReport.AnnotationChangedCount">
            <summary>
            Gets the number of annotations that were changed between versions.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentDifferenceReport.GetPageDifference(System.Int32)">
            <summary>
            Returns a <c>PageDifferenceReport</c> which describes the changes
            in a page between two versions.  Only works for page numbers that
            exist in both versions.
            </summary>
            <param name="pageNumber">The page number of the page to return a
            difference report for.</param>
            <returns>A <c>PageDifferenceReport</c> which describes the changes
            in a page between two versions.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentStatistics">
            <summary>
            A collection of information describing the amount of data in a document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.ImagePageCount">
            <summary>
            Gets the number of pages with images.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.TextPageCount">
            <summary>
            Gets the number of pages with a text stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.LocationsPageCount">
            <summary>
            Gets the number of pages with OCR word locations.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.ThumbnailCount">
            <summary>
            Gets the number of pages with thumbnails.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.RecycledPageCount">
            <summary>
            Gets the number of pages in the recycle bin which are part of the
            associated document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.ElecDocumentSize">
            <summary>
            Gets the size of the electronic document attached to the represented document, if there is one.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.ElecDocumentPath">
            <summary>
            Gets the path of the electronic document file in the volume, if one exists.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentStatistics.PageCount">
            <summary>
            Gets the page count of the represented document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.Sid">
            <summary>
            Sid of the owner of this effective access token info.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.FeatureRights">
            <summary>
            Effective feature rights.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.Privileges">
            <summary>
            Effective privileges.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.Tags">
            <summary>
            Effective tags.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.SuccessAuditMasks">
            <summary>
            Effective success audit masks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.FailureAuditMasks">
            <summary>
            Effective failure audit masks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.Watermarks">
            <summary>
            Effective watermarks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.IsReadOnly">
            <summary>
            Effective read only status. License is not taken into account when calculating this status.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EffectiveAccessTokenInfo.Groups">
            <summary>
            Effective groups.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CloudSessionException">
            <summary>
            Represents an exception with acquiring a login session in the cloud.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudSessionException.#ctor">
            <summary>
            Initializes an <c>CloudSessionException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudSessionException.#ctor(System.Int32)">
            <summary>
            Initializes an <c>CloudSessionException</c> instance with the specified
            error code.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudSessionException.#ctor(System.String)">
            <summary>
            Initializes an <c>CloudSessionException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudSessionException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an <c>CloudSessionException</c> instance with the specified error
            code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudSessionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an <c>CloudSessionException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ErrorCodes">
            <summary>
            Common server-side Laserfiche error codes.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.InnerExtraException">
            <summary>
            Inner extra exceptions are returned when a multi-status exception occurs. 
            This is typically from an operation that can have multiple failures.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.InnerExtraException.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.InnerExtraException"/> class.
            </summary>
            <param name="code">The error code.</param>
            <param name="propName">Name of the property or object the error is on.</param>
            <param name="ns">The XML namespace of the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.InnerExtraException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.InnerExtraException"/> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
            <exception cref="T:System.ArgumentNullException">info</exception>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.InnerExtraException.PropName">
            <summary>
            Gets the name of the property that the exception is on.
            </summary>
            <value>
            The name of the prop.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.InnerExtraException.Namespace">
            <summary>
            Gets or sets the XML namespace of the error.
            </summary>
            <value>
            The namespace.
            </value>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.InnerExtraException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UnsupportedFeatureException">
            <summary>
            Represents an error when a client attempts to perform an operation that isn't
            supported by the version of Laserfiche being used.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ExternalQueueSecurity">
            <summary>
            Collection of static methods for managing external notification queue security settings
            for the laserfiche server.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.RegisterExternalQueuePath(System.String,Laserfiche.RepositoryAccess.Server)">
            <summary>
            Registers an external queue to the white list using the path. The server will not accept the
            subscription requests with an external queue if the queue is not registered.
            </summary>
            <param name="queuePath">The path of the queue to be added to the whitelist. </param>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
            <returns>The id used to index the registered queue.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.UnRegisterExternalQueue(System.Int32,Laserfiche.RepositoryAccess.Server)">
            <summary>
            Unregisters an external queue from the white list using the path.
            </summary>
            <param name="queueId">The id of the queue to be removed from the whitelist. </param>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.ListRegisteredExternalQueuePaths(Laserfiche.RepositoryAccess.Server)">
            <summary>
            List ids and paths of the external queues registered int the white list.
            </summary>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
            <returns>A <c>List</c> containing the id and path for each queue registed.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.AddAccountToAllowList(System.Int32,System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Server)">
            <summary>
            Add an account to the allow list of a given queue. The server will not accept the
            subscription requests if none of the accounts in the list is in the user's access token.
            </summary>
            <param name="queueId">The id of the affected queue. </param>
            <param name="accountSid">The <c>SecurityIdentifier</c> of the account to be added to the list. </param>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.RemoveAccountFromAllowList(System.Int32,System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Server)">
            <summary>
            Remove an account from the allow list of a given queue.
            </summary>
            <param name="queueId">The id of the affected queue. </param>
            <param name="accountSid">The <c>SecurityIdentifier</c> of the account to be removed from the list. </param>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ExternalQueueSecurity.ListAccountsInAllowList(System.Int32,Laserfiche.RepositoryAccess.Server)">
            <summary>
            List accounts in the allow list of a given queue.
            </summary>
            <param name="queueId">The id of the affected queue. </param>
            <param name="server">The <c>Server</c> instance used to connect to the laserfiche server.</param>
            <returns>A <c>List</c> containing <c>SecurityIdentifier</c> of accounts in the allow list.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldItemList">
            <summary>
            Represents a list of string values associated with a list type template
            field definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldItemList.#ctor">
            <summary>
            Initializes a <c>FieldItemList</c> representing an empty list.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldItemList.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a <c>FieldItemList</c> from an existing enumerable collection of
            strings.
            </summary>
            <param name="collection">The collection of strings whose elements are added
            to the new <c>FieldItemList</c> instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IndexingStatusReport">
            <summary>
            Represents a summary of the current indexing activity in the Laserfiche
            full-text search engine.  This report is available starting with
            Laserfiche 8.3.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.Status">
            <summary>
            Gets a member of the <c>IndexingStatus</c> enumeration representing the overall
            status of the indexer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.CurrentlyIndexingEntry">
            <summary>
            Gets the entry ID of the document that the indexer is currently processing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.LastIndexedEntry">
            <summary>
            Gets the entry ID of the last document that the indexer processed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.RecentDocumentIndexCounts">
            <summary>
            Gets the number of documents that have been indexed in the last 1, 5, and 15 minutes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.RecentPageIndexCounts">
            <summary>
            Gets the number of pages that have been indexed in the last 1, 5, and 15 minutes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.IsMergingIndex">
            <summary>
            Gets a boolean indicating if data is being merged into the index files.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.IsOptimizingIndex">
            <summary>
            Gets a boolean indicating if the index is being optimized.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.OptimizationProgress">
            <summary>
            Gets a percentage between 0-100 indicating the progress of the
            optimization procedure, if <c>IsOptimizingIndex</c> is true.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.OptimizationPurpose">
            <summary>
            Gets a string stating the reason that the optimization was triggered.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexingStatusReport.IsQueueEmpty">
            <summary>
            Gets a boolean that indicates if the index queue is empty.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IDocumentContents">
            <summary>
            An interface implemented by types that provide access to the contents
            of a Laserfiche document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IPageContents">
            <summary>
            An interface implemented by types that provide access to the contents
            of a Laserfiche document page.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IRawTimeStamp">
            <summary>
            An interface implemented by types that provide direct access to digital time-stmap data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IRawTimeStamp.Value">
            <summary>
            Gets or sets the data to be digitally time-stamped.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IRawTimeStamp.DigitalTimestamp">
            <summary>
            Gets or sets the time-stamp digital signature.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ITimeStampAuthority">
            <summary>
            An interface implemented by types that represent digital time-stamp authorities that
            Laserfiche can use.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ITimeStampAuthority.RequestTimestamp(System.Byte[])">
            <summary>
            Returns the time-stamped digital signature for the given buffer.
            </summary>
            <param name="data">An array of bytes that will be digitally signed by the TSA.</param>
            <returns>The digital time-stamp value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ITimeStampAuthority.VerifyTimestamp(Laserfiche.RepositoryAccess.IRawTimeStamp,System.DateTime)">
            <summary>
            Verifies that a time-stamped digital signature is valid and was created on or before
            the specified time.
            </summary>
            <param name="digitalTimestamp">The digital time-stamp to verify.</param>
            <param name="cutoffTime">The cut-off time to be considered valid.</param>
            <returns>True if the digital time-stamp is valid, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.JournalEntryReaderOptions">
            <summary>
            Represents options for enumerating journal entries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntryReaderOptions.Count">
            <summary>
            Gets or sets the maximum number of journal entries to return.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntryReaderOptions.StartEntryId">
            <summary>
            Gets or sets the ID of the starting entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.JournalEntryReader">
            <summary>
            Enumerates <c>JournalEntryReader</c> instances which represent journal entries
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.JournalEntry">
            <summary>
            Represents a journal entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntry.Id">
            <summary>
            Gets the ID of the represented journal entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntry.Schema">
            <summary>
            Gets the entry's schema.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntry.Text">
            <summary>
            Gets the entry's text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.JournalEntry.TimeStamp">
            <summary>
            Gets the entry's timestamp.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Journal">
            <summary>
            Represents a journal object in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the named journal in the current repository.
            </summary>
            <param name="name">The name of the journal to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Delete(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Deletes the journal attached to the specified entry.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance representing the entry whose
            journal will be deleted.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Delete(Laserfiche.RepositoryAccess.BusinessProcessEntityInfo)">
            <summary>
            Deletes the journal attached to the specified business process entity.
            </summary>
            <param name="businessProcessEntity">A <c>BusinessProcessEntity</c> instance
            representing /// the business process entity whose journal will be deleted.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.#ctor(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>Journal</c> representing a named journal object
            in a Laserfiche repository.
            </summary>
            <param name="name">The name of the journal.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.#ctor(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Initializes an instance of <c>Journal</c> representing a journal object attached
            to an entry in a Laserfiche repository.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance imbued with a valid <c>Session</c>
            that represents the entry the journal is attached to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.#ctor(Laserfiche.RepositoryAccess.BusinessProcessEntityInfo)">
            <summary>
            Initializes an instance of <c>Journal</c> representing a journal object attached
            to a business process entity in a Laserfiche repository.
            </summary>
            <param name="businessProcessEntity">A <c>BusinessProcessEntityInfo</c> instance
            imbued with a valid <c>Session</c> that represents the business process entity
            the journal is attached to.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Journal.Name">
            <summary>
            Gets the name of the journal.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Create">
            <summary>
            Creates the journal, if it does not already exist.  This operation occurs
            immediately.
            </summary>
            <returns>Returns true if the journal was created, false if the represented
            journal already exists in the repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Delete">
            <summary>
            Deletes the represented journal.  This operation occurs immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Read">
            <summary>
            Returns a <c>JournalEntryReader</c> instance which can be used to enumerate
            all the journal entries that are recorded for this journal.
            </summary>
            <returns>A <c>JournalEntryReader</c> instance which can be used to enumerate
            all the journal entries that are recorded for this journal.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Read(Laserfiche.RepositoryAccess.JournalEntryReaderOptions)">
            <summary>
            Returns a <c>JournalEntryReader</c> instance which can be used to enumerate
            journal entries that are recorded for this journal.
            </summary>
            <param name="options">A <c>JournalEntryReaderOptions</c> instance that specifies
            which journal entries to enumerate.</param>
            <returns>A <c>JournalEntryReader</c> instance which can be used to enumerate
            journal entries that are recorded for this journal.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.AppendEntry(System.String,System.String)">
            <summary>
            Appends a journal entry to the journal.  The journal entry is not added
            until the <c>Save</c> method is called.
            </summary>
            <param name="schema">The schema of the entry.</param>
            <param name="text">The text of the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.DeleteEntry(System.Int64)">
            <summary>
            Deletes the specified journal entry from the journal.  The journal entry is
            not deleted until the <c>Save</c> method is called.
            </summary>
            <param name="journalEntryId">The ID of the journal entry to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Journal.Save">
            <summary>
            Sends queued journal append and entry deletion operations to Laserfiche in a
            single batch.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheErrorObject">
            <summary>
            Represents extended error information about an error that occurred during
            an operation in Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheErrorObject.ObjectName">
            <summary>
            Gets the name of the object that the error refers to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheErrorObject.ErrorCode">
            <summary>
            Gets the Laserfiche error code for the error, or 0 if there is no error code.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheErrorObject.Message">
            <summary>
            Gets the message for the error.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheErrorObject.InnerException">
            <summary>
            Gets the associated exception object for the error.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfdsAccountReferenceReader">
            <summary>
            Provides the ability to enumerate LFDS account references which match
            the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LongOperationErrorObjectType">
            <summary>
            An enumeration of Laserfiche object types represented by a LongOperationError.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LongOperationError">
            <summary>
            Contains information about an error encountered during a long operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperationError.ObjectType">
            <summary>
            The object type that the error refers to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperationError.ObjectPath">
            <summary>
            Gets the path of the entry that the error refers to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperationError.ObjectId">
            <summary>
            Gets the ID of the object that the error refers to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperationError.ErrorStrings">
            <summary>
            The error strings for the error.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageDifferenceReport">
            <summary>
            A summary of differences for a page between two document versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.Session">
            <summary>
            Gets the Laserfiche session being used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.EntryId">
            <summary>
            Gets the entry ID of the document that contains the pages.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.PageNumber">
            <summary>
            Gets the page number of the page being compared.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.Version1">
            <summary>
            Gets the version number of the first version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.Version2">
            <summary>
            Gets the version number of the second version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.ImageChanged">
            <summary>
            Gets a boolean that indicates if the image part was changed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.TextChanged">
            <summary>
            Gets a boolean that indicates if the text part was changed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.AnnotationsAdded">
            <summary>
            Gets the number of annotations added between the versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.AnnotationsDeleted">
            <summary>
            Gets the number of annotations deleted between the versions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageDifferenceReport.AnnotationsChanged">
            <summary>
            Gets the number of annotations that have changed between the versions.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs">
            <summary>
            Information describing a timed event, for performance reporting.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.OperationType">
            <summary>
            Gets the type of operation, for example "HTTP Request"
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.OperationName">
            <summary>
            Gets the name of the operation, usually the name of the calling method.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.Timestamp">
            <summary>
            Gets the timestamp of when the operation began.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.ElapsedTime">
            <summary>
            Gets the elapsed time of the operation, in milliseconds.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.ThreadId">
            <summary>
            Gets the thread ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.UserName">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.Repository">
            <summary>
            Gets the repository name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PerformanceMonitor.PerformanceEventArgs.Request">
            <summary>
            Gets the Method and URL for a HTTP request.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OperationContext.Request">
            <summary>
            The Method and URL for a HTTP request.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OperationContext.RepositoryName">
            <summary>
            The current repository name.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OperationContext.Username">
            <summary>
            The current user name.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ACE_NOT_FOUND">
            <summary>
              Looks up a localized string similar to There is no ACE in this ACL for the specified user and scope..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ACTIVITY_EOF">
            <summary>
              Looks up a localized string similar to Reached end of activity stream..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ALREADY_CONNECTED">
            <summary>
              Looks up a localized string similar to The properties of an existing connection cannot be changed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_AMBIGUOUS_CERT_LOAD_PARAMS">
            <summary>
              Looks up a localized string similar to Not enough information to determine which certificate to load..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOT_WRONG_PAGE">
            <summary>
              Looks up a localized string similar to The given annotation is not part of this page object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_INVALID_POINT">
            <summary>
              Looks up a localized string similar to Annotation contains invalid point..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_INVALID_RECT">
            <summary>
              Looks up a localized string similar to Annotation contains invalid rectangle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_INVALID_TEXTPOS">
            <summary>
              Looks up a localized string similar to Annotation contains invalid text position..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_INVALID_TYPE">
            <summary>
              Looks up a localized string similar to Unknown annotation type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_LINK_NO_TEXTPOS">
            <summary>
              Looks up a localized string similar to Annotation must contain a text position before it can be linked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_NO_POINTS">
            <summary>
              Looks up a localized string similar to Vector annotation must contain at least one point..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_NO_RECTS">
            <summary>
              Looks up a localized string similar to Image block annotation must contain at least one rectangle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Annotation not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ANNOTATION_PROTECTED">
            <summary>
              Looks up a localized string similar to Cannot modify protected annotation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ATTACHMENT_NOT_EXIST">
            <summary>
              Looks up a localized string similar to The page must be saved before an attachment can be written..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ATTACHMENT_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Annotation does not contain attachment data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_FILE">
            <summary>
              Looks up a localized string similar to Invalid file type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_HOST">
            <summary>
              Looks up a localized string similar to Invalid host name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_REPOSITORY">
            <summary>
              Looks up a localized string similar to Repository names can only contain alphanumeric characters and dashes (&apos;-&apos;)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_REQUEST">
            <summary>
              Looks up a localized string similar to Invalid Request.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_RESPONSE">
            <summary>
              Looks up a localized string similar to Received bad response from the server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BAD_WIPE_PASSES">
            <summary>
              Looks up a localized string similar to Wipe passes value must be between 0 and 4..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASE_BAD_TEMPLATE_MATCH">
            <summary>
              Looks up a localized string similar to The template match provided is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASE_DECOMPRESSION_FAILED">
            <summary>
              Looks up a localized string similar to Error while decompressing briefcase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASE_NEED_STREAMING">
            <summary>
              Looks up a localized string similar to This operation is only supported for streaming briefcase import..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASE_NO_INIT">
            <summary>
              Looks up a localized string similar to The briefcase object has not been initialized. Obtain a briefcase importer through a call to ILFFolder::ImportBriefcase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASE_WRONG_REQUEST_TYPE">
            <summary>
              Looks up a localized string similar to This briefcase request does not support that property..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASING_IN_PROGRESS">
            <summary>
              Looks up a localized string similar to A briefcase operation is already in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_BRIEFCASING_NOT_RUNNING">
            <summary>
              Looks up a localized string similar to A briefcase operation is not in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CANNOT_UNSECURE_TAG">
            <summary>
              Looks up a localized string similar to A secure tag cannot have its security removed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CERT_STORE_OPEN_FAILED">
            <summary>
              Looks up a localized string similar to The specified certificate store could not be opened..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CERTIFICATE_LOAD_FAILED">
            <summary>
              Looks up a localized string similar to Certificate could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CERTIFICATE_NOT_TRUSTED">
            <summary>
              Looks up a localized string similar to The certificate could not be trusted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CHILD_NOT_IN_COLL">
            <summary>
              Looks up a localized string similar to The collection does not contain the specified object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_COLL_BAD_INDEX">
            <summary>
              Looks up a localized string similar to The specified index is out of range for this collection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_COMPARTMENT_NOT_FOUND">
            <summary>
              Looks up a localized string similar to There is no compartment matching the given identifier..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CUSTOM_AUDIT_LABEL_TOO_LONG">
            <summary>
              Looks up a localized string similar to The requested property name is too long..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CUSTOM_AUDIT_PROP_ALREADY_SET">
            <summary>
              Looks up a localized string similar to The requested property is already assigned to this custom audit object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CUSTOM_AUDIT_PROP_NOT_SET">
            <summary>
              Looks up a localized string similar to The requested property is not assigned to this custom audit object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CUSTOM_AUDIT_SYSTEM_PROP">
            <summary>
              Looks up a localized string similar to The requested property name is reserved for a system property..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_CYCLE_WRONG_TYPE">
            <summary>
              Looks up a localized string similar to Month definitions can only be added to annual cycles; day definitions to weekly cycles..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_DATABASE_CONFLICT">
            <summary>
              Looks up a localized string similar to This command can only be performed on objects in the same repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_DOCUMENTS_MUST_DIFFER">
            <summary>
              Looks up a localized string similar to Pages cannot be copied within the same document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_EDOC_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Document does not contain an electronic document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FAILED_CREATE_CLOUD_TICKET">
            <summary>
              Looks up a localized string similar to Failed to create a cloud ticket..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FAILED_GET_CACHED_TOKEN">
            <summary>
              Looks up a localized string similar to Failed to get cached token from provided session key..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FIELD_INDEX_NOT_EXIST">
            <summary>
              Looks up a localized string similar to The field value could not be retrieved because the specified field does not exist in that template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FIELD_NAME_NOT_EXIST">
            <summary>
              Looks up a localized string similar to The field value could not be retrieved because the specified field does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FIELD_NOT_MULTI_VALUED">
            <summary>
              Looks up a localized string similar to This field does not allow multiple values..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FILE_READ">
            <summary>
              Looks up a localized string similar to Error reading file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FILE_WRITE">
            <summary>
              Looks up a localized string similar to Error writing to file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FOLDER_NOT_RECORD">
            <summary>
              Looks up a localized string similar to This is not a record folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FOLDER_NOT_SERIES">
            <summary>
              Looks up a localized string similar to This folder is not a record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_FORBIDDEN">
            <summary>
              Looks up a localized string similar to Action not permitted by server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_GENERAL">
            <summary>
              Looks up a localized string similar to Unknown error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_HASHING_FAILED">
            <summary>
              Looks up a localized string similar to The data could not be hashed properly..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_HTTP_PRECOND_FAILED">
            <summary>
              Looks up a localized string similar to The preconditions on the HTTP request failed to be satisfied..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ICU_INITIALIZATION_FAILED">
            <summary>
              Looks up a localized string similar to The ICU module failed to initialize..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_ICU_LOCALE_INIT_FAILED">
            <summary>
              Looks up a localized string similar to Failed to initialize regional settings..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_IMAGE_TOO_SMALL">
            <summary>
              Looks up a localized string similar to Image too small to be valid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INCOMPATIBLE_FIELD_TYPES">
            <summary>
              Looks up a localized string similar to Incompatible template field types..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_CERTIFICATE_FORMAT">
            <summary>
              Looks up a localized string similar to The certificate&apos;s format is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_COLUMN">
            <summary>
              Looks up a localized string similar to Unsupported column type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_COMPARTMENT">
            <summary>
              Looks up a localized string similar to You cannot set an unauthorized compartment to be in/active by default..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_CONNECTION">
            <summary>
              Looks up a localized string similar to Invalid connection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_DATA_RANGE">
            <summary>
              Looks up a localized string similar to The specified data range is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_DATABASE_OBJ">
            <summary>
              Looks up a localized string similar to Invalid database object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_HASH">
            <summary>
              Looks up a localized string similar to Invalid hash value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_NAME">
            <summary>
              Looks up a localized string similar to Invalid object name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SCOPE">
            <summary>
              Looks up a localized string similar to Scope must be set to SCOPE_NONE only for non-entry ACEs..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SECURITY_LEVEL">
            <summary>
              Looks up a localized string similar to You cannot specify a maximum security level unless a minimum level is also specified and the object is a folder or volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SERVER_NAME">
            <summary>
              Looks up a localized string similar to Invalid server name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SIGNATURE">
            <summary>
              Looks up a localized string similar to Invalid signature..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SIGNED_BRIEFCASE">
            <summary>
              Looks up a localized string similar to The loaded file is not a valid briefcase for signing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SIGNING_KEY">
            <summary>
              Looks up a localized string similar to Invalid key pair..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_STREAM">
            <summary>
              Looks up a localized string similar to Invalid stream..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_SUBSCRIPTION">
            <summary>
              Looks up a localized string similar to Invalid notification subscription ID..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_VOLUME_DEFINITION">
            <summary>
              Looks up a localized string similar to Invalid volume definition object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_VOLUME_EXPORT_PATH">
            <summary>
              Looks up a localized string similar to Volume export path must be an empty directory..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_INVALID_XML">
            <summary>
              Looks up a localized string similar to Received invalid XML response from the server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_KEY_DATA_LOAD_FAILED">
            <summary>
              Looks up a localized string similar to Key data could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_LINKED_ANNOT_NOT_NEW">
            <summary>
              Looks up a localized string similar to An annotation cannot be linked after it is added to the database..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_LOAD_SECURITY_DLL_FAILED">
            <summary>
              Looks up a localized string similar to The Windows security DLL failed to load..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_LOC_OUT_OF_RANGE">
            <summary>
              Looks up a localized string similar to The location data for this page is too large..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_LRNP_NOT_CONNECTED">
            <summary>
              Looks up a localized string similar to Notification connection not established..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_LRNP_RESET">
            <summary>
              Looks up a localized string similar to Notification connection reset..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_MEMBER_ALREADY_IN_COLL">
            <summary>
              Looks up a localized string similar to The specified object is already a member of this collection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_CERTIFICATE">
            <summary>
              Looks up a localized string similar to No certificate loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_CONNECTION_INFO">
            <summary>
              Looks up a localized string similar to The object must have its connection set before it can be used..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_MEM">
            <summary>
              Looks up a localized string similar to Memory could not be allocated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_PATH_COLUMN">
            <summary>
              Looks up a localized string similar to The entry path column was not requested..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_PRIVATE_KEY">
            <summary>
              Looks up a localized string similar to Private key not available..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_PUBLIC_KEY">
            <summary>
              Looks up a localized string similar to Public key not available..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_RESPONSE">
            <summary>
              Looks up a localized string similar to No response received from the server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NO_SECURE_NOTIFICATIONS">
            <summary>
              Looks up a localized string similar to Cannot obtain secure notification connection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NOT_CURRENT_CONNECTION">
            <summary>
              Looks up a localized string similar to This method can only be called on the current connection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NOT_IDENTIFIED">
            <summary>
              Looks up a localized string similar to The object is not identified, and cannot be locked or read from..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NOT_LASERFICHE">
            <summary>
              Looks up a localized string similar to Could not connect to the Laserfiche Server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NOT_SECURE_CONNECTION">
            <summary>
              Looks up a localized string similar to The connection to Laserfiche is not a secure channel and no security certificate is present..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_NULL_VALUE">
            <summary>
              Looks up a localized string similar to Received unexpected null value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_OBJECT_ALREADY_EXISTS">
            <summary>
              Looks up a localized string similar to Create cannot be called on an object that already exists in the database..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_OBJECT_NOT_LOCKED">
            <summary>
              Looks up a localized string similar to The object must be locked before it can be modified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_OPERATION_NOT_RUNNING">
            <summary>
              Looks up a localized string similar to Operation is not in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_PAGE_IMAGE_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Page does not contain image data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_PAGE_INVALID_DOCUMENT">
            <summary>
              Looks up a localized string similar to The indicated page is not part of this document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_PAGE_TEXT_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Page does not contain text data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_QUERY_ALREADY_RUNNING">
            <summary>
              Looks up a localized string similar to The query object cannot process more than one query at a time..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_QUERY_COMMAND_NOT_SET">
            <summary>
              Looks up a localized string similar to The query is empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_QUERY_NOT_PARSED">
            <summary>
              Looks up a localized string similar to The query is not parsed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_RIGHTS_WRONG_OBJECT">
            <summary>
              Looks up a localized string similar to This rights object cannot be used to delete an entry from another object&apos;s ACL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_RIGHTS_WRONG_OBJECT_TYPE">
            <summary>
              Looks up a localized string similar to The right specified does not apply to this object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEARCH_ALREADY_RUNNING">
            <summary>
              Looks up a localized string similar to The search object cannot process more than one search at a time..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEARCH_COMMAND_NOT_SET">
            <summary>
              Looks up a localized string similar to The search object needs to have its command set in order to find results..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEARCH_INVALID_COLNAME">
            <summary>
              Looks up a localized string similar to The column name is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEARCH_INVALID_COLTYPE">
            <summary>
              Looks up a localized string similar to Invalid column type conversion..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEARCH_NOT_FINISHED">
            <summary>
              Looks up a localized string similar to The search has not been completed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SECURITY_LEVEL_NOT_FOUND">
            <summary>
              Looks up a localized string similar to There is no security level matching the given identifier..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SEQUENCE_NUMBER_NOT_FOUND">
            <summary>
              Looks up a localized string similar to There is no object with the given sequence number..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNATURE_IN_PROGRESS">
            <summary>
              Looks up a localized string similar to There is already a signature in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNATURE_INIT_FAILED">
            <summary>
              Looks up a localized string similar to The signature could not be initialized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNATURE_NOT_INITIALIZED">
            <summary>
              Looks up a localized string similar to The signature is not initialized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNED_BRIEFCASE_ALREADY_LOADED">
            <summary>
              Looks up a localized string similar to A briefcase file is already loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNED_BRIEFCASE_CORRUPTED_TRAILER">
            <summary>
              Looks up a localized string similar to The trailer is corrupted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNED_BRIEFCASE_LOAD_FAIL">
            <summary>
              Looks up a localized string similar to The briefcase file could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SIGNING_FAILED">
            <summary>
              Looks up a localized string similar to Error while signing data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_CERT_CN_INVALID">
            <summary>
              Looks up a localized string similar to SSL host name does not match certificate host name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_CERT_DATE_INVALID">
            <summary>
              Looks up a localized string similar to The SSL certificate is expired..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_CERT_REV_FAILED">
            <summary>
              Looks up a localized string similar to Failed to verify whether certificate is revoked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_CERT_REVOKED">
            <summary>
              Looks up a localized string similar to SSL certificate was revoked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_INVALID_CA">
            <summary>
              Looks up a localized string similar to The server&apos;s certificate was generated by an unknown Certificate Authority..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_INVALID_CERT">
            <summary>
              Looks up a localized string similar to SSL certificate is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_SSL_SECURITY_CHANNEL_ERROR">
            <summary>
              Looks up a localized string similar to Internal SSL error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STAMP_DATA_TYPE">
            <summary>
              Looks up a localized string similar to The stamp data must be a bitmap with a depth of 1..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STREAM_ALREADY_OPEN">
            <summary>
              Looks up a localized string similar to This stream is already open..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STREAM_ENCRYPT_BCASE">
            <summary>
              Looks up a localized string similar to Streaming import not supported on encrypted briefcases..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STREAM_LF6_BCASE">
            <summary>
              Looks up a localized string similar to Streaming import not supported on Laserfiche 6 briefcases..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STREAM_NOT_OPEN">
            <summary>
              Looks up a localized string similar to The stream has not been opened..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_STREAM_SYNC">
            <summary>
              Looks up a localized string similar to Invalid stream state..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TEXT_OUT_OF_RANGE">
            <summary>
              Looks up a localized string similar to The text for this page is too large..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TEXT_WRONG_PAGE">
            <summary>
              Looks up a localized string similar to The text object does not belong to the same page..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_THUMNAIL_OUT_OF_RANGE">
            <summary>
              Looks up a localized string similar to The thumbnail for this page is too large..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TIMEOUT">
            <summary>
              Looks up a localized string similar to Operation timed out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TOO_FEW_TO_MERGE">
            <summary>
              Looks up a localized string similar to At least two fields must be specified.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TOO_MUCH_BRIEFCASE_DATA">
            <summary>
              Looks up a localized string similar to Too much data was provided for the briefcase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TRUSTEE_DELETE_MULTIPLE_ERRORS">
            <summary>
              Looks up a localized string similar to Not all account properties could be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TRUSTEE_INVALID_DEVICE_ID">
            <summary>
              Looks up a localized string similar to Invalid device ID..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TRUSTEE_INVALID_DOMAIN_ACCOUNT">
            <summary>
              Looks up a localized string similar to Domain account not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_TRUSTEE_INVALID_SID">
            <summary>
              Looks up a localized string similar to Invalid textual SID..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_UNKNOWN_PROPERTY">
            <summary>
              Looks up a localized string similar to This server does not support the requested property..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_UNSUPPORTED_CRYPTO_ALGORITHM">
            <summary>
              Looks up a localized string similar to The cryptographic algorithm is not supported..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_UNSUPPORTED_SERVER_VERSION">
            <summary>
              Looks up a localized string similar to The Laserfiche Server is an unsupported version..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_ATTACH_NOT_RUNNING">
            <summary>
              Looks up a localized string similar to Volume attach is not in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_EXPORT_ALREADY_RUNNING">
            <summary>
              Looks up a localized string similar to Volume export already running..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_EXPORT_MUST_COPY_FILES">
            <summary>
              Looks up a localized string similar to The volume files must be copied in order to encrypt or compress the volume files..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_EXPORT_NOT_RUNNING">
            <summary>
              Looks up a localized string similar to Volume export is not in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_INVALID_EXPORT_VERSION">
            <summary>
              Looks up a localized string similar to Invalid volume export version..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_NO_PATH">
            <summary>
              Looks up a localized string similar to The Volume must have its Fixed or RemovablePath properties set before it can be created..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_VOLUME_PATHS_DONT_MATCH">
            <summary>
              Looks up a localized string similar to Volume paths don&apos;t match..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WINDOWS_AUTH_FAILED">
            <summary>
              Looks up a localized string similar to Windows authentication failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WINHTTP_INIT">
            <summary>
              Looks up a localized string similar to Error initializing WinHTTP..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WMI_GENERAL">
            <summary>
              Looks up a localized string similar to General WMI error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WORD_EMPTY">
            <summary>
              Looks up a localized string similar to The word you have attempted to add contains no text data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WORD_HAS_MULTIPLE_WORDS">
            <summary>
              Looks up a localized string similar to The text of the word you have attempted to append contains more than one group of delimiters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WORD_NO_DELIMITERS">
            <summary>
              Looks up a localized string similar to There are no delimiters between the last word of the text and the word you are attempting to add..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WORDSTREAM_EMPTY">
            <summary>
              Looks up a localized string similar to There are no more words in the stream..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.EIC_WRONG_STAMP_TYPE">
            <summary>
              Looks up a localized string similar to The stamp requested has a different type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9000">
            <summary>
              Looks up a localized string similar to Operation or command invalid for the requested type of object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9001">
            <summary>
              Looks up a localized string similar to Entry not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9002">
            <summary>
              Looks up a localized string similar to Object already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9003">
            <summary>
              Looks up a localized string similar to The requested portion of the document does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9004">
            <summary>
              Looks up a localized string similar to File input/output error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9005">
            <summary>
              Looks up a localized string similar to Volume is read-only..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9006">
            <summary>
              Looks up a localized string similar to Volume not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9007">
            <summary>
              Looks up a localized string similar to Path too long..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9008">
            <summary>
              Looks up a localized string similar to General database error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9009">
            <summary>
              Looks up a localized string similar to Out of space on device..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9010">
            <summary>
              Looks up a localized string similar to The user account name or password is incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9011">
            <summary>
              Looks up a localized string similar to Account locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9012">
            <summary>
              Looks up a localized string similar to Trustee not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9013">
            <summary>
              Looks up a localized string similar to Access denied..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9014">
            <summary>
              Looks up a localized string similar to Entry locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9015">
            <summary>
              Looks up a localized string similar to Template not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9016">
            <summary>
              Looks up a localized string similar to Could not find the field specified, or the field is not part of the specified template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9017">
            <summary>
              Looks up a localized string similar to Bad field value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9018">
            <summary>
              Looks up a localized string similar to Repository not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9019">
            <summary>
              Looks up a localized string similar to Invalid object name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9020">
            <summary>
              Looks up a localized string similar to The parameter is out of range or too long..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9021">
            <summary>
              Looks up a localized string similar to Page not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9022">
            <summary>
              Looks up a localized string similar to Volume currently locked or in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9023">
            <summary>
              Looks up a localized string similar to Template currently locked or in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9024">
            <summary>
              Looks up a localized string similar to Field currently locked or in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9025">
            <summary>
              Looks up a localized string similar to Error reading repository information, or the repository is misconfigured..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9026">
            <summary>
              Looks up a localized string similar to VOLUME.ID file bad, or volume otherwise corrupt..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9027">
            <summary>
              Looks up a localized string similar to Password would violate password policy..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9028">
            <summary>
              Looks up a localized string similar to Missing required data from request..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9029">
            <summary>
              Looks up a localized string similar to The maximum number of repositories that this server instance is licensed for has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9030">
            <summary>
              Looks up a localized string similar to Log in failed because the number of sessions has reached the licensed limit, or the user account has reached its session limit, or no named user license has been allocated to the user account..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9031">
            <summary>
              Looks up a localized string similar to The maximum number of volumes has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9032">
            <summary>
              Looks up a localized string similar to The maximum number of fields has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9033">
            <summary>
              Looks up a localized string similar to Your folder tree contains too many levels..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9034">
            <summary>
              Looks up a localized string similar to The maximum number of entries has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9035">
            <summary>
              Looks up a localized string similar to The current request could not be performed because there are too many existing operations running..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9036">
            <summary>
              Looks up a localized string similar to Unknown internal error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9037">
            <summary>
              Looks up a localized string similar to Invalid session..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9038">
            <summary>
              Looks up a localized string similar to Invalid content repository handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9039">
            <summary>
              Looks up a localized string similar to Multistatus response..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9040">
            <summary>
              Looks up a localized string similar to Buffer size was insufficient to complete the request..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9041">
            <summary>
              Looks up a localized string similar to The maximum number of templates has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9042">
            <summary>
              Looks up a localized string similar to The request has timed out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9043">
            <summary>
              Looks up a localized string similar to Could not obtain a connection to the database..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9044">
            <summary>
              Looks up a localized string similar to Invalid volume path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9045">
            <summary>
              Looks up a localized string similar to The operation cannot complete because an object is locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9046">
            <summary>
              Looks up a localized string similar to The repository is not recognized as a valid repository in this Laserfiche instance..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9047">
            <summary>
              Looks up a localized string similar to The object has been modified since it was last read..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9048">
            <summary>
              Looks up a localized string similar to The security identifier is not valid for Laserfiche..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9049">
            <summary>
              Looks up a localized string similar to A session cannot terminate itself..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9050">
            <summary>
              Looks up a localized string similar to Invalid column identifier..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9051">
            <summary>
              Looks up a localized string similar to The specified operation is not recognized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9052">
            <summary>
              Looks up a localized string similar to The specified operation was aborted by the user..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9053">
            <summary>
              Looks up a localized string similar to Insufficient space on target device..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9054">
            <summary>
              Looks up a localized string similar to Another operation on which this operation depends failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9055">
            <summary>
              Looks up a localized string similar to Input/output operations are not possible on logical volumes..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9056">
            <summary>
              Looks up a localized string similar to Please mount the correct volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9057">
            <summary>
              Looks up a localized string similar to The specified XML document is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9058">
            <summary>
              Looks up a localized string similar to The object has been deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9059">
            <summary>
              Looks up a localized string similar to Operation failed due to entry sharing violation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9060">
            <summary>
              Looks up a localized string similar to Annotation not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9061">
            <summary>
              Looks up a localized string similar to Folder not empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9063">
            <summary>
              Looks up a localized string similar to The entry is locked and cannot be modified, or the object needs to be refreshed before it can be updated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9064">
            <summary>
              Looks up a localized string similar to The maximum number of annotations per page has been exceeded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9065">
            <summary>
              Looks up a localized string similar to The annotations cannot be linked because their types do not match..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9066">
            <summary>
              Looks up a localized string similar to One or more required fields were omitted or had a blank value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9067">
            <summary>
              Looks up a localized string similar to The current session has been terminated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9068">
            <summary>
              Looks up a localized string similar to Operation not permitted on shortcuts..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9069">
            <summary>
              Looks up a localized string similar to Could not load SQL files..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9070">
            <summary>
              Looks up a localized string similar to Encountered a WMI error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9071">
            <summary>
              Looks up a localized string similar to Could not access the Laserfiche WMI namespace..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9072">
            <summary>
              Looks up a localized string similar to The value provided failed to satisfy the constraint on the field..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9073">
            <summary>
              Looks up a localized string similar to This user is not allowed to log in using a password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9074">
            <summary>
              Looks up a localized string similar to This user is not allowed to change their password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9075">
            <summary>
              Looks up a localized string similar to This password has expired and must be changed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9076">
             <summary>
               Looks up a localized string similar to Your temporary password has expired. Please contact your Laserfiche
            administrator for assistance..
             </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9077">
            <summary>
              Looks up a localized string similar to Tag not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9078">
            <summary>
              Looks up a localized string similar to This operation only supports the use of security tags..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9079">
            <summary>
              Looks up a localized string similar to Repository property not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9080">
            <summary>
              Looks up a localized string similar to Trustee attribute not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9081">
            <summary>
              Looks up a localized string similar to The maximum number of notification subscriptions has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9082">
            <summary>
              Looks up a localized string similar to An invalid identifier was used to configure the server notification callback..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9083">
            <summary>
              Looks up a localized string similar to This file should be converted internally..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9084">
            <summary>
              Looks up a localized string similar to A syntax error was encountered while processing the search or query statement..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9085">
            <summary>
              Looks up a localized string similar to An unrecognized character was encountered..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9086">
            <summary>
              Looks up a localized string similar to An unrecognized name was encountered..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9087">
            <summary>
              Looks up a localized string similar to Only a single CONTAINS expression is permitted in a query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9088">
            <summary>
              Looks up a localized string similar to One or more terms in the query contains a mismatched or unsupported data type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9089">
            <summary>
              Looks up a localized string similar to The name of the column is ambiguous..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9090">
            <summary>
              Looks up a localized string similar to The number of arguments supplied to the function is incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9091">
            <summary>
              Looks up a localized string similar to An end-of-file or end-of-input was encountered unexpectedly. Check for unterminated strings and open parentheses or brackets..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9092">
            <summary>
              Looks up a localized string similar to Error copying VOLUME.ID..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9093">
            <summary>
              Looks up a localized string similar to Invalid object identifier..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9094">
            <summary>
              Looks up a localized string similar to The requested link type was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9095">
            <summary>
              Looks up a localized string similar to The requested entry link was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9096">
            <summary>
              Looks up a localized string similar to Stamp not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9097">
            <summary>
              Looks up a localized string similar to Existing public or personal stamps cannot be modified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9098">
            <summary>
              Looks up a localized string similar to The operation requires that the document be put under version control..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9099">
            <summary>
              Looks up a localized string similar to The document is already checked out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9100">
            <summary>
              Looks up a localized string similar to The operation requires that the document be checked out first..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9101">
            <summary>
              Looks up a localized string similar to The operation requires that the document be checked in first..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9102">
            <summary>
              Looks up a localized string similar to The specified document version could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9103">
            <summary>
              Looks up a localized string similar to The specified version label could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9104">
            <summary>
              Looks up a localized string similar to A domain user can be linked with a maximum of one repository user..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9105">
            <summary>
              Looks up a localized string similar to A read-only session is not permitted to perform this operation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9106">
            <summary>
              Looks up a localized string similar to The HTTP response is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9107">
            <summary>
              Looks up a localized string similar to An HTTP request resulted in an error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9108">
            <summary>
              Looks up a localized string similar to PasswordProtector&apos;s encryption failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9109">
             <summary>
               Looks up a localized string similar to Mount the repository before attempting this operation. Check that the Laserfiche server has
            a valid license file and that the number of registered repositories has not exceeded the
            licensed limit..
             </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9110">
            <summary>
              Looks up a localized string similar to The database schema is the wrong type or is not a supported version..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9111">
            <summary>
              Looks up a localized string similar to The referenced records management object was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9112">
            <summary>
              Looks up a localized string similar to The briefcase file is invalid or corrupt..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9113">
            <summary>
              Looks up a localized string similar to This password is invalid because it has been used before..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9114">
            <summary>
              Looks up a localized string similar to A record series&apos; parent must be the root folder or another record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9115">
            <summary>
              Looks up a localized string similar to The operation is not permitted in the current object&apos;s records management state..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9116">
            <summary>
              Looks up a localized string similar to One or more of the selected events are not valid for this records management object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9117">
            <summary>
              Looks up a localized string similar to The entry is not eligible for final disposition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9118">
            <summary>
              Looks up a localized string similar to A final disposition type of destruction cannot be assigned to a records management object that is marked as permanent..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9119">
            <summary>
              Looks up a localized string similar to The template is assigned to one or more entries and must be unassigned before it can be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9120">
            <summary>
              Looks up a localized string similar to The tag is assigned to one or more entries and must be unassigned before it can be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9121">
            <summary>
              Looks up a localized string similar to The user key pair could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9122">
            <summary>
              Looks up a localized string similar to The template is assigned to one or more entries in the recycle bin. These entries must be purged before it can be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9123">
            <summary>
              Looks up a localized string similar to Initiating background recycle bin purge failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9124">
            <summary>
              Looks up a localized string similar to The tag is assigned to one or more entries in the recycle bin. These entries must be purged before it can be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9125">
            <summary>
              Looks up a localized string similar to Audit reason not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9126">
            <summary>
              Looks up a localized string similar to An audit reason was not specified, or an invalid reason was specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9127">
            <summary>
              Looks up a localized string similar to The number of named user accounts has exceeded the licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9128">
            <summary>
              Looks up a localized string similar to The briefcase failed to import..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9129">
            <summary>
              Looks up a localized string similar to The briefcase failed to export..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9130">
            <summary>
              Looks up a localized string similar to The operation could not be completed because the volume is offline..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9131">
            <summary>
              Looks up a localized string similar to The search engine is offline..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9132">
            <summary>
              Looks up a localized string similar to The search engine encountered an internal error. Please check the search engine error log for more details..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9133">
            <summary>
              Looks up a localized string similar to Page text out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9134">
            <summary>
              Looks up a localized string similar to Location data out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9135">
            <summary>
              Looks up a localized string similar to Thumbnail data out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9136">
            <summary>
              Looks up a localized string similar to Unrecognized query language dialect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9137">
            <summary>
              Looks up a localized string similar to Link group does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9138">
            <summary>
              Looks up a localized string similar to Duplicate link numbers in a link group are not allowed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9139">
            <summary>
              Looks up a localized string similar to No such document in the link group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9140">
            <summary>
              Looks up a localized string similar to No such document in the link group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9141">
            <summary>
              Looks up a localized string similar to The version number is out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9142">
            <summary>
              Looks up a localized string similar to Unable to parse the response returned by the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9143">
            <summary>
              Looks up a localized string similar to Unable to obtain the context hit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9144">
            <summary>
              Looks up a localized string similar to Individual search term locations missing in the search result..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9146">
            <summary>
              Looks up a localized string similar to A correlation name &quot;[1]&quot; is specified multiple times in the FROM clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9147">
            <summary>
              Looks up a localized string similar to A volume already exists at the specified path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9148">
            <summary>
              Looks up a localized string similar to A column prefix &quot;[1]&quot; does not match with a table name or alias name used in the query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9149">
            <summary>
              Looks up a localized string similar to A correlation name &quot;[1]&quot; has the same exposed name of a table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9150">
            <summary>
              Looks up a localized string similar to Two tables have the same exposed name &quot;[1]&quot; in the FROM clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9151">
            <summary>
              Looks up a localized string similar to Ambiguous column &quot;[1]&quot; exists in the query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9152">
            <summary>
              Looks up a localized string similar to Account locked: exceeded maximum period of inactivity..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9153">
            <summary>
              Looks up a localized string similar to Account locked: too many unsuccessful log in attempts..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9154">
            <summary>
              Looks up a localized string similar to The fields cannot be merged because they have incompatible types, lengths, or constraints..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9155">
            <summary>
              Looks up a localized string similar to A literal is missing a final quote in the search query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9156">
            <summary>
              Looks up a localized string similar to An image thumbnail could not be generated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9157">
            <summary>
              Looks up a localized string similar to The password policy does not allow passwords to contain the user&apos;s name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9158">
            <summary>
              Looks up a localized string similar to The password does not meet the minimum length requirement of the password policy..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9159">
            <summary>
              Looks up a localized string similar to The type of field selected cannot be displayed in a folder listing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9160">
            <summary>
              Looks up a localized string similar to Invalid system search type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9161">
            <summary>
              Looks up a localized string similar to Invalid date format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9162">
            <summary>
              Looks up a localized string similar to Invalid date/time format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9163">
            <summary>
              Looks up a localized string similar to The Temporary Password option may not be enabled by users on their own account or for users that are not allowed to change their password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9164">
            <summary>
              Looks up a localized string similar to Invalid template XML definition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9165">
            <summary>
              Looks up a localized string similar to Could not connect to DBMS server. Please check the Event Viewer on the Laserfiche Server machine for more information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9166">
            <summary>
              Looks up a localized string similar to Could not initialize Web-Based Enterprise Management (WBEM) for the WMI subsystem..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9167">
            <summary>
              Looks up a localized string similar to Document locked with a persistent lock..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9168">
            <summary>
              Looks up a localized string similar to Maximum number of fields in a template reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9169">
            <summary>
              Looks up a localized string similar to Timed out waiting for a search operation to complete..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9170">
            <summary>
              Looks up a localized string similar to Date/time out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9171">
            <summary>
              Looks up a localized string similar to Another document in the link group has already been locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9172">
            <summary>
              Looks up a localized string similar to Insufficient privileges to change account privileges for your own account..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9173">
            <summary>
              Looks up a localized string similar to A reason is required when freezing records..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9174">
            <summary>
              Looks up a localized string similar to The action is forbidden because the entry or one of its descendants is frozen..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9175">
            <summary>
              Looks up a localized string similar to Attempt to call an unrecognized function..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9176">
            <summary>
              Looks up a localized string similar to Invalid function arguments..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9177">
            <summary>
              Looks up a localized string similar to Encountered an error with the ODBC driver. Please check the event viewer on the Laserfiche Server machine for more information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9178">
            <summary>
              Looks up a localized string similar to Invalid time format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9179">
            <summary>
              Looks up a localized string similar to License lacks feature activation required for the requested operation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9180">
            <summary>
              Looks up a localized string similar to The specified template field is not assigned to this entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9181">
            <summary>
              Looks up a localized string similar to The specified operator is not supported for the requested search type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9182">
            <summary>
              Looks up a localized string similar to Search terms that begin with &apos;%%&apos; or &apos;#&apos; must be enclosed in quotes. For example, to search for the string &apos;#29A&apos;, use &apos;&quot;#29A&quot;&apos;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9183">
            <summary>
              Looks up a localized string similar to The operation is not permitted because the volume is permanent..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9184">
            <summary>
              Looks up a localized string similar to The entry is not frozen or the freeze was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9185">
            <summary>
              Looks up a localized string similar to An entry that is not under records management cannot be frozen..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9186">
            <summary>
              Looks up a localized string similar to Only record folders can be created under a record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9187">
            <summary>
              Looks up a localized string similar to The current file area cannot be used as an accession location..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9188">
            <summary>
              Looks up a localized string similar to Invalid record retention duration..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9189">
            <summary>
              Looks up a localized string similar to The record or record folder has already been cutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9190">
            <summary>
              Looks up a localized string similar to The record or record folder has already been closed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9191">
            <summary>
              Looks up a localized string similar to The record or record folder cannot be re-opened at this point..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9192">
            <summary>
              Looks up a localized string similar to The record or record folder is not eligible for cutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9193">
            <summary>
              Looks up a localized string similar to The record or record folder cannot be uncutoff at this point..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9194">
            <summary>
              Looks up a localized string similar to Calendar cycle not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9195">
            <summary>
              Looks up a localized string similar to Calendar cycle code is already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9196">
            <summary>
              Looks up a localized string similar to Cannot delete or modify the calendar cycle because it is currently referenced by a records management object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9197">
            <summary>
              Looks up a localized string similar to Records location does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9198">
            <summary>
              Looks up a localized string similar to Records location name is already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9199">
            <summary>
              Looks up a localized string similar to Cannot delete the records location because it is currently in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9200">
            <summary>
              Looks up a localized string similar to Cutoff criterion not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9201">
            <summary>
              Looks up a localized string similar to Cutoff criterion name is already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9202">
            <summary>
              Looks up a localized string similar to Cannot delete or modify the cutoff criterion because it is currently in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9203">
            <summary>
              Looks up a localized string similar to Event definition not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9204">
            <summary>
              Looks up a localized string similar to Event definition name already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9205">
            <summary>
              Looks up a localized string similar to Cannot delete the event definition because it is currently in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9206">
            <summary>
              Looks up a localized string similar to Retention/disposition schedule not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9207">
            <summary>
              Looks up a localized string similar to Retention/disposition schedule name already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9208">
            <summary>
              Looks up a localized string similar to Cannot delete or modify the retention/disposition schedule because it is currently in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9209">
            <summary>
              Looks up a localized string similar to The records transfer definition cannot be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9210">
            <summary>
              Looks up a localized string similar to Alternate retention/disposition schedules cannot themselves specify an alternate retention schedule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9211">
            <summary>
              Looks up a localized string similar to A retention/disposition schedule cannot specify itself as its own alternate schedule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9212">
            <summary>
              Looks up a localized string similar to Cannot delete object that is still in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9213">
            <summary>
              Looks up a localized string similar to The requested link type is built-in and cannot be modified or deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9214">
            <summary>
              Looks up a localized string similar to The requested Laserfiche external table name is taken..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9215">
            <summary>
              Looks up a localized string similar to A retention schedule that requires records to be superseded does not support a retention period or transfers..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9216">
            <summary>
              Looks up a localized string similar to Only the latest version of a document can be revised..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9217">
            <summary>
              Looks up a localized string similar to A trustee cannot delete itself..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9218">
            <summary>
              Looks up a localized string similar to The requested user area cannot be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9219">
            <summary>
              Looks up a localized string similar to Invalid external database table name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9220">
            <summary>
              Looks up a localized string similar to Invalid Laserfiche external table name. The maximum length of the name should not exceed 63 characters and should contain only letters (a-z/A-Z), numbers or underscores..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9221">
            <summary>
              Looks up a localized string similar to Invalid external database name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9222">
            <summary>
              Looks up a localized string similar to Invalid external database schema name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9223">
            <summary>
              Looks up a localized string similar to Retention schedule is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9224">
            <summary>
              Looks up a localized string similar to A final disposition location is not permitted on this retention schedule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9225">
            <summary>
              Looks up a localized string similar to Invalid external database server name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9226">
            <summary>
              Looks up a localized string similar to External database identifier is invalid; must be a valid ASCII string..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9227">
            <summary>
              Looks up a localized string similar to Unable to locate the specified external database table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9228">
            <summary>
              Looks up a localized string similar to Cutoff criterion is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9229">
            <summary>
              Looks up a localized string similar to Unknown Laserfiche external table name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9230">
            <summary>
              Looks up a localized string similar to A trustee cannot disable itself..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9231">
            <summary>
              Looks up a localized string similar to The password specified is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9232">
            <summary>
              Looks up a localized string similar to Cannot move or rename a checked out document or a folder which has a checked out document in its tree..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9233">
            <summary>
              Looks up a localized string similar to An event could not be unset because it could not be found or the folder is not in a state where events may be unset..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9234">
            <summary>
              Looks up a localized string similar to Filing date cannot be changed after cutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9235">
            <summary>
              Looks up a localized string similar to Cannot link an entry to itself..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9236">
            <summary>
              Looks up a localized string similar to Creating a search catalog failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9237">
            <summary>
              Looks up a localized string similar to Could not enable audit log..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9238">
            <summary>
              Looks up a localized string similar to The specified account is of the wrong type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9239">
            <summary>
              Looks up a localized string similar to Invalid search. Full-text searches must contain some non-wildcard characters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9240">
            <summary>
              Looks up a localized string similar to Entry lock not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9241">
            <summary>
              Looks up a localized string similar to Shortcuts cannot be locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9242">
            <summary>
              Looks up a localized string similar to Record series with the same code already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9243">
            <summary>
              Looks up a localized string similar to Invalid access right..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9244">
            <summary>
              Looks up a localized string similar to Cannot set the current user account to have read-only access..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9245">
            <summary>
              Looks up a localized string similar to The search parameter is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9246">
            <summary>
              Looks up a localized string similar to Operation not allowed, because performing it would cause the entry to become hidden from you..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9247">
            <summary>
              Looks up a localized string similar to The fields cannot be merged because one or more entries have values for both fields..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9248">
            <summary>
              Looks up a localized string similar to This field cannot be converted to hold single values because one or more entries exist with multiple values..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9249">
            <summary>
              Looks up a localized string similar to The search parameter is out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9250">
            <summary>
              Looks up a localized string similar to One or more entries in the recycle bin have field values that do not satisfy the constraint on the field..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9251">
            <summary>
              Looks up a localized string similar to A field is included in the template more than once..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9252">
            <summary>
              Looks up a localized string similar to The bitmap data exceeds the maximum size..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9253">
            <summary>
              Looks up a localized string similar to Export event reported with an invalid event type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9254">
            <summary>
              Looks up a localized string similar to BLOB field types and values are not supported in LFQL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9255">
            <summary>
              Looks up a localized string similar to Invalid filter expression: error in syntax..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9256">
            <summary>
              Looks up a localized string similar to Invalid filter expression: input data type is incorrect for expression..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9257">
            <summary>
              Looks up a localized string similar to Invalid filter expression: missing characters or bad format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9258">
            <summary>
              Looks up a localized string similar to Invalid filter expression: field does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9259">
            <summary>
              Looks up a localized string similar to The number of pages in the repository has exceeded the licensed page limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9260">
            <summary>
              Looks up a localized string similar to Error while constructing audit log: file I/O error or corrupted audit log..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9261">
            <summary>
              Looks up a localized string similar to Failed to initialize the tokenizer. Context hits are not generated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9262">
            <summary>
              Looks up a localized string similar to The volume cannot be detached to a legacy format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9263">
            <summary>
              Looks up a localized string similar to Cannot copy and paste a record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9264">
            <summary>
              Looks up a localized string similar to Fixed path for a volume must either be empty or contain a valid VOLUME.ID file and may not be a subdirectory of the current fixed path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9265">
            <summary>
              Looks up a localized string similar to There was an error decompressing the briefcase. The briefcase file may be corrupt, the disk may be out of space, or another I/O error occurred..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9266">
            <summary>
              Looks up a localized string similar to The audit log could not be moved..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9267">
            <summary>
              Looks up a localized string similar to Only the first approximately 2000 context hits of an entry are available..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9268">
            <summary>
              Looks up a localized string similar to The search term exceeds the maximum length..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9269">
            <summary>
              Looks up a localized string similar to The search term you have entered is too complex to process. Please rewrite the search term and break it up into smaller search terms..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9270">
            <summary>
              Looks up a localized string similar to Encryption failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9271">
            <summary>
              Looks up a localized string similar to Failed to obtain a cryptographic service provider (CSP)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9272">
            <summary>
              Looks up a localized string similar to Failed to prepare the hashing algorithm..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9273">
            <summary>
              Looks up a localized string similar to Failed to hash the password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9274">
            <summary>
              Looks up a localized string similar to Failed to generate the encryption key..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9275">
            <summary>
              Looks up a localized string similar to Cannot encrypt or compress a logical volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9276">
            <summary>
              Looks up a localized string similar to Cannot compress or encrypt a physical volume linked to a logical volume if it is still active..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9277">
            <summary>
              Looks up a localized string similar to The file is unavailable because the volume is currently secured. An administrator must unlock the secured volume to make the contents viewable..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9278">
            <summary>
              Looks up a localized string similar to The volume is not encrypted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9279">
            <summary>
              Looks up a localized string similar to Failed to write repository encryption key to disk..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9280">
            <summary>
              Looks up a localized string similar to Failed to write volume encryption key to disk..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9281">
            <summary>
              Looks up a localized string similar to Calendar cycle period not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9282">
            <summary>
              Looks up a localized string similar to Encryption key not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9283">
            <summary>
              Looks up a localized string similar to Error reading encryption key configuration..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9284">
            <summary>
              Looks up a localized string similar to A private annotation has been skipped on import because it does not belong to a trustee present in this repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9285">
            <summary>
              Looks up a localized string similar to Decryption failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9286">
            <summary>
              Looks up a localized string similar to Compressed file data is invalid or corrupt and cannot be decompressed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9287">
            <summary>
              Looks up a localized string similar to Error compressing file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9288">
            <summary>
              Looks up a localized string similar to This repository does not have an associated catalog. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9289">
            <summary>
              Looks up a localized string similar to You have registered your repository, but the search catalog could not be attached. You may attach the catalog at a later time. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9290">
            <summary>
              Looks up a localized string similar to The repository cannot be unregistered because the search catalog could not be detached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9291">
            <summary>
              Looks up a localized string similar to The search engine is currently offline and cannot process full text search requests. Please contact your Laserfiche administrator to start the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9292">
            <summary>
              Looks up a localized string similar to The search engine is currently offline and cannot process any indexing requests. Please contact your Laserfiche administrator to start the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9293">
            <summary>
              Looks up a localized string similar to You cannot configure search catalog settings while the search engine is offline. Please contact your Laserfiche administrator to start the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9294">
            <summary>
              Looks up a localized string similar to You cannot perform full text searches in a repository with no search catalog. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9295">
            <summary>
              Looks up a localized string similar to You cannot index a repository with no search catalog. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9296">
            <summary>
              Looks up a localized string similar to You cannot configure stop words in a repository with no search catalog. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9297">
            <summary>
              Looks up a localized string similar to The repository has been successfully attached but no search index catalog was detected. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9298">
            <summary>
              Looks up a localized string similar to The locale name is not valid or the locale data could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9299">
            <summary>
              Looks up a localized string similar to The time zone name is not valid or the time zone data could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9300">
            <summary>
              Looks up a localized string similar to Time zone conversion operation failed with an error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9301">
            <summary>
              Looks up a localized string similar to Loading the date or time pattern for the current locale failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9302">
            <summary>
              Looks up a localized string similar to Setting the date or time pattern to the supplied string failed; check the pattern for syntax errors..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9303">
            <summary>
              Looks up a localized string similar to Loading a number or currency pattern for the current locale failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9304">
            <summary>
              Looks up a localized string similar to Setting a number or currency pattern for the current locale failed; check the pattern for syntax errors..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9305">
            <summary>
              Looks up a localized string similar to Formatting a date or time using locale-sensitive settings failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9306">
            <summary>
              Looks up a localized string similar to Formatting a number, percentage or currency value using locale-sensitive settings failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9307">
            <summary>
              Looks up a localized string similar to Only one expression can be specified in the SELECT list when the subquery is not introduced with the EXISTS operator..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9308">
            <summary>
              Looks up a localized string similar to Each GROUP BY expression must contain at least one column that is not an outer reference..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9309">
            <summary>
              Looks up a localized string similar to A column is invalid in the select list because it is not contained in either an aggregate function or the GROUP BY clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9310">
            <summary>
              Looks up a localized string similar to A column is invalid in the ORDER BY clause because it is not contained in either an aggregate function or the GROUP BY clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9311">
            <summary>
              Looks up a localized string similar to Compressing an archived audit log file failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9312">
            <summary>
              Looks up a localized string similar to A column reference is invalid in the HAVING clause because it is not contained in either an aggregate function or the GROUP BY clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9313">
            <summary>
              Looks up a localized string similar to An aggregate may not appear in the WHERE clause unless it is in a subquery contained in a HAVING clause or a SELECT list, and the column being aggregated is an outer reference..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9314">
            <summary>
              Looks up a localized string similar to Database error: conversion failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9315">
            <summary>
              Looks up a localized string similar to Conversion failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9316">
            <summary>
              Looks up a localized string similar to Invalid encryption header..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9317">
            <summary>
              Looks up a localized string similar to The encrypted file uses an unsupported version format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9318">
            <summary>
              Looks up a localized string similar to The encrypted file is corrupt..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9319">
            <summary>
              Looks up a localized string similar to Invalid compression header..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9320">
            <summary>
              Looks up a localized string similar to The compressed file uses an unsupported version format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9321">
            <summary>
              Looks up a localized string similar to The compressed file is corrupt and cannot be decompressed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9322">
            <summary>
              Looks up a localized string similar to Invalid conversion format specified in the TO_CHAR() function..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9323">
            <summary>
              Looks up a localized string similar to The conversion format specified in the TO_CHAR() function can only be used in the SELECT clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9324">
            <summary>
              Looks up a localized string similar to The conversion format specified in the TO_CHAR() function can only be used with the DATE, TIME, DATETIME and NUMBER types..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9325">
            <summary>
              Looks up a localized string similar to The CONTAINS expression may only appear in the WHERE clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9326">
            <summary>
              Looks up a localized string similar to Only one CONTAINS expression may appear in the WHERE clause..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9327">
            <summary>
              Looks up a localized string similar to The TO_LOCAL_TIME() and the TO_UTC_TIME() LFQL functions can only be used with DATETIME literals if the DBMS type is MSSQL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9328">
            <summary>
              Looks up a localized string similar to The named user database could not be found or was not opened correctly..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9329">
            <summary>
              Looks up a localized string similar to The named user was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9330">
            <summary>
              Looks up a localized string similar to The named device was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9331">
            <summary>
              Looks up a localized string similar to This operation is available only on Avante licensed systems..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9332">
            <summary>
              Looks up a localized string similar to Invalid device ID provided..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9333">
            <summary>
              Looks up a localized string similar to The number of registered retrieval named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9334">
            <summary>
              Looks up a localized string similar to The number of registered named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9335">
            <summary>
              Looks up a localized string similar to Initializing the named user database failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9336">
            <summary>
              Looks up a localized string similar to Users cannot log in at this time because an administrative lockout is in effect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9337">
            <summary>
              Looks up a localized string similar to The field constraint has a syntax error or is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9338">
            <summary>
              Looks up a localized string similar to The version label is already in use within this version history..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9339">
            <summary>
              Looks up a localized string similar to Too many redactions; no more redactions can be drawn on this page because of memory or built-in limits..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9340">
            <summary>
              Looks up a localized string similar to Failed to create a LFS helper process..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9341">
            <summary>
              Looks up a localized string similar to A record series&apos; parent must not contain a record folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9342">
            <summary>
              Looks up a localized string similar to Record series may contain either other record series or record folders, but not both..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9343">
            <summary>
              Looks up a localized string similar to Error moving volume contents because of an I/O error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9344">
            <summary>
              Looks up a localized string similar to Specified object type not recognized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9345">
            <summary>
              Looks up a localized string similar to Unique codes are required for record series with the same parent series or folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9346">
            <summary>
              Looks up a localized string similar to The requested custom audit reason could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9347">
            <summary>
              Looks up a localized string similar to The audit record data exceeds the size limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9348">
            <summary>
              Looks up a localized string similar to The selected field type and format settings are incompatible..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9351">
            <summary>
              Looks up a localized string similar to The number of registered retrieval repository named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9352">
            <summary>
              Looks up a localized string similar to The number of registered repository named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9353">
            <summary>
              Looks up a localized string similar to Invalid thumbnail format. The dimension of the image must be within 112x112 pixels..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9354">
            <summary>
              Looks up a localized string similar to The maximum number of errors has been reached for this operation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9355">
            <summary>
              Looks up a localized string similar to The LDAP credentials provided could not be authenticated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9356">
            <summary>
              Looks up a localized string similar to LDAP server profile not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9357">
            <summary>
              Looks up a localized string similar to LDAP query could not be completed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9358">
            <summary>
              Looks up a localized string similar to Unable to move annotations of that type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9359">
            <summary>
              Looks up a localized string similar to Alternative edoc not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9360">
            <summary>
              Looks up a localized string similar to Fail to create an alternative edoc..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9361">
            <summary>
              Looks up a localized string similar to Invalid name for an alternative edoc..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9362">
            <summary>
              Looks up a localized string similar to Cannot encrypt or compress a volume when it is exported in place..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9363">
             <summary>
               Looks up a localized string similar to The volume is unavailable because it is currently secured. An administrator
            must unlock the secured volume to make the contents viewable..
             </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9364">
            <summary>
              Looks up a localized string similar to The full text search request has timed out. Please try again and resubmit your search..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9365">
            <summary>
              Looks up a localized string similar to Entry in recycle bin..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9366">
            <summary>
              Looks up a localized string similar to The record can only be uncutoff by removing the link that triggers the cutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9367">
            <summary>
              Looks up a localized string similar to The dynamic field definition you specified could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9368">
            <summary>
              Looks up a localized string similar to The dynamic field definition is not correctly formed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9369">
            <summary>
              Looks up a localized string similar to The dynamic field definition makes reference to a field that is not in the template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9370">
            <summary>
              Looks up a localized string similar to A dynamic field definition that uses simple binding can only reference a parent field that also uses simple binding. The parent field must be present in the same external table but use a different column from that table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9371">
            <summary>
              Looks up a localized string similar to The dynamic field definitions in the template have field references that form a dependency loop..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9372">
            <summary>
              Looks up a localized string similar to Laserfiche Query Stream: Incompatible stream..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9373">
            <summary>
              Looks up a localized string similar to Laserfiche Query Stream: No more data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9374">
            <summary>
              Looks up a localized string similar to Laserfiche Query Stream: Invalid Query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9375">
            <summary>
              Looks up a localized string similar to Review cycle not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9376">
            <summary>
              Looks up a localized string similar to The repository cannot be unmounted because there are one or more open sessions..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9377">
            <summary>
              Looks up a localized string similar to The specified volume path is not empty.  It may be in use by another volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9378">
            <summary>
              Looks up a localized string similar to Insufficient information to calculate the disposition eligibility date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9379">
            <summary>
              Looks up a localized string similar to Invalid cutoff criteria to calculate the disposition eligibility date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9380">
            <summary>
              Looks up a localized string similar to Insufficient information to calculate the cutoff eligibility date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9381">
            <summary>
              Looks up a localized string similar to Invalid cutoff criteria to calculate the cutoff eligibility date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9382">
            <summary>
              Looks up a localized string similar to Cutoff criteria cannot be changed after cutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9383">
            <summary>
              Looks up a localized string similar to This operation can only be performed on a single record folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9384">
            <summary>
              Looks up a localized string similar to This operation requires subfolder recursion..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9385">
            <summary>
              Looks up a localized string similar to Email server profile not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9386">
            <summary>
              Looks up a localized string similar to A final disposition type of destruction cannot be assigned to a records management object that is marked for transfer or accession to NARA..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9387">
            <summary>
              Looks up a localized string similar to Could not start email sender..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9388">
            <summary>
              Looks up a localized string similar to Error communicating with email sender..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9389">
            <summary>
              Looks up a localized string similar to Error reading from email sender..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9390">
            <summary>
              Looks up a localized string similar to Could not send email..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9391">
            <summary>
              Looks up a localized string similar to The specified password contains invalid characters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9392">
            <summary>
              Looks up a localized string similar to Audit log not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9393">
            <summary>
              Looks up a localized string similar to Detected a corrupt audit log..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9394">
            <summary>
              Looks up a localized string similar to The dynamic field definition is currently in use and must be unassigned before it can be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9395">
            <summary>
              Looks up a localized string similar to A simple dynamic field definition must have an external table specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9396">
            <summary>
              Looks up a localized string similar to A simple dynamic field definition must have an external column specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9397">
            <summary>
              Looks up a localized string similar to Validation cannot be completed for dynamic field definitions with more than one query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9398">
            <summary>
              Looks up a localized string similar to All dynamic field definition queries must have a condition defined, except for the default query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9399">
            <summary>
              Looks up a localized string similar to The dynamic field query condition is not correctly formed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9400">
            <summary>
              Looks up a localized string similar to All dynamic field definition queries must have the query text defined..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9401">
            <summary>
              Looks up a localized string similar to The dynamic field query is not correctly formed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9402">
            <summary>
              Looks up a localized string similar to The default dynamic field query may not have a query condition or require a value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9403">
            <summary>
              Looks up a localized string similar to This function is only available for full-text search within a document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9404">
            <summary>
              Looks up a localized string similar to A bind variable type cannot be resolved..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9405">
            <summary>
              Looks up a localized string similar to Invalid search collation rule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9406">
            <summary>
              Looks up a localized string similar to Search collation rule is supported with Oracle 10g or higher..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9407">
            <summary>
              Looks up a localized string similar to The briefcase is encrypted. A password is required to import it..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9408">
            <summary>
              Looks up a localized string similar to The full text search statement is empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9409">
            <summary>
              Looks up a localized string similar to Failed to initialize the external table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9410">
            <summary>
              Looks up a localized string similar to Invalid LFQL collation rule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9411">
            <summary>
              Looks up a localized string similar to LFQL collation rule is supported with Oracle 10g or higher..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9412">
            <summary>
              Looks up a localized string similar to A cryptographic function either failed or was not available..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9413">
            <summary>
              Looks up a localized string similar to The DBMS of this repository does not support the use of the LIMIT and the OFFSET keywords..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9414">
            <summary>
              Looks up a localized string similar to Unknown LFLIST table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9415">
            <summary>
              Looks up a localized string similar to LFLIST table: Invalid access right..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9416">
            <summary>
              Looks up a localized string similar to Signature not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9417">
            <summary>
              Looks up a localized string similar to Unable to register an external table that contains an invalid column type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9418">
            <summary>
              Looks up a localized string similar to Certificate not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9419">
            <summary>
              Looks up a localized string similar to Invalid certificate thumbprint..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9420">
            <summary>
              Looks up a localized string similar to The Laserfiche query you have entered is too complex to process. Please rewrite the query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9421">
            <summary>
              Looks up a localized string similar to Invalid search catalog status..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9422">
            <summary>
              Looks up a localized string similar to The SQL column type is not supported in LFQL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9423">
            <summary>
              Looks up a localized string similar to The specified security classification level was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9424">
            <summary>
              Looks up a localized string similar to Cannot file an entry with a higher security classification level in a folder of a lower classification level..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9425">
            <summary>
              Looks up a localized string similar to The specified discussion alert template was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9426">
            <summary>
              Looks up a localized string similar to The specified comment template was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9427">
            <summary>
              Looks up a localized string similar to The specified discussion was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9428">
            <summary>
              Looks up a localized string similar to The specified topic was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9429">
            <summary>
              Looks up a localized string similar to The specified comment was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9430">
            <summary>
              Looks up a localized string similar to The specified discussion watch was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9431">
            <summary>
              Looks up a localized string similar to The specified topic watch was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9432">
            <summary>
              Looks up a localized string similar to The signature could not be deleted because there are countersignatures that depend on it..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9433">
            <summary>
              Looks up a localized string similar to Unknown XML property encountered..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9434">
            <summary>
              Looks up a localized string similar to An error was encountered in the XML signature library..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9435">
            <summary>
              Looks up a localized string similar to An invalid certificate was specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9436">
            <summary>
              Looks up a localized string similar to An invalid signing key was specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9437">
            <summary>
              Looks up a localized string similar to ORDER BY items must appear in the select list if SELECT DISTINCT is specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9438">
            <summary>
              Looks up a localized string similar to The specified certificate could not be trusted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9439">
            <summary>
              Looks up a localized string similar to The text, ntext, and image data types cannot be sorted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9440">
            <summary>
              Looks up a localized string similar to The ASN.1 encoder encountered an error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9441">
            <summary>
              Looks up a localized string similar to The ASN.1 decoder encountered an error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9442">
            <summary>
              Looks up a localized string similar to Failed to issue a timestamp request to the TSA..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9443">
            <summary>
              Looks up a localized string similar to Received an invalid response from the TSA..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9444">
            <summary>
              Looks up a localized string similar to The digital timestamp request was rejected by the TSA..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9445">
            <summary>
              Looks up a localized string similar to Search plan not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9446">
            <summary>
              Looks up a localized string similar to Search plan build failed: Invalid search syntax..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9447">
            <summary>
              Looks up a localized string similar to Search plan build failed: Search syntax does not contain any hint..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9448">
            <summary>
              Looks up a localized string similar to The SQL data type of a column is not supported by the ODBC driver. Please check the event viewer on the Laserfiche Server machine for more information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9449">
            <summary>
              Looks up a localized string similar to The SQL data type of a column in the external table is not supported..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9450">
            <summary>
              Looks up a localized string similar to Only full-text searches can be used with the WITHIN operator..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9451">
            <summary>
              Looks up a localized string similar to The search catalog could not be created or it failed to start. Please check the Windows Application event log for details..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9452">
            <summary>
              Looks up a localized string similar to The repository has been successfully attached but the search index catalog needs to be upgraded. Please run the Full-Text Search Catalog Upgrade Wizard to update it. Until a catalog is attached or created, you will not be able to run full text searches on the repository or index your documents. You may attach the associated catalog or create a new one through the Index node in the Laserfiche Administration Console. If you create a new catalog, you will need to reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9453">
            <summary>
              Looks up a localized string similar to An audited event cannot be completed while the auditor is locked down..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9454">
            <summary>
              Looks up a localized string similar to The connection string is incompatible with the DBMS type of the repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9455">
            <summary>
              Looks up a localized string similar to Failed to set up the dynamic fields due to a type conflict. The type of the field and the type of the SQL column must be compatible..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9456">
            <summary>
              Looks up a localized string similar to Failed to set up the dynamic fields as specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9457">
            <summary>
              Looks up a localized string similar to Unknown Laserfiche external table column name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9458">
            <summary>
              Looks up a localized string similar to Failed to connect to the LFS helper process..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9459">
            <summary>
              Looks up a localized string similar to LFS helper process returns invalid result..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9460">
            <summary>
              Looks up a localized string similar to The LFS helper executable file is not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9461">
            <summary>
              Looks up a localized string similar to Failed to start the LFS helper process..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9462">
            <summary>
              Looks up a localized string similar to The access control list (ACL) could not be modified because the size would exceed the 64 KB limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9463">
            <summary>
              Looks up a localized string similar to Failed to create a record series with an empty series code. The repository option &quot;Require unique series code&quot; is set to true..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9464">
            <summary>
              Looks up a localized string similar to This catalog is from an earlier version of Laserfiche, and is not compatible with this version. You will need to create a new catalog and reindex your repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9465">
            <summary>
              Looks up a localized string similar to The time-stamp request could not be processed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9466">
            <summary>
              Looks up a localized string similar to The time-stamp authority is disabled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9467">
            <summary>
              Looks up a localized string similar to The time-stamping library could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9468">
            <summary>
              Looks up a localized string similar to The time-stamp authority profile was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9469">
            <summary>
              Looks up a localized string similar to Error removing the time-stamp authority profile..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9470">
            <summary>
              Looks up a localized string similar to Error storing the time-stamp authority profile..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9471">
            <summary>
              Looks up a localized string similar to Error reading the time-stamp authority profiles from the registry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9472">
            <summary>
              Looks up a localized string similar to The search engine encountered an error when parsing the full text search query..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9473">
            <summary>
              Looks up a localized string similar to The digital time-stamp cannot guarantee that this data existed prior to the specified cutoff time..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9474">
            <summary>
              Looks up a localized string similar to The time-stamp has an invalid signature..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9475">
            <summary>
              Looks up a localized string similar to Error reading search catalog name or UUID..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9476">
            <summary>
              Looks up a localized string similar to Error reading search engine&apos;s URL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9477">
            <summary>
              Looks up a localized string similar to Error reading search engine&apos;s port..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9478">
            <summary>
              Looks up a localized string similar to Error reading search catalog&apos;s path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9479">
            <summary>
              Looks up a localized string similar to Error connecting to the search engine. Either the search engine is offline or the search engine connection settings are misconfigured. Please contact your Laserfiche administrator..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9480">
            <summary>
              Looks up a localized string similar to The review setting for vital records was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9481">
            <summary>
              Looks up a localized string similar to The review interval unit was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9482">
            <summary>
              Looks up a localized string similar to Invalid review interval. The interval length must be greater than 0 and the interval unit must be defined. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9483">
            <summary>
              Looks up a localized string similar to The review interval unit is missing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9484">
            <summary>
              Looks up a localized string similar to Vital records can only be reviewed by a calendar cycle or by a time interval..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9485">
            <summary>
              Looks up a localized string similar to Invalid stop word found in the stop word list..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9486">
            <summary>
              Looks up a localized string similar to Failed to attach a search catalog..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9487">
            <summary>
              Looks up a localized string similar to Counter-signing is only allowed for signatures on the same document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9488">
            <summary>
              Looks up a localized string similar to The latest version of a version-controlled document cannot be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9489">
            <summary>
              Looks up a localized string similar to Failed to create a search catalog. A duplicate search catalog was found for the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9490">
            <summary>
              Looks up a localized string similar to The search catalog failed to start. One or more required index files are missing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9491">
            <summary>
              Looks up a localized string similar to The search catalog is in read-only mode. Full-text search is available, but indexing and stop word updating are disabled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9492">
            <summary>
              Looks up a localized string similar to The search catalog failed to start. The search catalog failed to log in to the repository due to an invalid username or password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9493">
            <summary>
              Looks up a localized string similar to The search catalog failed to start. The catalog settings are mis-configured..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9494">
            <summary>
              Looks up a localized string similar to Failed to attach a search catalog. CatalogConfig.xml is missing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9495">
            <summary>
              Looks up a localized string similar to Failed to attach a search catalog. CatalogConfig.xml is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9496">
            <summary>
              Looks up a localized string similar to This field definition cannot be changed because one or more entries exist with values in the version history..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9497">
            <summary>
              Looks up a localized string similar to A duplicated catalog is found in the search engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9498">
            <summary>
              Looks up a localized string similar to Failed to find the full-text search session. The connection to the search engine might have been reset..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9499">
            <summary>
              Looks up a localized string similar to Failed to cutoff the record or the record folder. One or more required records are checked out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9500">
            <summary>
              Looks up a localized string similar to Failed to close the record folder. One or more required records are checked out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9501">
            <summary>
              Looks up a localized string similar to The cutoff triggered by entry link creation failed because the record is checked out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9502">
            <summary>
              Looks up a localized string similar to The cutoff triggered by disposition action failed because the record is checked out..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9503">
            <summary>
              Looks up a localized string similar to Failed to create a new thread to handle the request..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9504">
            <summary>
              Looks up a localized string similar to The number of registered restricted named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9505">
            <summary>
              Looks up a localized string similar to The number of registered restricted repository named users has reached its licensed limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9506">
            <summary>
              Looks up a localized string similar to The specified journal was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9507">
            <summary>
              Looks up a localized string similar to The specified business process was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9508">
            <summary>
              Looks up a localized string similar to The specified business process instance was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9509">
            <summary>
              Looks up a localized string similar to The specified document or document version has signatures that depend on it..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9510">
            <summary>
              Looks up a localized string similar to The operation was canceled by another session..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9511">
            <summary>
              Looks up a localized string similar to The requested field type change would result in data loss..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9512">
            <summary>
              Looks up a localized string similar to Some field values could not be reverted due to incompatibilities with the current field definitions..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9513">
            <summary>
              Looks up a localized string similar to Decrypted data failed to authenticate. Either the key is incorrect or the ciphertext has been altered..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9514">
            <summary>
              Looks up a localized string similar to Volume file filter has been utilized prior to initialization..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9515">
            <summary>
              Looks up a localized string similar to Invalid crypto algorithm has been specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9516">
            <summary>
              Looks up a localized string similar to The search that you have submitted is defined too broadly.  Please refine your search by adding more terms in the search pane and selecting specific values for each of those terms..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9517">
            <summary>
              Looks up a localized string similar to Volume encryption requires Windows Vista/2008 SP1 or higher..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9518">
            <summary>
              Looks up a localized string similar to The number of entry locks for the repository has exceeded the maximum value..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9519">
            <summary>
              Looks up a localized string similar to The requested operation is only supported for indexed template fields. The chosen field is not indexed or not indexable..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9520">
            <summary>
              Looks up a localized string similar to No license has been allocated for this user..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9521">
            <summary>
              Looks up a localized string similar to The license allocated for this user does not allow for the requested session type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9522">
            <summary>
              Looks up a localized string similar to The requested operation could not proceed because the target volume&apos;s configured size limit has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9523">
            <summary>
              Looks up a localized string similar to The repository cannot be mounted at the current time because it is being upgraded. Please wait until the upgrade completes..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9524">
            <summary>
              Looks up a localized string similar to Search catalog .IDX files already exist at the chosen location. Please delete them before creating the catalog, or attach the catalog instead if you want to keep the .IDX files..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9525">
            <summary>
              Looks up a localized string similar to The tenant cannot be deleted because it is not empty. Please remove all assigned named users, repositories, and tenant admins before deleting the tenant..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9526">
            <summary>
              Looks up a localized string similar to The repository cannot be mounted at the current time because it is being mounted or unmounted. Please wait until the current operation completes..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9527">
            <summary>
              Looks up a localized string similar to The result of the operation cannot be retrieved because the operation has not finished..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9528">
            <summary>
              Looks up a localized string similar to Cannot connect to the Laserfiche Directory Server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9529">
            <summary>
              Looks up a localized string similar to Cannot verify the license file. The server will shut down in one hour. Logging in with a Laserfiche Directory Server token will not be allowed. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9530">
            <summary>
              Looks up a localized string similar to Received an invalid or untrusted SAML token. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9531">
            <summary>
              Looks up a localized string similar to Full text searches in the recycle bin are not supported. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9532">
            <summary>
              Looks up a localized string similar to The search type is not supported when searching in the recycle bin. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9533">
            <summary>
              Looks up a localized string similar to The search type is only supported when searching in the recycle bin. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9534">
            <summary>
              Looks up a localized string similar to The SAML token returned by the server is expired or cannot be used at the current time. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9535">
            <summary>
              Looks up a localized string similar to Cannot encrypt an encrypted volume. .
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9536">
            <summary>
              Looks up a localized string similar to LFS received an unrecognized or unexpected error from LFDS..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9900">
            <summary>
              Looks up a localized string similar to [1] entries have field values that do not satisfy the constraint on the field, beginning with &quot;[2]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9901">
            <summary>
              Looks up a localized string similar to The following entry has a field value that that does not satisfy the constraint on the field: &quot;[1]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9903">
            <summary>
              Looks up a localized string similar to Constraint violation on the field &quot;[1]&quot; ([2])..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9904">
            <summary>
              Looks up a localized string similar to &quot;[1]&quot; is not a recognized LFQL table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9905">
            <summary>
              Looks up a localized string similar to &quot;[1]&quot; is not a recognized LFQL column..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9906">
            <summary>
              Looks up a localized string similar to &quot;[1]&quot; is not a recognized LFQL external table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9907">
            <summary>
              Looks up a localized string similar to Insufficient privileges to perform aggregation on the columns &quot;[1]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9908">
            <summary>
              Looks up a localized string similar to Volume &quot;[1]&quot; is read-only..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9909">
            <summary>
              Looks up a localized string similar to Could not send email &quot;[1]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9910">
             <summary>
               Looks up a localized string similar to The certificate used by the mail server is not a trusted certificate.
            
            Subject: [1]
            Issuer: [2]
            Expiration: [3]
            Hash: [4]..
             </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9911">
            <summary>
              Looks up a localized string similar to Dynamic field validation failed on field &quot;[1]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9912">
            <summary>
              Looks up a localized string similar to No column was specified for column &quot;[1]&quot; of &quot;[2]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9913">
            <summary>
              Looks up a localized string similar to Could not connect to email server &quot;[1]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9914">
            <summary>
              Looks up a localized string similar to The name &quot;[1]&quot; needs to be in double quotes because it contains special characters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9915">
            <summary>
              Looks up a localized string similar to The identifier &quot;[1]&quot; is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9916">
            <summary>
              Looks up a localized string similar to The width of dynamic field &quot;[1]&quot; needs to be &quot;[2]&quot; to be assigned the specified column..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9917">
            <summary>
              Looks up a localized string similar to &quot;[1]&quot; is an invalid stop word..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9918">
            <summary>
              Looks up a localized string similar to Cutoff operation aborted. Error encountered at &quot;[1]&quot;. Error: &quot;[2]&quot;..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.ERR9919">
            <summary>
              Looks up a localized string similar to IDX files for the search catalog &quot;[1]&quot; are in use by another application. Stop that application before altering this search catalog..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ARRAY">
            <summary>
              Looks up a localized string similar to &lt;Array&gt;.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_CONTEXT_HIT_EDOC">
            <summary>
              Looks up a localized string similar to %1 hit(s) in the electronic document. Hits not shown..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_CONTEXT_HIT_PROP">
            <summary>
              Looks up a localized string similar to %1 hit(s) in the field [%2]. Hits not shown..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_ACTION_ACCESSION">
            <summary>
              Looks up a localized string similar to Accession.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_ACTION_DESTROY">
            <summary>
              Looks up a localized string similar to Destroy.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_ACTION_HOLD">
            <summary>
              Looks up a localized string similar to Hold.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_ACTION_NONE">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_ACTION_TRANSFER">
            <summary>
              Looks up a localized string similar to Transfer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_EVENT">
            <summary>
              Looks up a localized string similar to Event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_INTERVAL">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_INTERVAL_EVENT">
            <summary>
              Looks up a localized string similar to Interval/Event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_LINKED_DISPOSITION">
            <summary>
              Looks up a localized string similar to Disposition Action.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_SUPERSEDED">
            <summary>
              Looks up a localized string similar to Superseded.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_TIME">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_DISPOSITION_TYPE_TIME_EVENT">
            <summary>
              Looks up a localized string similar to Time/Event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_DOCUMENT">
            <summary>
              Looks up a localized string similar to Document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_ELECT_DOCUMENT">
            <summary>
              Looks up a localized string similar to Electronic Document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_FOLDER">
            <summary>
              Looks up a localized string similar to Folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_RECFOLDER">
            <summary>
              Looks up a localized string similar to Record Folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_RECSERIES">
            <summary>
              Looks up a localized string similar to Record Series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ENTRY_TYPE_UNKNOWN">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_ERROR_FORMAT">
            <summary>
              Looks up a localized string similar to %1: %2.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_NA">
            <summary>
              Looks up a localized string similar to N/A.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_NO">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_OCR_STATE_ALL">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_OCR_STATE_NONE">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_OCR_STATE_NOPAGES">
            <summary>
              Looks up a localized string similar to No pages.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_OCR_STATE_SOME">
            <summary>
              Looks up a localized string similar to Some.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_VERSION_IS_LATEST">
            <summary>
              Looks up a localized string similar to (Latest) %1.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.IDS_YES">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5100">
            <summary>
              Looks up a localized string similar to The file chosen for export already exists, and the user does not wish to overwrite it..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5700">
            <summary>
              Looks up a localized string similar to A problem occurred while accessing Laserfiche. %s The error code is %u..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5800">
            <summary>
              Looks up a localized string similar to Unknown parameterized error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5801">
            <summary>
              Looks up a localized string similar to Can not orient images in folder %s..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5802">
            <summary>
              Looks up a localized string similar to Please mount volume %s..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5850">
            <summary>
              Looks up a localized string similar to Orient images failed, %s page %d..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5851">
            <summary>
              Looks up a localized string similar to Internal security error #%d.  Call Tech Support..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG5852">
            <summary>
              Looks up a localized string similar to One or more errors occurred during migration..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6000">
            <summary>
              Looks up a localized string similar to Unknown error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6001">
            <summary>
              Looks up a localized string similar to No documents found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6002">
            <summary>
              Looks up a localized string similar to API user slot index is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6003">
            <summary>
              Looks up a localized string similar to Invalid parameter passed to API..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6004">
            <summary>
              Looks up a localized string similar to An connection slot could not be found or created..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6010">
            <summary>
              Looks up a localized string similar to Operation cancelled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6020">
            <summary>
              Looks up a localized string similar to Volume not mounted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6310">
            <summary>
              Looks up a localized string similar to Engine Error #8310--import image failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6313">
            <summary>
              Looks up a localized string similar to Error reading directory--TOC failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6315">
            <summary>
              Looks up a localized string similar to Repository is empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6316">
            <summary>
              Looks up a localized string similar to You must specify the full path to an existing directory when you specify a volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6317">
            <summary>
              Looks up a localized string similar to The specified path does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6319">
            <summary>
              Looks up a localized string similar to Directory names cannot contain any spaces..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6320">
            <summary>
              Looks up a localized string similar to No templates exist. The system cannot create documents without a template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6321">
            <summary>
              Looks up a localized string similar to You are not allowed to delete the root folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6322">
            <summary>
              Looks up a localized string similar to You are not allowed to rename the root folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6323">
            <summary>
              Looks up a localized string similar to Operation failed. Name is not valid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6324">
            <summary>
              Looks up a localized string similar to More than one file has been selected. This operation only works on a single file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6325">
            <summary>
              Looks up a localized string similar to There must be a file selected for this operation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6326">
            <summary>
              Looks up a localized string similar to Only documents have templates..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6327">
            <summary>
              Looks up a localized string similar to Only image documents can be processed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6328">
            <summary>
              Looks up a localized string similar to Folders cannot be printed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6329">
            <summary>
              Looks up a localized string similar to The document does not have a template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6331">
            <summary>
              Looks up a localized string similar to Both documents must be on the same text and image volumes..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6332">
            <summary>
              Looks up a localized string similar to A document cannot be created without pages..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6333">
            <summary>
              Looks up a localized string similar to Cannot request batch page..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6334">
            <summary>
              Looks up a localized string similar to You cannot move a page to an electronic document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6335">
            <summary>
              Looks up a localized string similar to Invalid page range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6336">
            <summary>
              Looks up a localized string similar to Unable to compress thumbnail data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6337">
            <summary>
              Looks up a localized string similar to Error decompressing thumbnail data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6338">
            <summary>
              Looks up a localized string similar to Only image documents can be processed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6339">
            <summary>
              Looks up a localized string similar to Attempted to perform a folder operation on a document/batch..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6340">
            <summary>
              Looks up a localized string similar to This Document contains no pages..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6341">
            <summary>
              Looks up a localized string similar to Printing the Electronic Document pages failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6342">
            <summary>
              Looks up a localized string similar to Backslashes (&apos;\&apos;) are not permitted in folder or document names..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6350">
            <summary>
              Looks up a localized string similar to Print job aborted: The image could not be loaded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6360">
            <summary>
              Looks up a localized string similar to The template must have a name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6361">
            <summary>
              Looks up a localized string similar to The template name is already in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6362">
            <summary>
              Looks up a localized string similar to A template cannot be created without fields..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6363">
            <summary>
              Looks up a localized string similar to Template field names must be unique..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6364">
            <summary>
              Looks up a localized string similar to String fields must be between 1 and 4000 characters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6365">
            <summary>
              Looks up a localized string similar to The template could not be deleted. There are documents still attached to it..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6366">
            <summary>
              Looks up a localized string similar to Template names and field names must contain only letters, numbers, and spaces..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6367">
            <summary>
              Looks up a localized string similar to Changing the template field TYPE or WIDTH (to a smaller size) can cause irreparable data loss..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6368">
            <summary>
              Looks up a localized string similar to The maximum template fields has been reached..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6380">
            <summary>
              Looks up a localized string similar to The document contains a missing image..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6381">
            <summary>
              Looks up a localized string similar to The image orientation could not be retrieved..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6382">
            <summary>
              Looks up a localized string similar to A temporary image file could not be stored..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6384">
            <summary>
              Looks up a localized string similar to The image could not be converted to TIFF format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6385">
            <summary>
              Looks up a localized string similar to The path must be presented in the following format: SERVER\VOL:\PATH..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6386">
            <summary>
              Looks up a localized string similar to The OCR engine was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6387">
            <summary>
              Looks up a localized string similar to The language selected is not supported for OCR..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6388">
            <summary>
              Looks up a localized string similar to Can&apos;t delete user (from DeleteGroup in LFAPICom)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6389">
            <summary>
              Looks up a localized string similar to Can&apos;t delete group (from DeleteUser in LFAPICom)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6395">
            <summary>
              Looks up a localized string similar to Unable to read this version of briefcase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6396">
            <summary>
              Looks up a localized string similar to Invalid briefcase file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6397">
            <summary>
              Looks up a localized string similar to Unexpected end of file in briefcase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6398">
            <summary>
              Looks up a localized string similar to The tokens in the document name are not valid. The tokens have not been replaced..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6399">
            <summary>
              Looks up a localized string similar to This account does not have rights to folders..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6400">
            <summary>
              Looks up a localized string similar to Importing not completed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6401">
            <summary>
              Looks up a localized string similar to Invalid Date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6402">
            <summary>
              Looks up a localized string similar to Invalid Number..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6403">
            <summary>
              Looks up a localized string similar to Password entered is not correct..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6404">
            <summary>
              Looks up a localized string similar to There is not enough memory, please select fewer items..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6405">
            <summary>
              Looks up a localized string similar to This name already exists; select a different one..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6406">
            <summary>
              Looks up a localized string similar to Source images have not been deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6407">
            <summary>
              Looks up a localized string similar to You can not remove supervisor privileges from your own account..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6408">
            <summary>
              Looks up a localized string similar to Error reading file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6409">
            <summary>
              Looks up a localized string similar to Error writing file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6410">
            <summary>
              Looks up a localized string similar to Error opening file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6411">
            <summary>
              Looks up a localized string similar to Error creating file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6412">
            <summary>
              Looks up a localized string similar to Error deleting file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6413">
            <summary>
              Looks up a localized string similar to Error seeking in file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6414">
            <summary>
              Looks up a localized string similar to Access denied to file or path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6415">
            <summary>
              Looks up a localized string similar to A thumbnail could not be generated from an image..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6416">
            <summary>
              Looks up a localized string similar to Cannot add to folder list selection (no memory?)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6417">
            <summary>
              Looks up a localized string similar to This should *never* happen -- out of memory?.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6418">
            <summary>
              Looks up a localized string similar to This should *never* happen -- bad DLLs?.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6419">
            <summary>
              Looks up a localized string similar to The volume has not been bundled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6430">
            <summary>
              Looks up a localized string similar to A folder in the list import file could not be found or created..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6431">
            <summary>
              Looks up a localized string similar to The name provided with the RENAME directive is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6432">
            <summary>
              Looks up a localized string similar to A document&apos;s pages could not be imported..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6433">
            <summary>
              Looks up a localized string similar to The name provided with a document was absent..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6434">
            <summary>
              Looks up a localized string similar to The syntax of the list import file was incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6436">
            <summary>
              Looks up a localized string similar to The end of the file was reached before the ENDFIELDS directive was found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6439">
            <summary>
              Looks up a localized string similar to The option for indexing is invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6500">
            <summary>
              Looks up a localized string similar to bad serial number..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6501">
            <summary>
              Looks up a localized string similar to bad registration..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6502">
            <summary>
              Looks up a localized string similar to Cannot read repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6503">
            <summary>
              Looks up a localized string similar to Laserfiche has detected an earlier fatal exit.  Please restart Windows before reloading Laserfiche..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6505">
            <summary>
              Looks up a localized string similar to Server not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6506">
            <summary>
              Looks up a localized string similar to Laserfiche couldn&apos;t update your old repository.  There is an error in the repository files..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6507">
            <summary>
              Looks up a localized string similar to Maximum users exceeded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6508">
            <summary>
              Looks up a localized string similar to The username or password is incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6509">
            <summary>
              Looks up a localized string similar to Evaluation copy has expired..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6510">
            <summary>
              Looks up a localized string similar to DLL Corrupt..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6511">
            <summary>
              Looks up a localized string similar to Disk Full..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6512">
            <summary>
              Looks up a localized string similar to Error opening repository; Check log file for more information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6513">
            <summary>
              Looks up a localized string similar to Laserfiche requires version 5.10 or higher of WBTRCALLS.DLL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6515">
            <summary>
              Looks up a localized string similar to Error locating library..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6516">
            <summary>
              Looks up a localized string similar to Error loading library..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6517">
            <summary>
              Looks up a localized string similar to Invalid server version..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6518">
            <summary>
              Looks up a localized string similar to Write failed. Disk space may be running low..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6519">
            <summary>
              Looks up a localized string similar to Not enough memory to complete operation.  Please close windows and try again..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6520">
            <summary>
              Looks up a localized string similar to Timeout for operation call..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6521">
            <summary>
              Looks up a localized string similar to display engine not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6522">
            <summary>
              Looks up a localized string similar to The server did not respond correctly to the last function..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6523">
            <summary>
              Looks up a localized string similar to Laserfiche requires version 1.1 or higher for WINSOCK.DLL..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6524">
            <summary>
              Looks up a localized string similar to Invalid IP address..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6525">
            <summary>
              Looks up a localized string similar to IP connection failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6526">
            <summary>
              Looks up a localized string similar to This client is a viewer for a specific repository and will not work with other repositories..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6527">
            <summary>
              Looks up a localized string similar to Maximum connections exceeded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6528">
            <summary>
              Looks up a localized string similar to Invalid connection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6529">
            <summary>
              Looks up a localized string similar to Please run this version of Laserfiche from the Laserfiche Loader (LFVIEW.EXE)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6530">
            <summary>
              Looks up a localized string similar to This copy of Laserfiche is unlicensed, so it will run as Laserfiche Viewer. For information on full-featured versions of Laserfiche, please contact the nearest Laserfiche dealer..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6531">
            <summary>
              Looks up a localized string similar to The license file for this copy of Laserfiche has been corrupted! Please contact the nearest Laserfiche dealer for assistance. This copy will now run as Laserfiche Viewer to allow you to view your images..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6532">
            <summary>
              Looks up a localized string similar to Your connection has been terminated..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6533">
            <summary>
              Looks up a localized string similar to Engine is processing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6534">
            <summary>
              Looks up a localized string similar to unable to store a temporary copy..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6535">
            <summary>
              Looks up a localized string similar to The MAPI Subsystem (mapi32.dll) could not be loaded. Make sure your email client is properly installed and configured to work with MAPI..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6536">
            <summary>
              Looks up a localized string similar to Error initializing performance monitoring..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6537">
            <summary>
              Looks up a localized string similar to Failed to initialize MAPI: If you are not using Outlook XP or later, your email client may not be supported..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6550">
            <summary>
              Looks up a localized string similar to Search Error: Failed to initialize search..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6551">
            <summary>
              Looks up a localized string similar to Could not allocate timer..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6552">
            <summary>
              Looks up a localized string similar to Search stat error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6553">
            <summary>
              Looks up a localized string similar to Cannot find search on server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6554">
            <summary>
              Looks up a localized string similar to Get Highlight failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6561">
            <summary>
              Looks up a localized string similar to Error creating volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6562">
            <summary>
              Looks up a localized string similar to Error creating directory..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6563">
            <summary>
              Looks up a localized string similar to Engine Error #8663--Volume must have a name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6564">
            <summary>
              Looks up a localized string similar to Volume label not created..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6565">
            <summary>
              Looks up a localized string similar to Volume name not unique..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6566">
            <summary>
              Looks up a localized string similar to Invalid volume path..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6580">
            <summary>
              Looks up a localized string similar to The BMP file cannot be made into a stamp..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6581">
            <summary>
              Looks up a localized string similar to The Hardlock is not connected.  The application will now close..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6582">
            <summary>
              Looks up a localized string similar to The Hardlock is connected but not programmed.  The application will now close..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6583">
            <summary>
              Looks up a localized string similar to The Hardlock is not compatible with this product.  The application will now close..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6590">
            <summary>
              Looks up a localized string similar to You&apos;ve reached the maximum number of user names that can be created.  You will need to delete one to add another..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6601">
            <summary>
              Looks up a localized string similar to Problem with display engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6602">
            <summary>
              Looks up a localized string similar to Display engine out of memory..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6603">
            <summary>
              Looks up a localized string similar to I/O error in display engine..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6604">
            <summary>
              Looks up a localized string similar to Unknown image format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6605">
            <summary>
              Looks up a localized string similar to Operation cancelled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6606">
            <summary>
              Looks up a localized string similar to Engine Error #9506--Bad display destination..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6607">
            <summary>
              Looks up a localized string similar to Engine Error #9507--Bad image handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6608">
            <summary>
              Looks up a localized string similar to Engine Error #9510--Unknown display engine error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6611">
            <summary>
              Looks up a localized string similar to Illegal Source Format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6612">
            <summary>
              Looks up a localized string similar to Illegal Target Format..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6613">
            <summary>
              Looks up a localized string similar to Source File Not Found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6614">
            <summary>
              Looks up a localized string similar to Invalid parameter..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6701">
            <summary>
              Looks up a localized string similar to General scanning failure. The scanner may not be installed properly..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6702">
            <summary>
              Looks up a localized string similar to Scanner engine failure..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6703">
            <summary>
              Looks up a localized string similar to Bad parameter specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6704">
            <summary>
              Looks up a localized string similar to Bad parameter value specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6705">
            <summary>
              Looks up a localized string similar to No paper was found in the feeder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6706">
            <summary>
              Looks up a localized string similar to Remove paper from the feeder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6707">
            <summary>
              Looks up a localized string similar to Scanner not ready. Try again..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6708">
            <summary>
              Looks up a localized string similar to Scanner timeout..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6709">
            <summary>
              Looks up a localized string similar to Scanner is busy, operation cannot be completed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6710">
            <summary>
              Looks up a localized string similar to Scanner paper jam..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6711">
            <summary>
              Looks up a localized string similar to Scanner is not responding; check cable and power..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6712">
            <summary>
              Looks up a localized string similar to Can&apos;t locate SCSI device; check cable and power..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6713">
            <summary>
              Looks up a localized string similar to Can&apos;t talk to scanner; check cable and power..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6714">
            <summary>
              Looks up a localized string similar to No scanner driver selected..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6715">
            <summary>
              Looks up a localized string similar to User cancel detected..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6716">
            <summary>
              Looks up a localized string similar to Scanner driver cannot get enough memory to load..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG6717">
            <summary>
              Looks up a localized string similar to Scanner hardware problem; check scanner and paper feeder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7000">
            <summary>
              Looks up a localized string similar to Not enough storage is available to complete this operation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7001">
            <summary>
              Looks up a localized string similar to The data area passed to a system call is too small..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7002">
            <summary>
              Looks up a localized string similar to The requested operation is not supported by this version of the server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7003">
            <summary>
              Looks up a localized string similar to The parameter is incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7004">
            <summary>
              Looks up a localized string similar to The system cannot find the path specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7005">
            <summary>
              Looks up a localized string similar to Creation of a worker thread failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7006">
            <summary>
              Looks up a localized string similar to The semaphore timeout period has expired..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7007">
            <summary>
              Looks up a localized string similar to Internal error where a semaphore was not initialized before it was needed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7008">
            <summary>
              Looks up a localized string similar to Unable to create semaphore..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7009">
            <summary>
              Looks up a localized string similar to Error getting fiscal year end..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7010">
            <summary>
              Looks up a localized string similar to The cursor is uninitialized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7011">
            <summary>
              Looks up a localized string similar to Double initialization of connection not allowed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7012">
            <summary>
              Looks up a localized string similar to Cannot log in; already logged in..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7013">
            <summary>
              Looks up a localized string similar to Connection is uninitialized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7014">
            <summary>
              Looks up a localized string similar to Connection is logged in; cannot uninitialize..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7015">
            <summary>
              Looks up a localized string similar to The system cannot find the file specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7016">
            <summary>
              Looks up a localized string similar to The directory is not empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7017">
            <summary>
              Looks up a localized string similar to Only folders are allowed to be created directly in a record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7018">
            <summary>
              Looks up a localized string similar to Cannot uncutoff this record folder: one or more restrictions prevent uncutoff..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7019">
            <summary>
              Looks up a localized string similar to This operation is not allowed for entries that are not under record management..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7020">
            <summary>
              Looks up a localized string similar to This version of the server is incompatible with the specified repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7021">
            <summary>
              Looks up a localized string similar to The operation cannot be performed with this DBMS..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7023">
            <summary>
              Looks up a localized string similar to The repository was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7024">
            <summary>
              Looks up a localized string similar to The system has reached its licensed repository limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7025">
            <summary>
              Looks up a localized string similar to Cannot read information needed to load the repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7026">
            <summary>
              Looks up a localized string similar to Cannot write information needed to add the repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7027">
            <summary>
              Looks up a localized string similar to A repository with the same name already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7028">
            <summary>
              Looks up a localized string similar to Could not acquire SSPI credentials..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7029">
            <summary>
              Looks up a localized string similar to Could not acquire cryptographic context..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7030">
            <summary>
              Looks up a localized string similar to The SQL Database Engine (BTRIEVE) has encountered a unexpected error and is unable to continue. Check error log for more information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7031">
            <summary>
              Looks up a localized string similar to Cannot execute database creation script..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7032">
            <summary>
              Looks up a localized string similar to Could not open Btrieve table. (check error log for more information)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7033">
            <summary>
              Looks up a localized string similar to Could not close Btrieve table..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7034">
            <summary>
              Looks up a localized string similar to Unable to close transaction; changes not saved. (check error log for more information)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7036">
            <summary>
              Looks up a localized string similar to Cannot obtain permission to access database..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7038">
            <summary>
              Looks up a localized string similar to Could not delete Btrieve table. (check error log for more information)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7039">
            <summary>
              Looks up a localized string similar to The Pervasive.SQL engine cannot be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7040">
            <summary>
              Looks up a localized string similar to Repository directories must be on local drives..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7050">
            <summary>
              Looks up a localized string similar to Error executing SQL command..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7051">
            <summary>
              Looks up a localized string similar to COM engine error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7052">
            <summary>
              Looks up a localized string similar to Unhandled Exception..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7053">
            <summary>
              Looks up a localized string similar to Multiple matching repositories found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7100">
            <summary>
              Looks up a localized string similar to Could not find document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7101">
            <summary>
              Looks up a localized string similar to An object with the same name already exists in the folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7102">
            <summary>
              Looks up a localized string similar to An object with the same sort position already exists in the folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7103">
            <summary>
              Looks up a localized string similar to Could not create object (duplicate exists)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7104">
            <summary>
              Looks up a localized string similar to Could not create object (other than duplicate)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7105">
            <summary>
              Looks up a localized string similar to Could not delete object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7106">
            <summary>
              Looks up a localized string similar to Could not update object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7107">
            <summary>
              Looks up a localized string similar to Could not read object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7108">
            <summary>
              Looks up a localized string similar to Object folder lineage is orphaned/broken ..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7110">
            <summary>
              Looks up a localized string similar to Could not find volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7111">
            <summary>
              Looks up a localized string similar to A volume with that name already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7112">
            <summary>
              Looks up a localized string similar to Could not create volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7113">
            <summary>
              Looks up a localized string similar to Deleting volume failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7114">
            <summary>
              Looks up a localized string similar to Could not update volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7115">
            <summary>
              Looks up a localized string similar to Deleting a linked physical volume failed during logical volume deletion..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7120">
            <summary>
              Looks up a localized string similar to Could not find the template schema specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7121">
            <summary>
              Looks up a localized string similar to The template name is not unique and cannot be created..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7122">
            <summary>
              Looks up a localized string similar to Could not create template schema..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7123">
            <summary>
              Looks up a localized string similar to Could not delete template definition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7124">
            <summary>
              Looks up a localized string similar to Could not modify template schema..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7130">
            <summary>
              Looks up a localized string similar to Could not find template definition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7131">
            <summary>
              Looks up a localized string similar to Could not create template definition (duplicate exists)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7132">
            <summary>
              Looks up a localized string similar to Could not create template link..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7133">
            <summary>
              Looks up a localized string similar to Could not delete template link..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7134">
            <summary>
              Looks up a localized string similar to Could not update template link..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7135">
            <summary>
              Looks up a localized string similar to Could not read link..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7140">
            <summary>
              Looks up a localized string similar to The trustee could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7141">
            <summary>
              Looks up a localized string similar to A trustee with the specified name already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7142">
            <summary>
              Looks up a localized string similar to Could not create trustee..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7143">
            <summary>
              Looks up a localized string similar to Could not delete trustee..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7144">
            <summary>
              Looks up a localized string similar to Could not update trustee..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7146">
            <summary>
              Looks up a localized string similar to The password is expired..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7150">
            <summary>
              Looks up a localized string similar to Could not find group entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7151">
            <summary>
              Looks up a localized string similar to The user is already a memeber of the group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7152">
            <summary>
              Looks up a localized string similar to Failed to add the user as a member of the group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7153">
            <summary>
              Looks up a localized string similar to Could not update group entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7154">
            <summary>
              Looks up a localized string similar to Could not update group entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7170">
            <summary>
              Looks up a localized string similar to Could not find specified page..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7174">
            <summary>
              Looks up a localized string similar to Could not update page meta-data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7175">
            <summary>
              Looks up a localized string similar to Failed to move page..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7180">
            <summary>
              Looks up a localized string similar to Could not find template data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7181">
            <summary>
              Looks up a localized string similar to Could not create template data (duplicate exists)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7182">
            <summary>
              Looks up a localized string similar to Could not create template data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7183">
            <summary>
              Looks up a localized string similar to Could not delete WOF entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7184">
            <summary>
              Looks up a localized string similar to Could not update template data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7185">
            <summary>
              Looks up a localized string similar to Could not get template data stat..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7186">
            <summary>
              Looks up a localized string similar to Could not read template data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7190">
            <summary>
              Looks up a localized string similar to Could not find WOF data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7191">
            <summary>
              Looks up a localized string similar to Could not create WOF entry (duplicate exists)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7192">
            <summary>
              Looks up a localized string similar to Could not create WOF entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7193">
            <summary>
              Looks up a localized string similar to Could not delete WOF entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7194">
            <summary>
              Looks up a localized string similar to Could not update WOF entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7205">
            <summary>
              Looks up a localized string similar to Failed to insert document into indexing queue..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7230">
            <summary>
              Looks up a localized string similar to The specified watermark group does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7270">
            <summary>
              Looks up a localized string similar to The user does not have any rights to this field..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7272">
            <summary>
              Looks up a localized string similar to The specified field cannot be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7273">
            <summary>
              Looks up a localized string similar to Failed to retrieve template field properties..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7274">
            <summary>
              Looks up a localized string similar to Unrecognized or unsupported field data type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7275">
            <summary>
              Looks up a localized string similar to Cannot read the field ACL information..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7280">
            <summary>
              Looks up a localized string similar to Cannot find record versions..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7300">
            <summary>
              Looks up a localized string similar to Move/copy would result in cyclic folder structure..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7301">
            <summary>
              Looks up a localized string similar to Cannot remove real object..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7302">
            <summary>
              Looks up a localized string similar to Folder structure too deep to delete..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7303">
            <summary>
              Looks up a localized string similar to Parent of copied object must be a folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7304">
            <summary>
              Looks up a localized string similar to Timed out while creating an object; the repository is busy. Try again later..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7305">
            <summary>
              Looks up a localized string similar to Display limit exceeded. Please close some folders or change to a smaller font size..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7306">
            <summary>
              Looks up a localized string similar to Folder deletion incomplete.  Some contents could not be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7307">
            <summary>
              Looks up a localized string similar to Could not find a suitable folder for the document.  Would you like to use the root folder?.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7308">
            <summary>
              Looks up a localized string similar to Can&apos;t copy a folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7310">
            <summary>
              Looks up a localized string similar to The volume is marked read-only..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7311">
            <summary>
              Looks up a localized string similar to Cannot migrate to converted volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7312">
            <summary>
              Looks up a localized string similar to Volumes cannot be deleted unless they are empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7313">
            <summary>
              Looks up a localized string similar to A volume already exists at the specified location..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7314">
            <summary>
              Looks up a localized string similar to Volume path updated.  Please move all corresponding files to new location..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7315">
            <summary>
              Looks up a localized string similar to Unable to access remote file server.  Please check network connection..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7316">
            <summary>
              Looks up a localized string similar to Volume has not been exported..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7317">
            <summary>
              Looks up a localized string similar to Volume is not mounted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7318">
            <summary>
              Looks up a localized string similar to Volume is full (no more documents may be created)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7319">
            <summary>
              Looks up a localized string similar to Volume is at the size warning limit..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7320">
            <summary>
              Looks up a localized string similar to Object already has template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7321">
            <summary>
              Looks up a localized string similar to Object does not have a template..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7322">
            <summary>
              Looks up a localized string similar to Maximum templates on volume exceeded..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7323">
            <summary>
              Looks up a localized string similar to Template could not be modified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7324">
            <summary>
              Looks up a localized string similar to One or more template field values supplied are invalid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7325">
            <summary>
              Looks up a localized string similar to A required field cannot be empty..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7327">
            <summary>
              Looks up a localized string similar to Failed to add values to the drop list..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7328">
            <summary>
              Looks up a localized string similar to Template field has an invalid regular expression constraint..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7330">
            <summary>
              Looks up a localized string similar to Security not enabled on repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7331">
            <summary>
              Looks up a localized string similar to The user login or password is incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7332">
            <summary>
              Looks up a localized string similar to Permission denied..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7333">
            <summary>
              Looks up a localized string similar to A user cannot be deleted when logged in to the repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7334">
            <summary>
              Looks up a localized string similar to Cannot list users connected to a read-only repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7335">
            <summary>
              Looks up a localized string similar to Object not found in rights cache..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7336">
            <summary>
              Looks up a localized string similar to Cannot disconnect self from repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7337">
            <summary>
              Looks up a localized string similar to An engine function was called with an invalid user id..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7338">
            <summary>
              Looks up a localized string similar to Repository maintenance action performed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7339">
            <summary>
              Looks up a localized string similar to The user account has been disabled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7340">
            <summary>
              Looks up a localized string similar to The maximum licensed page number has been reached for this repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7341">
            <summary>
              Looks up a localized string similar to Domain authentication is unavailable..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7342">
            <summary>
              Looks up a localized string similar to The maximum length of a password is 31 characters..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7343">
            <summary>
              Looks up a localized string similar to Cannot disable one&apos;s own user account..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7344">
            <summary>
              Looks up a localized string similar to The password does not meet the minimum length requirement..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7345">
            <summary>
              Looks up a localized string similar to The password does not meet the complexity requirement..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7346">
            <summary>
              Looks up a localized string similar to This password is invalid because it has been used before..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7347">
            <summary>
              Looks up a localized string similar to You do not have sufficient permissions to change your password. Please contact your Laserfiche administrator for assistance..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7348">
            <summary>
              Looks up a localized string similar to Passwords cannot contain the user&apos;s name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7349">
            <summary>
              Looks up a localized string similar to This password has expired and must be changed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7350">
            <summary>
              Looks up a localized string similar to Invalid document handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7351">
            <summary>
              Looks up a localized string similar to No more document handles available..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7352">
            <summary>
              Looks up a localized string similar to User has no locked objects..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7353">
            <summary>
              Looks up a localized string similar to Invalid image file handle passed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7360">
            <summary>
              Looks up a localized string similar to Cannot find file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7361">
            <summary>
              Looks up a localized string similar to Cannot open file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7362">
            <summary>
              Looks up a localized string similar to Cannot open file (access problems, e.g. write mode on read-only medium)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7363">
            <summary>
              Looks up a localized string similar to Invalid file handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7364">
            <summary>
              Looks up a localized string similar to Cannot read from file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7365">
            <summary>
              Looks up a localized string similar to Cannot write to file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7366">
            <summary>
              Looks up a localized string similar to Cannot create file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7367">
            <summary>
              Looks up a localized string similar to Cannot delete file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7368">
            <summary>
              Looks up a localized string similar to Cannot seek to position..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7369">
            <summary>
              Looks up a localized string similar to Cannot copy file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7370">
            <summary>
              Looks up a localized string similar to Failed to read/parse annotation datafile..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7371">
            <summary>
              Looks up a localized string similar to Cannot open data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7372">
            <summary>
              Looks up a localized string similar to Cannot open file: access denied..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7373">
            <summary>
              Looks up a localized string similar to Cannot read file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7374">
            <summary>
              Looks up a localized string similar to Cannot write file. Is the disk full?.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7375">
            <summary>
              Looks up a localized string similar to Cannot create data file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7376">
            <summary>
              Looks up a localized string similar to Cannot delete data file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7377">
            <summary>
              Looks up a localized string similar to Bad data version..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7378">
            <summary>
              Looks up a localized string similar to Bad continuation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7379">
            <summary>
              Looks up a localized string similar to The size of the buffer is too small..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7380">
            <summary>
              Looks up a localized string similar to Cannot find exclusion data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7390">
            <summary>
              Looks up a localized string similar to Object locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7391">
            <summary>
              Looks up a localized string similar to Object modified; cannot change lock mode..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7392">
            <summary>
              Looks up a localized string similar to Document locked with a persistent lock..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7393">
            <summary>
              Looks up a localized string similar to Only documents and batches can be locked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7394">
            <summary>
              Looks up a localized string similar to No lock found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7395">
            <summary>
              Looks up a localized string similar to Comment too long..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7400">
            <summary>
              Looks up a localized string similar to Cannot find locations file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7401">
            <summary>
              Looks up a localized string similar to Locations file does not contain locations for all words..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7402">
            <summary>
              Looks up a localized string similar to Cannot delete locations file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7403">
            <summary>
              Looks up a localized string similar to Locations data corrupted: premature end of locations data..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7410">
            <summary>
              Looks up a localized string similar to A request was made for a character past the last character of the page..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7411">
            <summary>
              Looks up a localized string similar to Page requested had no info..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7412">
            <summary>
              Looks up a localized string similar to Page stat is corrupted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7420">
            <summary>
              Looks up a localized string similar to WOF index incorrect..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7430">
            <summary>
              Looks up a localized string similar to Invalid volume grab handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7431">
            <summary>
              Looks up a localized string similar to Volume grab handle table full..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7432">
            <summary>
              Looks up a localized string similar to The directory being grabbed has a sub-directory structure that is too deep..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7433">
            <summary>
              Looks up a localized string similar to There are not more files in the directory..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7434">
            <summary>
              Looks up a localized string similar to Decompression of briefcase failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7440">
            <summary>
              Looks up a localized string similar to Couldn&apos;t initialize a new audit trail file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7441">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find or read the compression dictionary..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7442">
            <summary>
              Looks up a localized string similar to The compression of audit event data failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7443">
            <summary>
              Looks up a localized string similar to error writing to audit xml file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7444">
            <summary>
              Looks up a localized string similar to An audit reason was not specified, or an invalid reason was specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7445">
            <summary>
              Looks up a localized string similar to An archiving request cannot be completed because another is running..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7446">
            <summary>
              Looks up a localized string similar to Periodic archiving timer error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7453">
            <summary>
              Looks up a localized string similar to Couldn&apos;t create field synch tables and stored procs when asked..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7460">
            <summary>
              Looks up a localized string similar to The allocation of an ODBC handle failed, possibly due to a low memory condition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7461">
            <summary>
              Looks up a localized string similar to A connection to a data source could not be made..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7462">
            <summary>
              Looks up a localized string similar to The ODBC driver manager did not respond as expected..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7463">
            <summary>
              Looks up a localized string similar to A DSN with the same name already exists for this database..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7470">
            <summary>
              Looks up a localized string similar to MDF path provided is not present..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7471">
            <summary>
              Looks up a localized string similar to Repository path provided is not valid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7472">
            <summary>
              Looks up a localized string similar to Failed to remove supplementary databases..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7473">
            <summary>
              Looks up a localized string similar to Cannot delete or detach repository ..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7480">
            <summary>
              Looks up a localized string similar to Volume has unrecognized XML attribute tag..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7490">
            <summary>
              Looks up a localized string similar to This record series has folders and/or documents associated with it and can&apos;t be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7491">
            <summary>
              Looks up a localized string similar to The specified object is not a recordfolder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7492">
            <summary>
              Looks up a localized string similar to Records marked as permanent cannot be destroyed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7493">
            <summary>
              Looks up a localized string similar to A record series with the code you specified already exists.  Specify a different code..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7494">
            <summary>
              Looks up a localized string similar to The record already has been cut off..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7495">
            <summary>
              Looks up a localized string similar to The record is not eligible for disposition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7496">
            <summary>
              Looks up a localized string similar to Only record folders and series are allowed directly under record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7497">
            <summary>
              Looks up a localized string similar to Cannot reverse the cutoff designation of record transfered away from the Current File Area..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7498">
            <summary>
              Looks up a localized string similar to The specified transfer sequence number does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7499">
            <summary>
              Looks up a localized string similar to The specified location already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7500">
            <summary>
              Looks up a localized string similar to Version group does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7501">
            <summary>
              Looks up a localized string similar to Duplicate version numbers in a group are not allowed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7502">
            <summary>
              Looks up a localized string similar to No such version in the version group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7503">
            <summary>
              Looks up a localized string similar to No such document in the version group..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7504">
            <summary>
              Looks up a localized string similar to The version number is out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7510">
            <summary>
              Looks up a localized string similar to Invalid compartment..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7511">
            <summary>
              Looks up a localized string similar to Invalid classification..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7512">
            <summary>
              Looks up a localized string similar to Classification out of bounds..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7513">
            <summary>
              Looks up a localized string similar to The object&apos;s new label is not compatible with the label(s) of its contained object(s)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7514">
            <summary>
              Looks up a localized string similar to The classifications are out of order for a subject or multi-level label..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7515">
            <summary>
              Looks up a localized string similar to The compartment has a duplicate name or abbreviation..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7516">
            <summary>
              Looks up a localized string similar to The classification has a duplicate numeric form, name or classification..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7520">
            <summary>
              Looks up a localized string similar to Could not set readonly attribute on file when making volume read-only..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7521">
            <summary>
              Looks up a localized string similar to Could not modify volume properties: volume is in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7522">
            <summary>
              Looks up a localized string similar to Attaching volume failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7523">
            <summary>
              Looks up a localized string similar to Exporting volume failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7524">
            <summary>
              Looks up a localized string similar to Invalid characters used in the volume name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7525">
            <summary>
              Looks up a localized string similar to Failed to set event date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7526">
            <summary>
              Looks up a localized string similar to Series description or code is too long..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7527">
            <summary>
              Looks up a localized string similar to Record series must be under the root or other record series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7528">
            <summary>
              Looks up a localized string similar to Cannot move a record folder outside of a series..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7529">
            <summary>
              Looks up a localized string similar to Cannot remove the last review date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7530">
            <summary>
              Looks up a localized string similar to Relationship type does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7531">
            <summary>
              Looks up a localized string similar to Could not create/modify relationship type (duplicate exists)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7532">
            <summary>
              Looks up a localized string similar to Failed to check property..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7533">
            <summary>
              Looks up a localized string similar to Failed to close record folder; it may already be closed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7534">
            <summary>
              Looks up a localized string similar to Cannot move a cutoff record folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7540">
            <summary>
              Looks up a localized string similar to Entry tag does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7541">
            <summary>
              Looks up a localized string similar to Cannot create entry tag: duplicate name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7542">
            <summary>
              Looks up a localized string similar to The entry tag cannot be deleted, as it is currently assigned to one or more entries..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7543">
            <summary>
              Looks up a localized string similar to Cannot create/update entry tag..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7550">
            <summary>
              Looks up a localized string similar to Cannot find this rendition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7560">
            <summary>
              Looks up a localized string similar to Couldn&apos;t queue edoc for deletion..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7570">
            <summary>
              Looks up a localized string similar to The specified connection was not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7571">
            <summary>
              Looks up a localized string similar to The specified Windows account does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7572">
            <summary>
              Looks up a localized string similar to The specified Windows account is of the wrong type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7573">
            <summary>
              Looks up a localized string similar to A Windows user can be linked with a maximum of one Laserfiche user..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7574">
            <summary>
              Looks up a localized string similar to Windows user cannot access the repository..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7575">
            <summary>
              Looks up a localized string similar to Invalid configuration. A user must be able to change a temporary password..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7576">
            <summary>
              Looks up a localized string similar to Can not enable blank passwords if password restrictions are in place..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7580">
            <summary>
              Looks up a localized string similar to Unrecognized annotation type..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7581">
            <summary>
              Looks up a localized string similar to Stamp bitmap header incomplete..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7582">
            <summary>
              Looks up a localized string similar to Cannot generate thumbnail..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7583">
            <summary>
              Looks up a localized string similar to Duplicate stamp..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7590">
            <summary>
              Looks up a localized string similar to Unrecognized parameter name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7591">
            <summary>
              Looks up a localized string similar to Parameter value is of the wrong type or out of range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7592">
            <summary>
              Looks up a localized string similar to Incorrect scope for this parameter..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7593">
            <summary>
              Looks up a localized string similar to Error encountered attempting to save parameter..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7600">
            <summary>
              Looks up a localized string similar to Cannot export logical volume..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7601">
            <summary>
              Looks up a localized string similar to Export volume failed: out of space on target device..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7602">
            <summary>
              Looks up a localized string similar to Cannot export volume to a non-empty directory..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7604">
            <summary>
              Looks up a localized string similar to Maximum volume size specified is out of acceptable range..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7610">
            <summary>
              Looks up a localized string similar to A crypto API action failed for some reason..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7611">
            <summary>
              Looks up a localized string similar to Could not find the specified key..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7612">
            <summary>
              Looks up a localized string similar to Could not verify the server&apos;s signature..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7613">
            <summary>
              Looks up a localized string similar to The signature was not valid..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7614">
            <summary>
              Looks up a localized string similar to The server key could not be found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7615">
            <summary>
              Looks up a localized string similar to Access to the server key was denied..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7616">
            <summary>
              Looks up a localized string similar to Could not set server key rights..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7617">
            <summary>
              Looks up a localized string similar to The key was corrupt..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7618">
            <summary>
              Looks up a localized string similar to The local copy of the server key does not match the fingerprint..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7801">
            <summary>
              Looks up a localized string similar to General failure..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7802">
            <summary>
              Looks up a localized string similar to Corrupt index (expect token)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7803">
            <summary>
              Looks up a localized string similar to Corrupt noise file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7805">
            <summary>
              Looks up a localized string similar to Server out of disk space..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7806">
            <summary>
              Looks up a localized string similar to File won&apos;t open, etc..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7807">
            <summary>
              Looks up a localized string similar to Link has been delete (bad version)..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7808">
            <summary>
              Looks up a localized string similar to More than 255 version before optimizing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7809">
            <summary>
              Looks up a localized string similar to Too many btrees in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7810">
            <summary>
              Looks up a localized string similar to Document not open..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7811">
            <summary>
              Looks up a localized string similar to User canceled..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7812">
            <summary>
              Looks up a localized string similar to Index not opened..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7813">
            <summary>
              Looks up a localized string similar to No text file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7814">
            <summary>
              Looks up a localized string similar to Open doc failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7816">
            <summary>
              Looks up a localized string similar to Open/create link failed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7817">
            <summary>
              Looks up a localized string similar to Bad search handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7818">
            <summary>
              Looks up a localized string similar to Couldn&apos;t open hit file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7819">
            <summary>
              Looks up a localized string similar to Couldn&apos;t open wordoffset file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7820">
            <summary>
              Looks up a localized string similar to Document too large to completely indexed..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7821">
            <summary>
              Looks up a localized string similar to Indices locked due to processing..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7822">
            <summary>
              Looks up a localized string similar to Unknown swap file error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7823">
            <summary>
              Looks up a localized string similar to Bad search/swap file..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7824">
            <summary>
              Looks up a localized string similar to Cannot create search indices..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7825">
            <summary>
              Looks up a localized string similar to Cannot open search indices..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7826">
            <summary>
              Looks up a localized string similar to Access denied to search index..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7827">
            <summary>
              Looks up a localized string similar to Search file does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7828">
            <summary>
              Looks up a localized string similar to Document not found in hit list... should this number be fixed?.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7830">
            <summary>
              Looks up a localized string similar to Indexing thread inactive; restart server..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7831">
            <summary>
              Looks up a localized string similar to Bad searchwrapper handle..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7832">
            <summary>
              Looks up a localized string similar to Search initialization timed out during wait..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7833">
            <summary>
              Looks up a localized string similar to Indexing couldn&apos;t rebuild search blackouts..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7834">
            <summary>
              Looks up a localized string similar to Search or sort is already in progress..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7851">
            <summary>
              Looks up a localized string similar to Unknown syntax error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7852">
            <summary>
              Looks up a localized string similar to Unknown parser error..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7854">
            <summary>
              Looks up a localized string similar to Search stack overflow..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7855">
            <summary>
              Looks up a localized string similar to Literal missing final quote..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7856">
            <summary>
              Looks up a localized string similar to Within or near missing distance number..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7857">
            <summary>
              Looks up a localized string similar to Invalid character in search string..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7858">
            <summary>
              Looks up a localized string similar to Too many ^&apos;s in []..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7859">
            <summary>
              Looks up a localized string similar to Needs high end of range --&gt; [ab-]..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7860">
            <summary>
              Looks up a localized string similar to Mismatched parentheses..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7861">
            <summary>
              Looks up a localized string similar to Unexpected end of search phrase..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7862">
            <summary>
              Looks up a localized string similar to Unexpected AND..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7863">
            <summary>
              Looks up a localized string similar to Unexpected OR..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7864">
            <summary>
              Looks up a localized string similar to Unexpected NOT..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7865">
            <summary>
              Looks up a localized string similar to Unexpected right parenthesis..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7866">
            <summary>
              Looks up a localized string similar to Unexpected field operator..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7867">
            <summary>
              Looks up a localized string similar to Unexpected within..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7868">
            <summary>
              Looks up a localized string similar to Missing right paren..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7869">
            <summary>
              Looks up a localized string similar to Missing right paren..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7870">
            <summary>
              Looks up a localized string similar to Missing right brace..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7871">
            <summary>
              Looks up a localized string similar to Missing left brace..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7872">
            <summary>
              Looks up a localized string similar to Template name not recognized..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7873">
            <summary>
              Looks up a localized string similar to Bad Field..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7874">
            <summary>
              Looks up a localized string similar to Bad Path specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7875">
            <summary>
              Looks up a localized string similar to Bad ID specified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7876">
            <summary>
              Looks up a localized string similar to Bad field value provided..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7880">
            <summary>
              Looks up a localized string similar to The specified location is in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7881">
            <summary>
              Looks up a localized string similar to The specified location doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7882">
            <summary>
              Looks up a localized string similar to The specified cycle definition doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7883">
            <summary>
              Looks up a localized string similar to The specified cycle definition already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7884">
            <summary>
              Looks up a localized string similar to The specified cycle definition doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7885">
            <summary>
              Looks up a localized string similar to The specified cycle definition already exists..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7886">
            <summary>
              Looks up a localized string similar to The specified cycle definition cannot be deleted or modified because it is currently in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7887">
            <summary>
              Looks up a localized string similar to Failed to open record folder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7888">
            <summary>
              Looks up a localized string similar to Failed to freeze entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7889">
            <summary>
              Looks up a localized string similar to Failed to cutoff or uncutoff a recordfolder..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7890">
            <summary>
              Looks up a localized string similar to Failed to set last review date for document..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7911">
            <summary>
              Looks up a localized string similar to You must specify a reason..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7912">
            <summary>
              Looks up a localized string similar to Failed to unfreeze entry..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7920">
            <summary>
              Looks up a localized string similar to Invalid cutoff criteria..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7921">
            <summary>
              Looks up a localized string similar to Invalid retention schedule..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7922">
            <summary>
              Looks up a localized string similar to Cannot set final disposition location..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7923">
            <summary>
              Looks up a localized string similar to Duplicate cutoff criteria name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7924">
            <summary>
              Looks up a localized string similar to The cutoff criteria is in use, and may not be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7925">
            <summary>
              Looks up a localized string similar to Freeze not found..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7926">
            <summary>
              Looks up a localized string similar to Entry is frozen..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7927">
            <summary>
              Looks up a localized string similar to Duplicate retention schedule name..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7928">
            <summary>
              Looks up a localized string similar to The retention schedule is in use, and may not be deleted or modified..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7929">
            <summary>
              Looks up a localized string similar to The record folder has been cut off, and filing date may not be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7930">
            <summary>
              Looks up a localized string similar to The filing date cannot be after the creation date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7931">
            <summary>
              Looks up a localized string similar to The specified period does not contain any cycles..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7932">
            <summary>
              Looks up a localized string similar to The specified transfer is in use and cannot be deleted..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7933">
            <summary>
              Looks up a localized string similar to Record must be superseded before final disposition action can occur..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7934">
            <summary>
              Looks up a localized string similar to Retention schedule with requires superseded requirement must have no hold, transfer, or post-cutoff trigger..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7935">
            <summary>
              Looks up a localized string similar to Retention schedule cannot use itself as an alternate schedule for a post-cutoff trigger..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7936">
            <summary>
              Looks up a localized string similar to Retention schedule cannot have an alternate schedule if it is already used as an alternate schedule itself..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7937">
            <summary>
              Looks up a localized string similar to The specified event does not exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7938">
            <summary>
              Looks up a localized string similar to This link type cannot be removed due to DOD 5015.2 compliance requirements..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7939">
            <summary>
              Looks up a localized string similar to This event cannot be deleted because it is in use..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7990">
            <summary>
              Looks up a localized string similar to Failed to delete event date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7991">
            <summary>
              Looks up a localized string similar to Failed to get current disposition..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7992">
            <summary>
              Looks up a localized string similar to Failed to confirm transfer..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7993">
            <summary>
              Looks up a localized string similar to Invalid hold duration defined..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7994">
            <summary>
              Looks up a localized string similar to Invalid hold disposition type defined..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7995">
            <summary>
              Looks up a localized string similar to Failed to get eligibility date..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7996">
            <summary>
              Looks up a localized string similar to Failed to carry out final disposition action..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7997">
            <summary>
              Looks up a localized string similar to The specified series doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7998">
            <summary>
              Looks up a localized string similar to No records at the specified location..
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Properties.Resources.MSG7999">
            <summary>
              Looks up a localized string similar to No records that satisfy this criteria..
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.FreezeInfoReader">
            <summary>
            Enumerates <c>FreezeInfo</c> instances which represent Laserfiche records
            management freeze definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.FrozenEntry">
            <summary>
            Represents a frozen entry in freeze info
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Laserfiche.RepositoryAccess.Records.FrozenEntry.#ctor(System.Int32)" -->
        <member name="P:Laserfiche.RepositoryAccess.Records.FrozenEntry.FreezerSid">
            <summary>
            Get the freezer sid of the frozen entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FrozenEntry.FrozenDate">
            <summary>
            Get the frozen date of the frozen entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FrozenEntry.EntryId">
            <summary>
            Get or sets the root entry id of a frozen entry.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FrozenEntry.op_Equality(Laserfiche.RepositoryAccess.Records.FrozenEntry,Laserfiche.RepositoryAccess.Records.FrozenEntry)">
            <summary>
            Determines if two frozen entries represented by <c>FrozenEntry</c> objects are
            equal.
            </summary>
            <param name="fentry1">A <c>FrozenEntry</c> object to check for value equality.</param>
            <param name="fentry2">A <c>FrozenEntry</c> object to check for value equality.</param>
            <returns>True if the root entry Id, freezer sid and frozen date in which the <c>FrozenEntry</c> objects represent
            are equal and false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FrozenEntry.op_Inequality(Laserfiche.RepositoryAccess.Records.FrozenEntry,Laserfiche.RepositoryAccess.Records.FrozenEntry)">
            <summary>
            Determines if two frozen entries represented by <c>FrozenEntry</c> objects are
            not equal.
            </summary>
            <param name="fentry1">A <c>FrozenEntry</c> object to check for value inequality.</param>
            <param name="fentry2">A <c>FrozenEntry</c> object to check for value inequality.</param>
            <returns>True if the frozen entry which the <c>FrozenEntry</c> objects represent
            are not equal and false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties">
            <summary>
            A collection of records management properties for a records series
            in Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.EntryId">
            <summary>
            Gets the entry ID of the associated record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.ReviewCycleId">
            <summary>
            Gets or sets the ID of the calendar cycle to be used for the vital record
            review cycle of the represented record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.ReviewInterval">
            <summary>
            Gets or sets the review interval for interval-based vital record review schedules.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.ReviewIntervalUnit">
            <summary>
            Gets or sets the interval time unit for interval-based vital record review schedules.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.CutoffCriterionId">
            <summary>
            Gets or sets the ID of the cutoff criterion of the represented record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.DispositionScheduleId">
            <summary>
            Gets or sets the ID of the disposition schedule of the represented record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.DispositionAuthority">
            <summary>
            Gets or sets the disposition authority name for the represented record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.IsPermanent">
            <summary>
            Gets or sets the permanent status of the represented record series.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.GetReviewCycle">
            <summary>
            Returns a <c>CalendarCycleInfo</c> instance which represents the calendar
            cycle configured for the vital record review cycle for the represented
            record series.
            </summary>
            <returns>A <c>CalendarCycleInfo</c> instance representing the vital record
            review cycle, or null if there is no configured vital record review cycle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.GetCutoffCriterion">
            <summary>
            Returns a <c>CutoffCriterionInfo</c> instance which represents the cutoff
            criterion assigned to the represented record series.
            </summary>
            <returns>A <c>CutoffCriterionInfo</c> instance which represents the assigned
            cutoff criterion, or null if no cutoff criterion is assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.GetDispositionSchedule">
            <summary>
            Returns a <c>DispositionScheduleInfo</c> instance which represents the assigned
            disposition schedule for the represented record series.
            </summary>
            <returns>A <c>DispositionScheduleInfo</c> instance which represents the
            assigned disposition schedule, or null if there is no assigned schedule.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            For internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            For internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="entryId"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordSeriesProperties.SaveCascading">
            <summary>
            Save changes to Laserfiche and cascade modifications to the series' records
            management configuration down through descendent series and record folders.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CalendarCycle">
            <summary>
            A collection of methods for creating and managing calendar cycles for use
            with Laserfiche records management.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.Create(Laserfiche.RepositoryAccess.Records.CalendarCycleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a calendar cycle definition in a Laserfiche repository.
            </summary>
            <param name="info">A <c>CalendarCycleInfo</c> instance which specifies
            the settings for the new calendar cycle.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>CalendarCycleInfo</c> instance which represents the
            new calendar cycle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.Update(System.Int32,Laserfiche.RepositoryAccess.Records.CalendarCycleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for a calendar cycle in a Laserfiche repository.
            </summary>
            <param name="cycleId">The ID of the calendar cycle to update.</param>
            <param name="info">A <c>CalendarCycleInfo</c> instance which specifies
            the new settings for the calendar cycle.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.Update(System.String,Laserfiche.RepositoryAccess.Records.CalendarCycleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for a calendar cycle in a Laserfiche repository.
            </summary>
            <param name="code">The cycle code of the calendar cycle to update.</param>
            <param name="info">>A <c>CalendarCycleInfo</c> instance which specifies
            the new settings for the calendar cycle.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a calendar cycle definition from a Laserfiche repository.
            </summary>
            <param name="cycleId">The ID of the calendar cycle definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a calendar cycle definition from a Laserfiche repository.
            </summary>
            <param name="code">The cycle code of the calendar cycle to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a calendar cycle definition from a Laserfiche repository.
            </summary>
            <param name="cycleId">The ID of the calendar cycle definition to retrieve
            information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>CalendarCycleInfo</c> instance which represents the calendar
            cycle definition with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a calendar cycle definition from a Laserfiche repository.
            </summary>
            <param name="code">The cycle code of the calendar cycle to retrieve information
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>CalendarCycleInfo</c> instance which represents the calendar
            cycle definition with the specified cycle code.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>CalendarCycleInfoReader</c> which can be used to enumerate
            all of the calendar cycle definitions in a Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>CalendarCycleInfoReader</c> instance which will enumerate
            all of the calendar cycle definitions in a Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified calendar cycle.
            </summary>
            <param name="cycleId">The ID of the calendar cycle.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified calendar cycle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified calendar cycle.
            </summary>
            <param name="cycleId">The ID of the calendar cycle.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified calendar cycle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified calendar cycle.
            </summary>
            <param name="cycleId">The ID of the calendar cycle.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all calendar cycles.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all calendar cycles.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycle.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all calendar cycles.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.PeriodAndDescription">
            <summary>
            Represents a single calendar cycle period and its description.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.PeriodAndDescription.Month">
            <summary>
            Gets the <c>MonthOfYear</c> value of the represented calendar cycle period,
            if applicable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.PeriodAndDescription.DayOfWeek">
            <summary>
            Gets the <c>DayOfWeek</c> value of the represented calendar cycle period,
            if applicable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.PeriodAndDescription.Description">
            <summary>
            Gets the description of the represented calendar cycle period.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CalendarCycleType">
            <summary>
            An enumeration of the types of Laserfiche calendar cycles.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.CalendarCycleType.Annual">
            <summary>
            Unit of scheduling is month of year.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.CalendarCycleType.Weekly">
            <summary>
            Unit of scheduling is day of week.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo">
            <summary>
            Represents a calendar cycle for use with Laserfiche records management.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.#ctor">
            <summary>
            Initializes an instance of <c>CalendarCycleInfo</c> with no periods and
            a blank code.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>CalendarCycleInfo</c> with no periods and
            a blank code.
            <param name="session">The Laserfiche session to use.</param>
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initailizes an instance of the <c>CalendarCycleInfo</c> with the specified
            ID.
            </summary>
            <param name="cycleId">The ID of the <c>CalendarCycleInfo</c> desired.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.#ctor(Laserfiche.RepositoryAccess.Records.CalendarCycleInfo)">
            <summary>
            Initializes an instance of <c>CalendarCycleInfo</c> that is a copy of the
            supplied <c>CalendarCycleInfo</c>
            </summary>
            <param name="info">The <c>CalendarCycleInfo</c> instance of which to create a copy.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the calendar cycle has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Id">
            <summary>
            Gets the ID of the calendar cycle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Code">
            <summary>
            Gets or sets the code for the calendar cycle, which is between 1 and 3 characters long.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.CalendarCycleType">
            <summary>
            Gets or sets the type of calendar cycle (i.e., annual or weekly).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Description">
            <summary>
            Gets or sets the description for the calendar cycle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.ItemCount">
            <summary>
            Gets the numbers of periods in this calendar cycle.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Item(System.Int32)">
            <summary>
            Gets a <c>PeriodAndDescription</c> instance representing the calendar cycle
            period at the specified index.
            </summary>
            <param name="index">The index of the period to return.</param>
            <returns>A <c>PeriodAndDescription</c> instance representing the
            calendar cycle period at the specified index.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Add(Laserfiche.RepositoryAccess.Common.MonthOfYear,System.String)">
            <summary>
            Adds a month to the set of periods in an annual calendar cycle that
            this instance represents.
            </summary>
            <param name="month">The ordinal of the month to add as a period.</param>
            <param name="description">The description of this period.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Add(System.DayOfWeek,System.String)">
            <summary>
            Adds a day to the set of periods in the weekly calendar cycle that
            this instance represents.
            </summary>
            <param name="dow">The day of the week to add as a period.</param>
            <param name="description">The description of this period.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Add(Laserfiche.RepositoryAccess.Records.PeriodAndDescription)">
            <summary>
            Adds a period and description to the calendar cycle that this instance
            represents.
            </summary>
            <param name="period">A <c>PeriodAndDescription</c> instance which represents
            a compatible calendar cycle period and description.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.SetItemDescription(Laserfiche.RepositoryAccess.Common.MonthOfYear,System.String)">
            <summary>
            Sets the description of an existing period in the calendar cycle that
            this instance represents.
            </summary>
            <param name="month">The ordinal of the month to set the description for.</param>
            <param name="description">The description of this period.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.SetItemDescription(System.DayOfWeek,System.String)">
            <summary>
            Sets the description of an existing period in the calendar cycle that
            this instance represents.
            </summary>
            <param name="dow">The day of the week to set the description for.</param>
            <param name="description">The description of this period.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.SetItemDescriptionAt(System.Int32,System.String)">
            <summary>
            Sets the description of an existing period in the calendar cycle that
            this instance represents.
            </summary>
            <param name="index">The index of the period in the calendar cycle's list of periods.</param>
            <param name="description">The description of this period.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Remove(Laserfiche.RepositoryAccess.Common.MonthOfYear)">
            <summary>
            Removes a period from the calendar cycle definition that this instance represents.
            </summary>
            <param name="month">The ordinal of the month to remove.</param>
            <returns>True if the specified period was removed, false if the period was not part
            of the calendar cycle definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Remove(System.DayOfWeek)">
            <summary>
            Removes a period from the calendar cycle definition that this instance represents.
            </summary>
            <param name="dow">The day of the week of the period to remove.</param>
            <returns>True if the specified period was removed, false if the period was not part
            of the calendar cycle definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.RemoveAt(System.Int32)">
            <summary>
            Removes a period from the calendar cycle definition that this instance represents.
            </summary>
            <param name="index">The index of the period to remove in the calendar cycle's
            list of periods.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.ClearItems">
            <summary>
            Removes all the periods from the calendar cycle definition that this instance
            represents.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.IndexOf(Laserfiche.RepositoryAccess.Common.MonthOfYear)">
            <summary>
            Returns the index of the period with the specified month in the list of periods
            for the annual calendar cycle definition represented by this instance.
            </summary>
            <param name="month">The ordinal of the month for the period to return the index
            in the calendar cycle's period list for.</param>
            <returns>The index of the specified period in the calendar cycle's period list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.IndexOf(System.DayOfWeek)">
            <summary>
            Returns the index of the period at the specified day of the week in the list of
            periods for the weekly calendar cycle definition represented by this instance.
            </summary>
            <param name="dow">The day of the week for the period to return the index in the
            calendar cycle's period list for.</param>
            <returns>The index of the specified period in the calendar cycle's period list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CalendarCycleInfo.Delete">
            <summary>
            Marks the calendar cycle definition represented by this instance for
            deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CalendarCycleInfoReader">
            <summary>
            Enumerates <c>CalendarCycleInfo</c> instances which represent calendar cycle
            definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CutoffCriterion">
            <summary>
            A collection of methods for creating and managing records management cutoff
            criteria in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.Create(Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new cutoff criterion definition in a Laserfiche repository and
            returns an instance of <c>CutoffCriterionInfo</c> that represents the
            cutoff criterion object.
            </summary>
            <param name="info">A <c>CutoffCriterionInfo</c> instance which specifies
            the settings for the new cutoff criterion definition.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified cutoffcriterion name conflicts with an existing
            cutoffcriterion definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>CutoffCriterionInfo</c> instance which represents the newly
            created cutoff criterion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.Update(System.Int32,Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing cutoff criterion in a Laserfiche repository.
            </summary>
            <param name="cutoffId">The ID of the cutoff criterion to update the definition for.</param>
            <param name="info">An instance of <c>CutoffCriterionInfo</c> which specifies the
            settings to update the cutoff criterion to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.Update(System.String,Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing cutoff criterion in a Laserfiche repository.
            </summary>
            <param name="cutoffName">The name of the cutoff criterion to update.</param>
            <param name="info">An instance of <c>CutoffCriterionInfo</c> which specifies the
            settings to update the cutoff criterion to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a cutoff criterion definition from a Laserfiche repository.
            </summary>
            <param name="cutoffId">The ID of the cutoff criterion to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a cutoff criterion definition from a Laserfiche repository.
            </summary>
            <param name="cutoffName">The name of the cutoff criterion to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about a Laserfiche records management cutoff criterion.
            </summary>
            <param name="cutoffId">The ID of the cutoff criteron to return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>CutoffCriterionInfo</c> instance which represents the cutoff
            criterion in Laserfiche with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about a Laserfiche records management cutoff criterion.
            </summary>
            <param name="cutoffName">The name of the cutoff criterion to return
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>CutoffCriterionInfo</c> instance which represents the cutoff
            criterion in Laserfiche with the specified name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>CutoffCriterionInfoReader</c> instance which can be used to
            enumerate all of the cutoff criteria in a Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>CutoffCriterionInfoReader</c> instance which will enumerate
            all of the cutoff criteria in a Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified cutoff criterion.
            </summary>
            <param name="cutoffId">The ID of the cutoff criterion.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified cutoff criterion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified cutoff criterion.
            </summary>
            <param name="cutoffId">The ID of the cutoff criterion.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified cutoff criterion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified cutoff criterion.
            </summary>
            <param name="cutoffId">The ID of the cutoff criterion.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all cutoff criteria.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all cutoff criteria.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterion.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all cutoff criteria.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RetentionType">
            <summary>
            An enumeration of supported Laserfiche records management retention types
            when configuring cutoff criteria.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.Unknown">
            <summary>
            The retention type hasn't been configured.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.Event">
            <summary>
            Cutoff when an event occurs.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.Time">
            <summary>
            Cutoff when a configured calendar cycle completes one cycle.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.TimeAndEvent">
            <summary>
            Cutoff when a configured calendar cycle completes one cycle after an
            event occurs.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.Superseded">
            <summary>
            Cutoff when superseded.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.LinkedDisposition">
            <summary>
            Cutoff when a linked record is dispositioned.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.Interval">
            <summary>
            Cutoff after a configured interval since the filing date has passed.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionType.IntervalAndEvent">
            <summary>
            Cutoff after a configured interval since an event occurs.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RetentionTriggerAction">
            <summary>
            An enumeration of records management actions that will trigger a cutoff
            for a LinkedDisposition cutoff criterion.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionTriggerAction.Transfer">
            <summary>
            Cutoff when the linked record is transferred to a specific location.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionTriggerAction.TransferAny">
            <summary>
            Cutoff when the linked record is transferred to any location.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionTriggerAction.Disposition">
            <summary>
            Cutoff when the linked record is dispositioned.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo">
            <summary>
            Represents a Laserfiche records management cutoff criterion definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.Id">
            <summary>
            Gets the ID of the cutoff criterion definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.Name">
            <summary>
            Gets or sets the name of the cutoff criterion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.Description">
            <summary>
            Gets or sets the description of the cutoff criterion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.RetentionType">
            <summary>
            Gets or sets the type of cutoff criteria that will be applied to control
            record retention.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.AllowEvents">
            <summary>
            Gets a boolean indicating if this cutoff criterion allows events to be configured.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.AllowCalendarCycle">
            <summary>
            Gets a boolean indicating if this cutoff criterion allows a calendar cycle to
            be configured.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.IsComplete">
            <summary>
            Gets if this instance has completely loaded all the properties of
            the represented cutoff criterion from Laserfiche, or only some of them.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.CalendarCycleId">
            <summary>
            Gets or sets the ID of the calendar cycle to use with Time and Time-Event
            cutoff criteria.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.EventIds">
            <summary>
            Gets the set of IDs for the Laserfiche records management events associated
            with this cutoff criterion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.EventCount">
            <summary>
            Gets the number of events associated with this cutoff criterion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.Interval">
            <summary>
            Gets or sets the cutoff interval in months.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.IsEligibleByAnyEvent">
            <summary>
            Gets or sets a boolean indicating if cutoff eligibility is met if any event is set.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.TriggerAction">
            <summary>
            Gets or sets the type of records management action that will trigger cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.TriggerLocationId">
            <summary>
            Gets or sets the ID of the location that linked records must be transferred
            to trigger cutoff when the TriggerAction property is set to Transfer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.TriggerLinkTypeId">
            <summary>
            Gets or sets the ID of the entry link type that is used to link the entry
            with this cutoff criterion to the linked record when this criterion is using
            a triggered retention type.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.#ctor">
            <summary>
            Initializes an instance of <c>CutoffCriterionInfo</c> representing an Event
            criterion with no events associated with it.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>CutoffCriterionInfo</c> representing an Event
            criterion with no events associated with it.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.#ctor(Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo)">
            <summary>
            Initializes a <c>CutoffCriterionInfo</c> instance based upon the configuration
            of an existing instance.
            </summary>
            <param name="info">A <c>CutoffCriterionInfo</c> instance to draw data from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.ContainsEvent(System.Int32)">
            <summary>
            Determines if a Laserfiche records management event with the specified ID is
            associated with this cutoff criterion.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event to
            check for.</param>
            <returns>True if the cutoff criterion that this instance represents is contains
            the event with the specified ID in its event list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.AddEvent(System.Int32)">
            <summary>
            Adds a Laserfiche records management event to the event list of the cutoff
            criterion that this instance represents.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.RemoveEvent(System.Int32)">
            <summary>
            Removes a Laserfiche records management event from the event list of the
            cutoff criterion that this instance represents.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event to remove.</param>
            <returns>True if the specified event was found and removed, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.RemoveEventAt(System.Int32)">
            <summary>
            Remove an event by its index in the event list.
            </summary>
            <param name="index">The zero-based index of the event to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.SetEventAt(System.Int32,System.Int32)">
            <summary>
            Set the event ID at the specified index in the event list.  Do not
            specify an event more than once in the list.
            </summary>
            <param name="index">The zero-based index of the event list slot
            to set.</param>
            <param name="eventId">The event ID to assign.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.ClearEvents">
            <summary>
            Removes all associated Laserfiche records management events from the
            cutoff criterion that this instance represents.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfo.Delete">
            <summary>
            Marks the cutoff criterion represented by this instance for
            deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.CutoffCriterionInfoReader">
            <summary>
            Enumerates <c>CutoffCriterionInfo</c> instances which represent cutoff criterion
            definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.DispositionSchedule">
            <summary>
            A collection of methods for creating and managing Laserfiche records management
            disposition schedules.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.Create(Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new Laserfiche records management disposition schedule object.
            </summary>
            <param name="info">A <c>DispositionScheduleInfo</c> instance which specifies
            the settings for the new disposition schedule.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified dispositionschedule name conflicts with an existing
            dispositionschedule definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>DispositionScheduleInfo</c> instance which represents the
            new disposition schedule definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.Update(System.Int32,Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing disposition schedule in a Laserfiche repository.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule to update.</param>
            <param name="info">A <c>DispositionScheduleInfo</c> instance which specifies the
            updated settings for the disposition schedule.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.Update(System.String,Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing disposition schedule in a Laserfiche repository.
            </summary>
            <param name="name">The name of the disposition schedule to update.</param>
            <param name="info">A <c>DispositionScheduleInfo</c> instance which specifies the
            updated settings for the disposition schedule.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a disposition schedule definition in a Laserfiche repository.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a disposition schedule definition in a Laserfiche repository.
            </summary>
            <param name="name">The name of the disposition schedule to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets information about a disposition schedule object in a Laserfiche repository.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>DispositionScheduleInfo</c> instance which represents the
            disposition schedule with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets information about a disposition schedule object in a Laserfiche repository.
            </summary>
            <param name="name">The name of the disposition schedule to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>DispositionScheduleInfo</c> instance which represents the
            disposition schedule with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>DispositionScheduleInfoReader</c> instance which can be used to
            enumerate all of the disposition schedules in a repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DispositionScheduleInfoReader</c> instance which can be used
            to enumerate all of the disposition schedules in a repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified disposition schedule.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified disposition schedule.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified disposition schedule.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified disposition schedule.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified disposition schedule.
            </summary>
            <param name="dispSchedId">The ID of the disposition schedule.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all disposition schedules.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all disposition schedules.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionSchedule.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all disposition schedules.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.DispositionType">
            <summary>
            Enumeration of the available Laserfiche records management disposition types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionType.Accession">
            <summary>
            Accession to disposition authority for final disposition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionType.Destroy">
            <summary>
            Destroy records for final disposition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionType.None">
            <summary>
            No final disposition.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RetentionInstructions">
            <summary>
            Enumeration of possible actions to take after a retention period is over.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionInstructions.RetainMetadataOnly">
            <summary>
            Delete the records contents and retain only the metadata after retention.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionInstructions.Delete">
            <summary>
            Delete the records after retention.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionInstructions.RetainAll">
            <summary>
            Retain all record data after retention.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.RetentionInstructions.NotConfigured">
            <summary>
            No post-retention instructions have been configured.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo">
            <summary>
            Represents a Laserfiche records management disposition schedule definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.MIN_RETENTION_MONTHS">
            <summary>
            The minimum number of months for a retention period.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.MAX_RETENTION_MONTHS">
            <summary>
            The maximum number of months for a retention period.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.#ctor">
            <summary>
            Initializes an instance of <c>DispositionScheduleInfo</c> representing a
            new disposition schedule with no final disposition or interim transfers.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>DispositionScheduleInfo</c> representing a
            new disposition schedule with no final disposition or interim transfers.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates an instance of <c>DispositionScheduleInfo</c> representing a reference
            to the disposition schedule with the specified ID.
            </summary>
            <param name="dispId">The ID of the disposition schedule to reference.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.#ctor(Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo)">
            <summary>
            Creates an instance of <c>DispositionScheduleInfo</c> representing a reference
            to the disposition schedule represented by the given <c>DispositionScheduleInfo</c>.
            </summary>
            <param name="info">An <c>DispositionScheduleInfo</c> instance representing the 
            disposition schedule to reference.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Id">
            <summary>
            Gets the ID of the disposition schedule definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Name">
            <summary>
            Gets or sets the name of the disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.IsComplete">
            <summary>
            Gets if this instance has completely loaded all the properties of
            the represented disposition schedule from Laserfiche, or only some of them.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Description">
            <summary>
            Gets or sets the description for the represented disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Code">
            <summary>
            Gets or sets the code for the represented disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.RetentionMonths">
            <summary>
            Gets or sets the retention period in months for the represented
            disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.FinalDisposition">
            <summary>
            Gets or sets the type of final disposition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.DispositionAction">
            <summary>
            Gets or sets the action taken after final disposition is confirmed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.FinalLocationId">
            <summary>
            Gets or sets the ID for the accession destination location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.AlternateScheduleTriggerEventId">
            <summary>
            Gets or sets the ID of the Laserfiche records management event that triggers
            the alternate disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.AlternateScheduleId">
            <summary>
            Gets or sets the ID of the alternate disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Transfers">
            <summary>
            Gets a <c>TransferCollection</c> instance which represents the interim transfers
            for the disposition schedule represented by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.TransferCount">
            <summary>
            Gets the count of interim transfers.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.HasAlternateSchedule">
            <summary>
            Gets if an alternate disposition schedule has been configured for
            the disposition schedule represented by this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.SetAlternateSchedule(System.Int32,System.Int32)">
            <summary>
            Sets an alternate schedule and trigger for the represented disposition
            schedule.
            </summary>
            <param name="triggerEventId">The ID of the alterate schedule trigger event.</param>
            <param name="schedId">The ID of the alternate disposition schedule.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.SetFinalDisposition(Laserfiche.RepositoryAccess.Records.DispositionType,Laserfiche.RepositoryAccess.Records.RetentionInstructions,System.Int32)">
            <summary>
            Configures final disposition instructions for the represented disposition
            schedule.
            </summary>
            <param name="type">The type of final disposition to use.</param>
            <param name="action">The action to take after final disposition is confirmed.</param>
            <param name="locationId">The ID of the accession destination location
            when the final disposition is accession.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.SetFinalDisposition(Laserfiche.RepositoryAccess.Records.DispositionType,Laserfiche.RepositoryAccess.Records.RetentionInstructions)">
            <summary>
            Configures final disposition instructions for the represented disposition
            schedule.
            </summary>
            <param name="type">The type of final disposition to use.</param>
            <param name="action">The action to take after final disposition is confirmed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.AddTransfer(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Records.RetentionInstructions,System.String)">
            <summary>
            Adds a new transfer to the end of the interim transfer schedule.
            </summary>
            <param name="locationId">The ID of the location to transfer the records to.</param>
            <param name="retentionMonths">The retention period, in months, at the destination.</param>
            <param name="instructions">The action to take after the interim transfer
            operation has been confirmed.</param>
            <param name="descrip">The description for the new interim transfer.</param>
            <returns>A new <c>TransferInfo</c> instance which represents the interim
            transfer definition just added.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.RemoveTransfer(System.Int32)">
            <summary>
            Removes an interim transfer definition from the represented disposition schedule.
            </summary>
            <param name="index">The index of the interim transfer to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.InsertTransfer(System.Int32,System.Int32,System.Int32,Laserfiche.RepositoryAccess.Records.RetentionInstructions,System.String)">
            <summary>
            Inserts a new interim transfer into the list of interim transfers at the
            specified position.
            </summary>
            <param name="index">The index in the list of interim transfers where the 
            new transfer is to be inserted.</param>
            <param name="locationId">The ID of the location to transfer the records to.</param>
            <param name="retentionMonths">The retention period, in months, at the destination.</param>
            <param name="instructions">The action to take after the interim transfer
            operation has been confirmed.</param>
            <param name="descrip">The description for the new interim transfer.</param>
            <returns>A new <c>TransferInfo</c> instance which represents the interim
            transfer definition just added.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.ClearTransfers">
            <summary>
            Removes all the interim transfers from the disposition schedule's transfer list.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.GetTransfer(System.Int32)">
            <summary>
            Returns a <c>TransferInfo</c> instance which represents an interim transfer
            at the specified index defined for this disposition schedule.
            </summary>
            <param name="index">The index of the interim transfer to return information for.</param>
            <returns>A <c>TransferInfo</c> instance which represents an interim transfer
            at the specified index.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfo.Delete">
            <summary>
            Marks the disposition schedule represented by this instance for
            deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.DispositionScheduleInfoReader">
            <summary>
            Enumerates <c>DispositionScheduleInfo</c> instances which represent
            disposition schedule definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.Event">
            <summary>
            A collection of methods for creating and managing Laserfiche records management
            event definitions.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.Create(Laserfiche.RepositoryAccess.Records.EventInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new Laserfiche records management event definition.
            </summary>
            <param name="info">An <c>EventInfo</c> instance which specifies the settings
            for the new event definition.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified event name conflicts with an existing
            event definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EventInfo</c> instance which represents the event
            definition that was created.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.Update(System.Int32,Laserfiche.RepositoryAccess.Records.EventInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management event object.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event
            definition to update.</param>
            <param name="info">An <c>EventInfo</c> instance which specifies the settings
            for the updated event definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.Update(System.String,Laserfiche.RepositoryAccess.Records.EventInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management event object.
            </summary>
            <param name="eventName">The name of the Laserfiche records management event
            definition to update.</param>
            <param name="info">An <c>EventInfo</c> instance which specifies the settings
            for the updated event definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management event definition from a repository.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event
            definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management event definition from a repository.
            </summary>
            <param name="eventName">The name of the Laserfiche records management event
            definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EventInfo</c> instance which describes an existing Laserfiche
            records management event definition.
            </summary>
            <param name="eventId">The ID of the Laserfiche records management event
            definition to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EventInfo</c> instance which represents the event definition
            with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EventInfo</c> instance which describes an existing Laserfiche
            records management event definition.
            </summary>
            <param name="eventName">The name of the Laserfiche records management event
            definition to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EventInfo</c> instance which represents the event definition
            with the specified name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EventInfoReader</c> instance which can be used to enumerate
            all of the Laserfiche records management event definitions in a repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EventInfoReader</c> instance which can be used to enumerate
            all of the Laserfiche records management event definitions in a repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified event definition.
            </summary>
            <param name="eventId">The ID of the event definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified event definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified event definition.
            </summary>
            <param name="eventId">The ID of the event definition.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified event definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified event definition.
            </summary>
            <param name="eventId">The ID of the event definition.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all disposition schedules.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all disposition schedules.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Event.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all disposition schedules.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.EventInfo">
            <summary>
            Represents a Laserfiche records management event definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.EventInfo.Id">
            <summary>
            Gets the ID of the Laserfiche records management event definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.EventInfo.Name">
            <summary>
            Gets or sets the name of the Laserfiche records management event definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.EventInfo.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the event has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.EventInfo.Description">
            <summary>
            Gets or sets the description of the Laserfiche records management event definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.EventInfo.Delete">
            <summary>
            Marks the Laserfiche records management event definition represented
            by this instance for deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.EventInfo.#ctor">
            <summary>
            Initializes an <c>EventInfo</c> instance representing a new Laserfiche records
            management event definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.EventInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>EventInfo</c> instance representing a new Laserfiche records
            management event definition.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.EventInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            For internal Laserfiche use only.
            </summary>
            <param name="eventId"></param>
            <param name="session"></param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.EventInfoReader">
            <summary>
            Enumerates <c>EventInfo</c> instances which represent Laserfiche records
            management event definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.Freeze">
            <summary>
            A collection of methods for creating and managing Laserfiche records management
            freezes (a "freeze" is also known as a "hold" or "legal hold").
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Create(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Create a new Laserfiche records management freeze.
            </summary>
            <param name="entryId">The ID of the entry to freeze.</param>
            <param name="reason">Text to use as the reason for freezing the entry.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FreezeInfo</c> instance which represents information about
            the records management freeze.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeEntry(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Add an entry to an existing freeze
            </summary>
            <param name="entryId">The ID of the entry to freeze.</param>
            <param name="freezeid">The ID of the freeze object that the entry shall be added to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeEntry(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Create a new Laserfiche records management freeze with reason and add an entry to the freeze
            </summary>
            <param name="entryId">The ID of the entry to freeze.</param>
            <param name="reason">The freeze reason.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeMultiEntries(System.Int32[],System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Create a new Laserfiche records management freeze with reason and add entries to the freeze
            </summary>
            <param name="entryIds">The IDs of the entries to freeze.</param>
            <param name="reason">The freeze reason.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeMultiEntries(Laserfiche.RepositoryAccess.EntryInfo[],System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Create a new Laserfiche records management freeze with reason and add entries to the freeze
            </summary>
            <param name="entryInfos">The entries that will be frozen.</param>
            <param name="reason">The freeze reason.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeMultiEntries(System.Int32[],System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Add entries to an existing freeze
            </summary>
            <param name="entryIds">The IDs of the entries to freeze.</param>
            <param name="freezeId">The ID of the freeze object that the entries shall be added to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.FreezeMultiEntries(Laserfiche.RepositoryAccess.EntryInfo[],System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Add entries to an existing freeze
            </summary>
            <param name="entryInfos">The entries that will be frozen.</param>
            <param name="freezeId">The ID of the freeze object that the entries shall be added to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Unfreeze(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes the freeze with the specified freezeid on an entry.
            </summary>
            <param name="entryId">The ID of the entry that will be remove from the freeze.</param>
            <param name="freezeId">The ID of the freeze object that the entry shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Unfreeze(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes entries from a freeze.
            </summary>
            <param name="entryId">The ID of the entry that will be remove from the freeze.</param>
            <param name="reason">The freeze reason of the freeze object that the entry shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Unfreeze(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes all freezes on an entry.
            </summary>
            <param name="entryId">The ID of the entry to remove all freezes from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Unfreeze(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes all freezes on an entry.
            </summary>
            <param name="entryPath">The path to the entry to remove all freezes from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.UnfreezeMultiEntries(System.Int32[],System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes entries from a freeze.
            </summary>
            <param name="entryIds">The ID of the entries that will be remove from the freeze.</param>
            <param name="reason">The freeze reason of the freeze that the entries shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.UnfreezeMultiEntries(Laserfiche.RepositoryAccess.EntryInfo[],System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes entries from a freeze.
            </summary>
            <param name="entryInfos">The entries that will be removed from freeze.</param>
            <param name="reason">The freeze reason of the freeze that the entries shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.UnfreezeMultiEntries(System.Int32[],System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes entries from a freeze.
            </summary>
            <param name="entryIds">The entries that will be removed from freeze.</param>
            <param name="freezeId">The ID of the freeze object that the entries shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.UnfreezeMultiEntries(Laserfiche.RepositoryAccess.EntryInfo[],System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes entries from a freeze.
            </summary>
            <param name="entryInfos">The entries that will be remove from the freeze.</param>
            <param name="freezeId">The ID of the freeze object that the entries shall be removed from.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetFreezes(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about all the active freezes on the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return freeze information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FreezeCollection</c> instance which contains a collection
            of <c>FreezeInfo</c> instances which represent the active freezes on the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetDirectFreezes(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about all the direct freezes on the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return freeze information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FreezeCollection</c> instance which contains a collection
            of <c>FreezeInfo</c> instances which represent the active freezes on the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetFreezes(System.Int32,Laserfiche.RepositoryAccess.Session,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Laserfiche.RepositoryAccess.Records.FrozenEntry}}@)">
            <summary>
            Returns information about all the active freezes on the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return freeze information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <param name="coveredEntries">An out parameter to list all the covered root frozen entry that
            contains the specified entry in each freeze. The first integer in Tuple indicate the freeze id, 
            list of <c>FrozenEntry</c> list all the root frozen entries that contain the specified entry.</param>
            <returns>A <c>FreezeCollection</c> instance which contains a collection
            of <c>FreezeInfo</c> instances which represent the active freezes on the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetFreezes(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about all the active freezes on the specified entry.
            </summary>
            <param name="entryPath">The path to the entry to return freeze information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FreezeCollection</c> instance which contains a collection
            of <c>FreezeInfo</c> instances which represent the active freezes on the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetFreezes(System.String,Laserfiche.RepositoryAccess.Session,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Laserfiche.RepositoryAccess.Records.FrozenEntry}}@)">
            <summary>
            Returns information about all the active freezes on the specified entry.
            </summary>
            <param name="entryPath">The path to the entry to return freeze information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <param name="coveredEntries">An out parameter to list all the covered root frozen entry that
            contains the specified entry in each freeze. The first integer in Tuple indicate the freeze id, 
            list of <c>FrozenEntry</c> list all the root frozen entries that contain the specified entry.</param>
            <returns>A <c>FreezeCollection</c> instance which contains a collection
            of <c>FreezeInfo</c> instances which represent the active freezes on the
            specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>FreezeInfo</c> instance which describes an existing Laserfiche
            records management freeze definition.
            </summary>
            <param name="freezeId">The ID of the Laserfiche records management freeze
            definition to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>freezeInfo</c> instance which represents the freeze definition
            with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>FreezeInfo</c> instance which describes an existing Laserfiche
            records management freeze definition.
            </summary>
            <param name="freezeReason">The freeze reason of the Laserfiche records management freeze
            definition to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>freezeInfo</c> instance which represents the freeze definition
            with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Create(Laserfiche.RepositoryAccess.Records.FreezeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new Laserfiche records management freeze definition.
            </summary>
            <param name="info">An <c>FreezeInfo</c> instance which specifies the settings
            for the new freeze definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FreezeInfo</c> instance which represents the freeze
            definition that was created.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Update(System.Int32,Laserfiche.RepositoryAccess.Records.FreezeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management freeze object.
            </summary>
            <param name="freezeId">The ID of the Laserfiche records management freeze
            definition to update.</param>
            <param name="info">An <c>freezeInfo</c> instance which specifies the settings
            for the updated freeze definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Update(System.String,Laserfiche.RepositoryAccess.Records.FreezeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management freeze object.
            </summary>
            <param name="reason">The freeze reason of the Laserfiche records management freeze
            definition to update.</param>
            <param name="info">An <c>freezeInfo</c> instance which specifies the settings
            for the updated freeze definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management freeze definition from a repository.
            </summary>
            <param name="freezeId">The ID of the Laserfiche records management freeze
            definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management freeze definition from a repository.
            </summary>
            <param name="reason">The freeze reason of the Laserfiche records management freeze
            definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Freeze.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>FreezeInfoReader</c> instance which can be used to enumerate
            all of the Laserfiche records management freeze definitions in a repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>freezeInfoReader</c> instance which can be used to enumerate
            all of the Laserfiche records management freeze definitions in a repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.FreezeCollection">
            <summary>
            Represents a read-only collection of <c>FreezeInfo</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeCollection.CopyTo(Laserfiche.RepositoryAccess.Records.FreezeInfo[])">
            <summary>
            Copies the entire <c>FreezeInfo</c> collection to a compatible one-dimensional
            <c>System.Array</c>, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.Records.FreezeInfo[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>FreezeInfo</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the specified index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.FreezeInfo">
            <summary>
            Represents information about a Laserfiche records management freeze (also known as a "hold").
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the event has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.FreezeId">
            <summary>
            Gets the ID of the Laserfiche records management freeze definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.EntryIds">
            <summary>
            Gets the ID of the origin entry for the associated freeze.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.OriginEntryId">
            <summary>
            Gets the ID of the first frozen entry for the associated freeze (For compatibility purpose.).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.FreezeDate">
            <summary>
            Gets the freeze date of the first frozen entry for the associated freeze (For compatibility purpose.).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.Reason">
            <summary>
            Gets or sets the reason for the associated freeze.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.FreezeInfo.ExpectedEndDate">
            <summary>
            Gets the date of the expected end freeze.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.#ctor">
            <summary>
            Initializes an <c>FreezeInfo</c> instance representing a new Laserfiche records
            management freeze definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>FreezeInfo</c> instance representing a new Laserfiche records
            management freeze definition.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>FreezeInfo</c> instance representing a new Laserfiche records
            management freeze definition.
            </summary>
            <param name="freezeId"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.AddEntry(System.Int32)">
            <summary>
            Add an entry to the freeze.
            </summary>
            <param name="addEntryId">The entry Id that will be added to the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.AddEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Add an entry to the freeze.
            </summary>
            <param name="addEntryInfo">The <c>EntryInfo</c> that will be added to the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.AddEntries(System.Int32[])">
            <summary>
            Add multiple entries to the freeze.
            </summary>
            <param name="addEntryIds">The entry Ids that will be added to the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.AddEntries(Laserfiche.RepositoryAccess.EntryInfo[])">
            <summary>
            Add multiple entries to the freeze.
            </summary>
            <param name="addEntryInfos">The <c>EntryInfo</c>s that will be added to the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.DeleteEntry(System.Int32)">
            <summary>
            Delete an entry to the freeze.
            </summary>
            <param name="deleteEntryId">The entry Id that will be deleted from the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.DeleteEntries(System.Int32[])">
            <summary>
            Delete entries to the freeze.
            </summary>
            <param name="deleteEntryIds">The entry Ids that will be deleted from the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.DeleteEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Delete an entry to the freeze.
            </summary>
            <param name="deleteEntryInfo">The <c>EntryInfo</c> that will be deleted from the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.DeleteEntries(Laserfiche.RepositoryAccess.EntryInfo[])">
            <summary>
            Delete entries to the freeze.
            </summary>
            <param name="deleteEntryInfos">The <c>EntryInfo</c>s that will be deleted from the freeze.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.Save">
            <summary>
            Saves all pending changes to the Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.FreezeInfo.Delete">
            <summary>
            Marks the Laserfiche records management freeze definition represented
            by this instance for deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.Location">
            <summary>
            A collection of methods for creating and managing Laserfiche records management
            location definitions.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.Create(Laserfiche.RepositoryAccess.Records.LocationInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new Laserfiche records management location.
            </summary>
            <param name="info">A <c>LocationInfo</c> instance which describes the
            settings of the new location.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified location name conflicts with an existing
            location definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>LocationInfo</c> instance which represents the new
            records management location.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.Update(System.Int32,Laserfiche.RepositoryAccess.Records.LocationInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management location.
            </summary>
            <param name="locationId">The ID of the records management location to update.</param>
            <param name="info">A <c>LocationInfo</c> instance which describes the new
            settings for the location.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.Update(System.String,Laserfiche.RepositoryAccess.Records.LocationInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing Laserfiche records management location.
            </summary>
            <param name="locationName">The name of the records management location to update.</param>
            <param name="info">A <c>LocationInfo</c> instance which describes the new
            settings for the location.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management location from a repository.
            </summary>
            <param name="locationId">The ID of the records management location to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a Laserfiche records management location from a repository.
            </summary>
            <param name="locationName">The name of the records management location to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LocationInfo</c> instance which represents information about
            a specified Laserfiche records management location.
            </summary>
            <param name="locationId">The ID of the records management location to
            retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LocationInfo</c> instance which represents the specified
            Laserfiche records management location.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LocationInfo</c> instance which represents information about
            a specified Laserfiche records management location.
            </summary>
            <param name="locationName">The name of the records management location to
            retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LocationInfo</c> instance which represents the specified
            Laserfiche records management location.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LocationInfoReader</c> instance which can be used to enumerate
            information about all the records management locations in a repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LocationInfoReader</c> instance which can be used to enumerate
            information about all the records management locations in a repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified records management location.
            </summary>
            <param name="locationId">The ID of the records management location.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified records management location.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified records management location.
            </summary>
            <param name="locationId">The ID of the records management location.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified records management location.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified records management location.
            </summary>
            <param name="locationId">The ID of the records management location.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all records management locations.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all records management locations.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.Location.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all records management locations.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.LocationInfo">
            <summary>
            Represents a Laserfiche records management location definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Id">
            <summary>
            Gets the ID of the Laserfiche records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Name">
            <summary>
            Gets or sets the name of the Laserfiche records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the location has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Description">
            <summary>
            Gets or sets the description for the Laserfiche records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Address">
            <summary>
            Gets or sets the address property of the Laserfiche records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Phone1">
            <summary>
            Gets or sets the first phone number property of the Laserfiche
            records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Phone2">
            <summary>
            Gets or sets the second phone number property of the Laserfiche
            records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Fax">
            <summary>
            Gets or sets the fax number property of the Laserfiche records
            managment location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Contact1">
            <summary>
            Gets or sets the first contact name property of the Laserfiche records management
            location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Contact2">
            <summary>
            Gets or sets the second contact name property of the Laserfiche records
            management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Email1">
            <summary>
            Gets or sets the first contact email property of the Laserfiche records
            management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.LocationInfo.Email2">
            <summary>
            Gets or sets the second contact email property of the Laserfiche records
            management location.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.LocationInfo.#ctor">
            <summary>
            Initializes a <c>LocationInfo</c> instance for a new Laserfiche records
            management location.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.LocationInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>LocationInfo</c> instance for a new Laserfiche records
            management location.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.LocationInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            For Laserfiche internal use only.
            </summary>
            <param name="locId"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.LocationInfo.Delete">
            <summary>
            Marks the Laserfiche records management location definition represented
            by this instance for deletion when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.LocationInfoReader">
            <summary>
            Enumerates <c>LocationInfo</c> instances which represent Laserfiche records
            management location definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.DispositionState">
            <summary>
            Enumeration of possible records management disposition states.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Open">
            <summary>
            The record folder is open for filing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Closed">
            <summary>
            The record folder is closed for filing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.InRetention">
            <summary>
            The record or folder is cutoff and is in retention.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Transferred">
            <summary>
            The record or folder has been transferred from the current file area.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Eligible">
            <summary>
            The record or folder is eligible for final disposition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Partial">
            <summary>
            The record folder has been partially dispositioned.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.DispositionState.Final">
            <summary>
            The record or folder has been dispositioned.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.AltRetentionEvent">
            <summary>
            Information about an alternate disposition schedule event trigger that has
            been set on a record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.AltRetentionEvent.EventId">
            <summary>
            Gets the ID of the event definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.AltRetentionEvent.EntryId">
            <summary>
            Gets the event ID of the corresponding record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.AltRetentionEvent.TriggerDate">
            <summary>
            Gets the event trigger date.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.ReviewIntervalUnit">
            <summary>
            The time unit for interval-based vital record review schedules.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.ReviewIntervalUnit.NotApplicable">
            <summary>
            The vital record review schedule is not interval-based.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.ReviewIntervalUnit.Day">
            <summary>
            The interval is specified in number of days.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Records.ReviewIntervalUnit.Month">
            <summary>
            The interval is specified in number of months.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RecordFolderProperties">
            <summary>
            Represents the records management related properties of a Laserfiche
            records folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.RecordFolder">
            <summary>
            Gets the <c>FolderInfo</c> instance which represents the associated record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.ReviewCycleId">
            <summary>
            Gets or sets the ID of the calendar cycle to be used for the vital record
            review cycle of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.CutoffCriterionId">
            <summary>
            Gets or sets the ID of the cutoff criterion of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.DispositionScheduleId">
            <summary>
            Gets or sets the ID of the disposition schedule of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.ActiveDispositionScheduleId">
            <summary>
            Gets the ID of the active disposition schedule for the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.DispositionAuthority">
            <summary>
            Gets or sets the disposition authority name for the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.FilingDate">
            <summary>
            Gets or sets the filing date for the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsClosed">
            <summary>
            Gets or sets the closed status of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsPermanent">
            <summary>
            Gets or sets the permanent status of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.TriggerDate">
            <summary>
            Gets or sets the alternate disposition schedule trigger date for the
            represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.TransferDates">
            <summary>
            Gets a collection of <c>TransferDate</c> instances representing information
            about the transfer operations which have been confirmed on the folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.EntryId">
            <summary>
            Gets the entry ID of the corresponding folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.LocationId">
            <summary>
            Gets the ID of the current records management location of the represented
            record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.DispositionState">
            <summary>
            Gets a member of <c>DispositionState</c> which represents the current disposition
            state of the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.CriticalEventDate">
            <summary>
            Gets the date of the critical event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsEligibleForCutoff">
            <summary>
            Gets a boolean indicating if the represented record folder is eligible for cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.CutoffEligibility">
            <summary>
            Gets the cutoff eligibility date, if the represented record folder is eligible for cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsCutoff">
            <summary>
            Gets a boolean indicating if the represented record folder is cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.CutoffDate">
            <summary>
            Gets the cutoff date, if the represented record folder is cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsEligibleForFinalDisposition">
            <summary>
            Gets a boolean indicating if the represented record folder is eligible for
            final disposition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.FinalDispositionEligibility">
            <summary>
            Gets the final disposition eligibility date, if the represented record
            folder is eligible for final disposition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.DispositionConfirmationDate">
            <summary>
            Gets the final disposition confirmation date, if final disposition was
            confirmed on the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsLastFinalDispositionActionProcessed">
            <summary>
            Gets a boolean indicating if the last final disposition action has been
            processed for the represented record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.ReviewInterval">
            <summary>
            Gets or sets the review interval for interval-based vital record review schedules.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.ReviewIntervalUnit">
            <summary>
            Gets or sets the interval time unit for interval-based vital record review schedules.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetEventDate(System.Int32,System.DateTime@)">
            <summary>
            Gets the date of the specified event on the represented record folder.
            </summary>
            <param name="eventId">The ID of the event to get the date of.</param>
            <param name="date">The set date of the specified event.</param>
            <returns>True if the specified event is set, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.SetEventDate(System.Int32,System.DateTime)">
            <summary>
            Sets the date of the specified event on the represented record folder.
            </summary>
            <param name="eventId">The ID of the event to set the date of.</param>
            <param name="date">The date of the event to set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.IsEventSet(System.Int32)">
            <summary>
            Determines if an event has a date set on the represented record folder.
            </summary>
            <param name="eventId">The ID of the event to check.</param>
            <returns>True if the specified event has a date set on the represented
            record folder, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.RemoveEvent(System.Int32)">
            <summary>
            Unsets a set event on the represented record folder.
            </summary>
            <param name="eventId">The ID of the event to unset on the represented record
            folder.</param>
            <returns>True if the specified event was previously set, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.UnsetTriggerDate">
            <summary>
            Unsets the trigger date on the represented record folder.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetReviewCycle">
            <summary>
            Returns a <c>CalendarCycleInfo</c> instance which represents the calendar
            cycle configured for the vital record review cycle for the represented
            record folder.
            </summary>
            <returns>A <c>CalendarCycleInfo</c> instance representing the vital record
            review cycle, or null if there is no configured vital record review cycle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetCutoffCriterion">
            <summary>
            Returns a <c>CutoffCriterionInfo</c> instance which represents the cutoff
            criterion assigned to the represented record folder.
            </summary>
            <returns>A <c>CutoffCriterionInfo</c> instance which represents the assigned
            cutoff criterion, or null if no cutoff criterion is assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetActiveDispositionSchedule">
            <summary>
            Returns a <c>DispositionScheduleInfo</c> instance which represents the active
            disposition schedule for the represented record folder.
            </summary>
            <returns>A <c>DispositionScheduleInfo</c> instance which represents the
            active disposition schedule, or null if there is no active schedule.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.AreRecordsEligibleForDisposition">
            <summary>
            Returns a boolean that indicates if there are any records in the folder
            which are eligible for disposition.
            </summary>
            <returns>A boolean that indicates if there are any records in the folder
            which are eligible for disposition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetRecordsEligibleForDisposition">
            <summary>
            Returns a list of entry IDs of records in the corresponding record folder
            which are eligible for disposition.
            </summary>
            <returns>A list of entry IDs of records in the corresponding record folder
            which are eligible for disposition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.AreRecordsEligibleForTransfer">
            <summary>
            Returns a boolean indicating if there are any records in the corresponding
            record folder which are eligible for transfer.
            </summary>
            <returns>A boolean indicating if there are any records in the corresponding
            record folder which are eligible for transfer.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetRecordsEligibleForTransfer">
            <summary>
            Returns a list of entry IDs of the records in the corresponding record
            folder which are eligible for transfer.
            </summary>
            <returns>A list of entry IDs of the records in the corresponding record
            folder which are eligible for transfer.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetIndependentRecords">
            <summary>
            Returns a list of entry IDs of the records in the corresponding record
            folder that have independently assigned disposition schedules or cutoffs.
            </summary>
            <returns>A list of entry IDs of the records in the corresponding record
            folder that have independently assigned disposition schedules or cutoffs.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.GetAltRetentionTriggerEvents">
            <summary>
            Returns a list of <c>AltRetentionEvent</c> instances which describe the
            events which have been set that can trigger an alternate disposition schedule
            for the corresponding record folder.
            </summary>
            <returns>A list of <c>AltRetentionEvent</c> instances which describe the
            events which have been set that can trigger an alternate disposition schedule
            for the corresponding record folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.Save">
            <summary>
            Saves pending changes to this instance to the Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordFolderProperties.Refresh(System.Boolean)">
            <summary>
            Retrieves records management data about the represented record folder
            from the Laserfiche repository and updates this instance's data to match.
            </summary>
            <param name="keepChanges">If true, local changes to this instance are kept,
            otherwise they are overwritten with data from the repository.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.RecordProperties">
            <summary>
            Represents the records management properties for a Laserfiche record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.Record">
            <summary>
            Gets a <c>DocumentInfo</c> instance which represents the associated record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.EntryId">
            <summary>
            Gets the entry ID of the associated record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.LastReviewDate">
            <summary>
            Gets the last vital record review date for the represented record,
            if such a date exists.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.LocationId">
            <summary>
            Gets the ID of the current Laserfiche records management location of
            the represented record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsTransferred">
            <summary>
            Gets a boolean which indicates if the record has been transferred
            from the current file area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.UnderRecordFolder">
            <summary>
            Gets a boolean which indicates if the record is under
            a record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.RecordFolderId">
            <summary>
            Gets the ID of the record folder that the represented record resides in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.Reviewer">
            <summary>
            Gets the name of the last reviewer's user account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.NextReviewDate">
            <summary>
            Gets the next scheduled vital record review date.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.FilingDate">
            <summary>
            Gets or sets the filing date for the represented record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsCutoffCriterionInherited">
            <summary>
            Get or set a boolean which indicates if the record inherits the
            cutoff criterion from its record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsDispositionScheduleInherited">
            <summary>
            Get or set a boolean which indicates if the record inherits the
            disposition schedule from its record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.DispositionScheduleId">
            <summary>
            Gets the ID of the disposition schedule that has been assigned to the
            corresponding record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.ActiveDispositionScheduleId">
            <summary>
            Gets the ID of the disposition schedule that is currently active for
            the corresponding record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsCutoff">
            <summary>
            Gets a boolean indicating if the record has been cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsEligibleForFinalDisposition">
            <summary>
            Gets a boolean indicating if the record is eligible for final disposition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.DispositionState">
            <summary>
            Gets a member of the <c>DispositionState</c> enumeration which indicates
            the disposition state of the record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsEligibleForCutoff">
            <summary>
            Gets a boolean that indicates if the corresponding record is eligible
            for cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.CutoffDate">
            <summary>
            Gets the date that the record was cutoff, if it is cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.CriticalEventDate">
            <summary>
            Gets the date of the critical event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsIndividuallyCutoff">
            <summary>
            Gets a boolean that indicates if the record was individually cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.FinalDispositionEligibility">
            <summary>
            Gets the date that the corresponding record becomes eligible for
            final disposition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.DispositionConfirmationDate">
            <summary>
            Gets the date when final disposition was confirmed on the
            corresponding record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.IsLastFinalDispositionActionProcessed">
            <summary>
            Gets a boolean indicating if the last final disposition action has been
            processed on the corresponding record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.CutoffEligibility">
            <summary>
            Gets the date when the corresponding record becomes eligible for cutoff.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.TriggerDate">
            <summary>
            Gets or sets the alternate disposition schedule trigger date.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Laserfiche.RepositoryAccess.Records.RecordProperties.CutoffCriterionId" -->
        <member name="P:Laserfiche.RepositoryAccess.Records.RecordProperties.TransferDates">
            <summary>
            Gets a collection of <c>TransferDate</c> instances representing information
            about the transfer operations which have been confirmed on the record.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.GetRecordFolderInfo">
            <summary>
            Returns a <c>FolderInfo</c> instance which represents the record folder that
            the represented record currently resides in.
            </summary>
            <returns>A <c>FolderInfo</c> instance which represents the record folder that
            the represented record currently resides in.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.UnsetLastReviewDate">
            <summary>
            Clears the last review date from the record.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.GetEventDate(System.Int32,System.DateTime@)">
            <summary>
            Gets the date of the specified event on the represented record.
            </summary>
            <param name="eventId">The ID of the event to get the date of.</param>
            <param name="date">The set date of the specified event.</param>
            <returns>True if the specified event is set, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.SetEventDate(System.Int32,System.DateTime)">
            <summary>
            Sets the date of the specified event on the represented record.
            </summary>
            <param name="eventId">The ID of the event to set the date of.</param>
            <param name="date">The date of the event to set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.IsEventSet(System.Int32)">
            <summary>
            Determines if an event has a date set on the represented record.
            </summary>
            <param name="eventId">The ID of the event to check.</param>
            <returns>True if the specified event has a date set on the represented
            record folder, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.RemoveEvent(System.Int32)">
            <summary>
            Unsets a set event on the represented record.
            </summary>
            <param name="eventId">The ID of the event to unset on the represented record.</param>
            <returns>True if the specified event was previously set, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.Refresh(System.Boolean)">
            <summary>
            Retrieves records management data about the represented record
            from the Laserfiche repository and updates this instance's data to match.
            </summary>
            <param name="keepChanges">If true, local changes to this instance are kept,
            otherwise they are overwritten with data from the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.RecordProperties.Save">
            <summary>
            Saves pending changes to this instance to the Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.TransferCollection">
            <summary>
            A read-only collection of <c>TransferInfo</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.TransferCollection.CopyTo(Laserfiche.RepositoryAccess.Records.TransferInfo[])">
            <summary>
            Copies the entire <c>TransferInfo</c> collection to a compatible one-dimensional
            <c>System.Array</c>, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Records.TransferCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.Records.TransferInfo[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>TransferInfo</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the specified index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.TransferDate">
            <summary>
            Represents a possible or actual records transfer date.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferDate.TransferId">
            <summary>
            Gets the ID of the associated disposition schedule transfer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferDate.TransferNumber">
            <summary>
            Gets the transfer number.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferDate.Date">
            <summary>
            Gets the date the transfer occurred.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferDate.EligibleDate">
            <summary>
            Gets the transfer eligibility date.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferDate.Transferred">
            <summary>
            Gets a boolean indicating if the transfer took place (true), or if this
            is just a projected transfer date (false).
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Records.TransferInfo">
            <summary>
            Represents an interim transfer definition in a larger disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.Id">
            <summary>
            Gets the ID of the represented interim transfer definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.Schedule">
            <summary>
            Gets the enclosing <c>DispositionScheduleInfo</c> instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.Description">
            <summary>
            Gets or sets the description for this transfer definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.Index">
            <summary>
            Gets the index of this transfer definition in the enclosing disposition schedule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.LocationId">
            <summary>
            Gets or sets the ID of the destination records management location.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.RetentionMonths">
            <summary>
            Gets or sets the retention period for the represented transfer definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Records.TransferInfo.Instructions">
            <summary>
            Gets or sets the retention instructions after a transfer corresponding
            to the represented definition is confirmed.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PropValue">
            <summary>
            Represents an object property value.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PropStat">
            <summary>
            Represents a collection of object property values and a status code.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PropResponse">
            <summary>
            A collection of object property query responses for a single resource.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RepositoryProperties">
            <summary>
            Settings to use when creating a new Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.Name">
            <summary>
            Gets or sets the name of the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.Aliases">
            <summary>
            Gets or sets aliases (alternate names) for the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.Dbms">
            <summary>
            Gets or sets the type of DBMS that will back the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.DatabaseServer">
            <summary>
            Gets or sets the name of the database server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.DatabaseName">
            <summary>
            Gets or sets the name of the database that will back the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SqlUserId">
            <summary>
            Gets or sets the user name to use when logging in to the DBMS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SqlPassword">
            <summary>
            Gets or sets the password to use when logging in to the DBMS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.RepositoryDirectory">
            <summary>
            Gets or sets the path to the repository directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.DatabaseDriverName">
            <summary>
            Gets or sets the name of the ODBC driver to use when connecting to the DBMS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.OracleDriver">
            <summary>
            Alternative name for the <c>DatabaseDriverName</c> property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.DatabaseDriverOptions">
            <summary>
            Gets or sets a list of ODBC driver parameters to append to the connection
            string when connecting to the DBMS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchUrl">
            <summary>
            Gets or sets the search engine's URL.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchPort">
            <summary>
            Gets or sets the search engine's listening port.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchIndexerUrl">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchControllerUrl">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchLanguage">
            <summary>
            Gets or sets the IETF language tag that specifies the default language
            of indexed documents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.SearchDirectory">
            <summary>
            Gets or sets the search catalog directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.VolumeName">
            <summary>
            Gets or sets the name of the initial Laserfiche volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.VolumePath">
            <summary>
            Gets or sets the fixed path of the initial Laserfiche volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.AuditLogPath">
            <summary>
            Gets or sets the audit log file path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.AuditLogArchiveDirectory">
            <summary>
            Gets or sets the audit log archive directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.IsCreateDatabase">
            <summary>
            Gets or sets a boolean indicating if the Laserfiche server should attempt to create
            the database if it doesn't exist.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.IsUpgradeCatalog">
            <summary>
            Gets or sets a boolean indicating if the search catalog should be upgraded.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.IsCatalogUseSSL">
            <summary>
            Gets or sets a boolean indicating if the search catalog should use SSL to connect to Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.AccountId">
            <summary>
            Gets or sets the ID of the account that the repository belongs to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.AcsAuthenticationData">
            <summary>
            Gets or sets the ACS authentication data used by the Laserfiche instance to
            connect to the Account Control System (ACS).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.CatalogDataNodeNumber">
            <summary>
            Gets or sets the catalog data node number.
            Default value is 1, which means a standalone catalog.
            The value will be ignored for older lfs.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.ClusterNode">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.ModelUuidOverride">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryProperties.ActivityNotificationQueueUrl">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CatalogConnectionState">
            <summary>
            An enumeration of LFFTS catalog states.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CatalogConnectionInfo">
            <summary>
            Represents the settings in a catalog that the Laserfiche Full-Text Search Engine (LFFTS)
            uses when it connects to a Laserfiche server instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.LFSName">
            <summary>
            Gets the host name of the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.LFSPort">
            <summary>
            Gets the listening TCP port number of the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.RepositoryUuid">
            <summary>
            Gets the UUID of the indexed Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.CatalogId">
            <summary>
            Gets the catalog ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.CatalogName">
            <summary>
            Gets the name of the catalog.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.State">
            <summary>
            Gets the current state of the catalog.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.LFSReturnError">
            <summary>
            Gets the last error code returned by the Laserfiche server to LFFTS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.LFSReturnMessage">
            <summary>
            Gets the error message for the last error code returned by the Laserfiche server.
            </summary>
            <seealso cref="P:Laserfiche.RepositoryAccess.CatalogConnectionInfo.LFSReturnError"/>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RankedSearchHit">
            <summary>
            Stores data for a ranked search result entry hit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.EntryId">
            <summary>
            Gets or sets the entry ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.Name">
            <summary>
            Gets or sets the entry name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.EntryType">
            <summary>
            Gets or sets a member of the <c>EntryType</c> enumeration representing the entry type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.TemplateId">
            <summary>
            Gets or sets the assigned template ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.LinkTo">
            <summary>
            Gets or sets the shortcut's target ID, for shortcuts.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.EntryFlags">
            <summary>
            Gets or sets the assigned Laserfiche entry flags.  This is a system property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.VolumeId">
            <summary>
            Gets or sets the ID of the volume the entry resides on or is linked to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.TemplateColor">
            <summary>
            Gets or sets the color of the assigned template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.PageCount">
            <summary>
            Gets or sets the page count.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.HasText">
            <summary>
            Gets or sets whether or not there are text pages in the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.LastModifiedTimeUtc">
            <summary>
            Gets or sets the last modification date, in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.ContextHitCount">
            <summary>
            Gets or sets the total number of context hits.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.FirstContextHit">
            <summary>
            Gets or sets a reference to a <c>ContextHit</c> instance representing
            the first context hit for the entry, if one is available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.Score">
            <summary>
            Gets or sets the score of the entry hit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.SummaryText">
            <summary>
            Gets or sets the summary of the entry hit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RankedSearchHit.SummaryHighlights">
            <summary>
            Gets or sets the offsets of the highlights in the summary.
            First element of each tuple is the offset, second one is length.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchPlan">
            <summary>
            Collection of static methods for managing Laserfiche search plans.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.Create(Laserfiche.RepositoryAccess.SearchPlanInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Adds a new search plan to the search plan library in the current
            Laserfiche repository.
            </summary>
            <param name="info">A <c>SearchPlanInfo</c> instance representing the
            search plan to add.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SearchPlanInfo</c> instance representing the search
            plan that was added to the search plan library.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.Update(System.Int32,Laserfiche.RepositoryAccess.SearchPlanInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition of a search plan in the current repository's
            search plan library.
            </summary>
            <param name="searchPlanId">The ID of the existing search plan to update.</param>
            <param name="info">A <c>SearchPlanInfo</c> instance representing the
            new data for the search plan.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified search plan from the search plan library in the
            current repository.
            </summary>
            <param name="searchPlanId">The ID of the search plan to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified search plan from the search plan library in the
            current repository.
            </summary>
            <param name="searchPlanName">The name of the search plan to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>SearchPlanInfo</c> instance which describes the specified
            search plan in the current repository's search plan library.
            </summary>
            <param name="searchPlanId">The ID of the search plan to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SearchPlanInfo</c> instance which describes the specified
            search plan in the current repository's search plan library.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>SearchPlanInfo</c> instance which describes the specified
            search plan in the current repository's search plan library.
            </summary>
            <param name="searchPlanName">The name of the search plan to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SearchPlanInfo</c> instance which describes the specified
            search plan in the current repository's search plan library.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlan.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>SearchPlanInfoReader</c> instance which can be used to enumerate
            all of the search plans stored in the current repository's search plan
            library.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SearchPlanInfoReader</c> instance which can be used to enumerate
            all of the search plans stored in the current repository's search plan
            library.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchPlanInfo">
            <summary>
            Represents a Laserfiche search plan object in a search plan library.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchPlanInfo.Id">
            <summary>
            Gets the ID of the search plan.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchPlanInfo.Name">
            <summary>
            Gets or sets the name of the search plan.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchPlanInfo.SearchQuery">
            <summary>
            Gets or sets the search query string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchPlanInfo.IsDisabled">
            <summary>
            Gets or sets a boolean that indicates if the represented plan is disabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchPlanInfo.ExecutionPlan">
            <summary>
            Gets or sets the execution plan.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlanInfo.#ctor">
            <summary>
            Initializes a <c>SearchPlanInfo</c> instance with no query or plan.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlanInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>SearchPlanInfo</c> instance with no query or plan.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchPlanInfo.Delete">
            <summary>
            Marks the represented search plan for deletion when changes are saved to
            Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchPlanInfoReader">
            <summary>
            Provides the ability to enumerate <c>SearchPlanInfo</c> instances
            representing the specified set of Laserfiche search plans.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchTrace">
            <summary>
            A collection of static methods for managing search traces.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchTrace.TraceSession(System.Int32,Laserfiche.RepositoryAccess.Server,System.String)">
            <summary>
            Turn search trace on for one session. Requires system admin privilege.
            </summary>
            <param name="sessionId">The session id of the session to turn the trace on. </param>
            <param name="server">A Laserfiche server instance for the target server.</param>
            <param name="tracepath">The directory path that search trace will be created at.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchTrace.StopTraceSession(System.Int32,Laserfiche.RepositoryAccess.Server)">
            <summary>
            Turn search trace off for one session. Requires system admin privilege.
            </summary>
            <param name="sessionId">The session id of the session to turn the trace off. </param>
            <param name="server">A Laserfiche server instance for the target server.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchTrace.TraceAll(Laserfiche.RepositoryAccess.Server,System.String)">
            <summary>
            Turn search trace on for all sessions. Requires system admin privilege.
            </summary>
            <param name="server">A Laserfiche server instance for the target server.</param>
            <param name="tracepath">The directory path that search trace will be created at.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchTrace.StopTraceAll(Laserfiche.RepositoryAccess.Server)">
            <summary>
            Turn search trace off for all sessions. Requires system admin privilege.
            </summary>
            <param name="server">A Laserfiche server instance for the target server.</param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Thesaurus">
            <summary>
            Represents a single entry of thesaurus.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ThesaurusConfiguration">
            <summary>
            Represents the thesaurus configuration for a
            Laserfiche Full-Text Search Engine catalog.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.#ctor(Laserfiche.RepositoryAccess.Session,System.Boolean)">
            <summary>
            Initializes a <c>ThesaurusConfiguration</c> instance specified <c>Session</c>.
            </summary>
            <param name="session">The Laserfiche session.</param>
            <param name="refresh">Specify whether the object should call Refresh after initialization.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ThesaurusConfiguration.Session">
            <summary>
            Gets the <c>Session</c> instance associated with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ThesaurusConfiguration.IsConnected">
            <summary>
            Gets a boolean indicating if this instance has a connection to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ThesaurusConfiguration.ThesaurusMap">
            <summary>
            Gets the map containing configured thesauruses. 
            Use the pair of Thesaurus.Key and Thesaurus.Synonym as key.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ThesaurusConfiguration.ThesaurusCount">
            <summary>
            Gets a count of the number of configured thesauruses.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.AddThesaurus(Laserfiche.RepositoryAccess.Thesaurus)">
            <summary>
            Adds a new thesaurus to the thesaurus map.
            </summary>
            <param name="inputThesaurus">A string representing the thesaurus.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.AddThesaurus(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.Thesaurus})">
            <summary>
            Adds a collection of thesauruses to the thesaurus map.
            </summary>
            <param name="inputThesauruses">A collection of Thesaurus instances representing the new
            thesauruses to add.</param>
            <returns>A count of the number of thesauruses added to the map.  
            Enyries with the same Key-Synonym pair will be overwritten. </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.RemoveThesaurus(System.String,System.String)">
            <summary>
            Removes a thesaurus from the thesaurus map.
            </summary>
            <param name="key">A string representing the Key of the thesaurus tp remove. </param>
            <param name="synonym">A string representing the Synonym of the thesaurus tp remove.</param>
            <returns>True if the specified thesaurus was removed from the thesaurus map,
            false if the thesaurus was not found in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.ClearThesaurus">
            <summary>
            Clears the thesaurus map so that it contains no thesaurus at all.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.Refresh">
            <summary>
            Refreshes the thesaurus map managed by this instance by reading from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.GetBuiltInThesaurus">
            <summary>
            Get the built-in thesaurus.
            </summary>
            <returns> Gets the map containing built-in thesauruses. 
            Use the pair of Thesaurus.Key and Thesaurus.Synonym as key.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.ImportBuiltInThesaurus">
            <summary>
            Load the built-in thesaurus for the catalog.
            ImportBuiltInThesarurus removes all the built-in type thesaurus, 
            add built-in thesaurus excepting those conflicted with user-defined type thesaurus.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.DisableBuiltInThesaurus">
            <summary>
            Unload the built-in thesaurus for the catalog.
            user-defined type thesaurus won't be changed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ThesaurusConfiguration.Save">
            <summary>
            Saves the thesaurus map maintained by this instance to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SecureLaserficheObject">
            <summary>
            Base class for classes that represent securable Laserfiche entities; i.e.,
            those that can have an access control list (ACL) assigned.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader">
            <summary>
            Represents the information in the header used by encrypted Laserfiche briefcases.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader.MagicNumber">
            <summary>
            Gets the first four bytes of the header as a little endian integer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader.VersionMajor">
            <summary>
            Gets the major version number stored in the header.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader.VersionMinor">
            <summary>
            Gets the minor version number stored in the header.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader.IV">
            <summary>
            Gets the encryption initialization vector.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EncryptedBriefcaseHeader.XmlLength">
            <summary>
            Gets the length of the XML document following the header, in bytes.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseTrailerType">
            <summary>
            An enumeration of Laserfiche briefcase trailer types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTrailerType.Hash">
            <summary>
            A trailer which stores information about the computed digest (hash) of the
            briefcase.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTrailerType.Signature">
            <summary>
            A trailer which stores a digital signature of the briefcase.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseReader">
            <summary>
            Implements the ability to decrypt encrypted Laserfiche briefcases and to verify
            digital signatures in briefcases.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.IsOpen">
            <summary>
            Gets a boolean indicating if a briefcase file is opened or not.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.HashMethod">
            <summary>
            Gets a string representation of the hash algorithm used, if any.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.IsEncrypted">
            <summary>
            Gets a boolean indicating if the briefcase is encrypted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.IsReadyForSigning">
            <summary>
            Gets a boolean indicating if the briefcase is ready to be digitally signed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.TrailerHash">
            <summary>
            Gets the hash stored in the trailer containing the briefcase hash.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.CalculatedHash">
            <summary>
            Gets the calculated hash of the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.TrailerSignatures">
            <summary>
            Gets a list of briefcase signature trailers.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseReader.EncryptedBriefcaseHeader">
            <summary>
            Gets the header for an encrypted briefcase, if present.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Open(System.String)">
            <summary>
            Opens a briefcase file.
            </summary>
            <param name="bfPath">The path to the file to open.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Open(System.IO.Stream)">
            <summary>
            Opens a briefcase file.
            </summary>
            <param name="bfStream">A <c>Stream</c> instance representing the briefcase file data.</param>
            <remarks>
            The supplied <c>Stream</c> instance will be closed when the <c>Close</c> method is called.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2,Laserfiche.RepositoryAccess.BriefcaseSignature)">
            <summary>
            Digitally signs the briefcase using a client-side certificate.
            </summary>
            <param name="certificate">The X.509 certificate containing a private key to
            digitally sign the briefcase with.</param>
            <param name="signature">An unsigned <c>BriefcaseSignature</c> instance containing the
            information to be stored in the signature.</param>
            <returns>A signed <c>BriefcaseSignature</c> instance representing the
            briefcase's digital signature.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Sign(System.Security.Cryptography.X509Certificates.X509Certificate2,Laserfiche.RepositoryAccess.BriefcaseSignature,Laserfiche.RepositoryAccess.ITimeStampAuthority)">
            <summary>
            Digitally signs the briefcase using a client-side certificate with a
            digital timestamp.
            </summary>
            <param name="certificate">The X.509 certificate containing a private key to
            digitally sign the briefcase with.</param>
            <param name="signature">An unsigned <c>BriefcaseSignature</c> instance containing the
            information to be stored in the signature.</param>
            <param name="timeStampAuthority"></param>
            <returns>A signed <c>BriefcaseSignature</c> instance representing the
            briefcase's digital signature.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Verify(Laserfiche.RepositoryAccess.SignatureVerificationFlags)">
            <summary>
            Attempts to verify all the digital signatures in the briefcase.
            </summary>
            <param name="flags">Members of the <c>SignatureVerificationFlags</c> enumeration
            specifying options that control how the verification will occur.</param>
            <returns>True if all signatures present are valid, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseReader.Close">
            <summary>
            Closes the briefcase file or stream, if opened.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseSignature">
            <summary>
            Represents a digital signature block of a Laserfiche briefcase file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.IsNew">
            <summary>
            Gets a boolean indicating if the briefcase signature has not been saved.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Image">
            <summary>
            Gets or sets the data for the signature block's graphical image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.ImageMimeType">
            <summary>
            Gets or sets the MIME type of the signature block's graphical image data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Comments">
            <summary>
            Gets or sets the comment string in the signature block.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Timestamp">
            <summary>
            Gets the timestamp of the digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Signer">
            <summary>
            Gets the security identifier (SID) of the user that signed the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Status">
            <summary>
            Gets a member of the <c>VerificationStatus</c> enumeration which indicates
            the verification status of the signature, as stored in this instance.
            </summary>
            <remarks>
            The value of this property is only meaningful after calling the <c>Verify</c>
            method.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseSignature.Certificates">
            <summary>
            Gets a collection of the X.509 certificates used to sign the briefcase or
            that are part of their certificate chains.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseSignature.Verify(Laserfiche.RepositoryAccess.SignatureVerificationFlags)">
            <summary>
            Verifies and returns the status of the briefcase's digital signature.
            </summary>
            <param name="flags">One or more members of <c>SignatureVerificationFlags</c>
            enumeration specifying options for how the verification will be processed.</param>
            <returns>A member of the <c>VerificationStatus</c> enumeration indicating the
            status of the digital signature.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentSignature">
            <summary>
            Collection of static methods for managing digital signatures of
            Laserfiche documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentSignature.RSA_SHA1">
            <summary>
            ChecksumAlgorithm identifier for RSA-SHA1.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentSignature.RSA_SHA256">
            <summary>
            ChecksumAlgorithm identifier for RSA-SHA256.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentSignature.RSA_SHA512">
            <summary>
            ChecksumAlgorithm identifier for RSA-SHA512.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentSignature.DSA_SHA1">
            <summary>
            ChecksumAlgorithm identifier for DSA-SHA1.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.Delete(System.Int32,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a document signature in the current Laserfiche repository.
            </summary>
            <param name="sigId">The ID of the signature to delete.</param>
            <param name="invalidateCounterSignatures">A boolean that indicates whether or not
            to invalidate any counter-signatures.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetSignatures(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets the collection of digital signatures on the specified document.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve digital
            signatures on.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DocumentSignatureInfoCollection</c> instance representing the
            collection of all the digital signatures on the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetTargetSignatures(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets the collection of digital signatures that are the targets of a specified
            counter-signature.
            </summary>
            <param name="sigId">The ID of a document's digital counter-signature in the
            repository.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of digital signatures that are the targets of the
            specified counter-signature.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetCounterSignatures(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets a collection of digitial signatures which act as counter-signatures and sign
            the specified digital signature.
            </summary>
            <param name="sigId">The ID of the target digital signature to return counter-signatures
            of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of digital signatures that counter-sign the specified
            signature.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetManifest(System.Int32,System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.DocumentSignatureInfo},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the document manifest for the specified Laserfiche document, suitable
            for later hashing and signing.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve the manifest
            of.</param>
            <param name="targetSigs">A collection of document digital signature definitions
            which will be the target signatures of any digital signature that signs the
            returned manifest.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The document manifest for the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetManifest(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the document manifest for the specified Laserfiche document, suitable
            for later hashing and signing.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve the manifest
            of.</param>
            <param name="targetSigIds">A collection of document digitial signature identifiers
            which specify the target signatures of any digital signature that signs the returned
            manifest.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The document manifest for the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetManifest(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.DocumentSignatureInfo},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the document manifest for the specified Laserfiche document version,
            suitable for later hashing and signing.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve the manifest
            of.</param>
            <param name="version">The version number of the versioned document.</param>
            <param name="targetSigs">A collection of document digital signature definitions
            which will be the target signatures of any digital signature that signs the
            returned manifest.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The document manifest for the specified document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignature.GetManifest(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the document manifest for the specified Laserfiche document version,
            suitable for later hashing and signing.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve the manifest
            of.</param>
            <param name="version">The version number of the versioned document.</param>
            <param name="targetSigIds">A collection of document digitial signature identifiers
            which specify the target signatures of any digital signature that signs the returned
            manifest.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The document manifest for the specified document version.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.HashHelper">
            <summary>
            This class is for internal use by Laserfiche components.  Callers should not use
            instances of this class directly.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfCertificateStore">
            <summary>
            Provides access to the X.509 certificate store in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>LfCertificateStore</c> which is connected
            to the session's Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfCertificateStore.Session">
            <summary>
            Gets the <c>Session</c> instance used to connect to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.GetAllCertificates">
            <summary>
            Gets a collection of all the X.509 certificates in the Laserfiche
            certificate store.
            </summary>
            <returns>An instance of <c>LfX509CertificateCollection</c> representing
            a collection of all the X.509 certificates in the Laserfiche
            certificate store.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.GetCertificates(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Gets a collection of X.509 certificates associated with a particular
            trustee identity in the Laserfiche certificate store.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance representing the
            security identifier (SID) of the trustee whose X.509 certificates will be
            retrieved.</param>
            <returns>An instance of <c>LfX509CertificateCollection</c> representing
            a collection of X.509 certificates associated with the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.GetCertificates(System.Security.Principal.SecurityIdentifier,System.Boolean)">
            <summary>
            Gets a collection of X.509 certificates associated with a particular
            trustee identity in the Laserfiche certificate store.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance representing the
            security identifier (SID) of the trustee whose X.509 certificates will be
            retrieved.</param>
            <param name="recurseGroups">A boolean indicating whether or not to recursively
            retrieve X.509 certificates associated with groups the specified trustee is a member
            of.</param>
            <returns>An instance of <c>LfX509CertificateCollection</c> representing
            a collection of X.509 certificates associated with the specified trustee,
            and optionally, its groups.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.GetCertificate(System.String)">
            <summary>
            Returns an <c>LfX509Certificate</c> instance representing the X.509 certificate
            in the Laserfiche certificate store with a matching thumbprint.
            </summary>
            <param name="thumbprint">The certificate's thumbprint (no spaces allowed).</param>
            <returns>An <c>LfX509Certificate</c> instance representing the X.509 certificate
            in the Laserfiche certificate store with a matching thumbprint, or a null reference
            if the certificate was not found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.RemoveCertificate(Laserfiche.RepositoryAccess.LfX509Certificate)">
            <summary>
            Removes an X.509 certificate from the Laserfiche certificate store.
            </summary>
            <param name="certificate">An <c>LfX509Certificate</c> instance identifying
            the X.509 certificate to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.RemoveCertificate(System.String)">
            <summary>
            Removes an X.509 certificate from the Laserfiche certificate store.
            </summary>
            <param name="thumbprint">The thumbprint of the certificate to
            remove (no spaces allowed).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfCertificateStore.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.SecurityIdentifier,System.Boolean)">
            <summary>
            Adds an X.509 certificate to the Laserfiche certificate store.
            </summary>
            <param name="certificate">An <c>X509Certificate2</c> instance representing
            the certificate to add.</param>
            <param name="sid">A <c>SecurityIdentifier</c> instance representing the
            security identifier (SID) of the trustee to associate the certificate with,
            or a null reference to omit any association.</param>
            <param name="overwriteExisting">A boolean, when true, indicating that an existing
            certificate with a matching thumbprint should be overwritten.</param>
            <returns>An <c>LfX509Certificate</c> instance representing the specified
            certificate in the Laserfiche certificate store.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SignatureVerificationFlags">
            <summary>
            Enumeration of flags which control digital signature verification.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SignatureVerificationFlags.None">
            <summary>
            No signature verification options specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SignatureVerificationFlags.CheckRecursively">
            <summary>
            Recursively verify target signatures when verifying counter-signatures.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SignatureVerificationFlags.VerifyCurrentVersion">
            <summary>
            Verify the current version of a document instead of the version
            recorded in the signature metadata.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SignatureVerificationFlags.CheckSignatureDateForExpiration">
            <summary>
            Check the expiration date of the certificate against the signature date rather
            than using the current date.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AsymmetricAlgorithmCategory">
            <summary>
            Enumeration of asymmetric encryption algorithms used for digital signatures.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AsymmetricAlgorithmCategory.None">
            <summary>
            No asymmetric algorithm category identified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AsymmetricAlgorithmCategory.Dsa">
            <summary>
            Digital Signature ChecksumAlgorithm (DSA); FIPS-186
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AsymmetricAlgorithmCategory.Rsa">
            <summary>
            RSA digital signature
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AsymmetricAlgorithmCategory.Ecdsa">
            <summary>
            Elliptic Curve Digital Signature ChecksumAlgorithm (ECDSA); ANS X9.62; FIPS-186-3
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentSignatureInfo">
            <summary>
            Represents a digital signature on a Laserfiche document.  For versioned
            documents, the signature is of a single version.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>DocumentSignatureInfo</c> instance representing a new digital
            signature for the specified document.
            </summary>
            <param name="entryId">The entry ID of the document to sign in the current
            repository.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.#ctor(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>DocumentSignatureInfo</c> instance representing a new digital
            signature for the specified document version.
            </summary>
            <param name="entryId">The entry ID of the document to sign in the current
            repository.</param>
            <param name="version">The version number of the document version to sign.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Id">
            <summary>
            Gets the ID of the represented digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.EntryId">
            <summary>
            Gets the ID of the associated Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Version">
            <summary>
            Gets the version number of the associated Laserfiche document version, or 0
            if no version is specified.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.KeyCategory">
            <summary>
            Gets the asymmetric algorithm key category used by the represented digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Method">
            <summary>
            Gets or sets the name of the cryptographic method (set of algorithms) used to
            create the represented digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Certificate">
            <summary>
            Gets or sets the <c>X509Certificate2</c> instance, representing the X.509 signing
            certificate, used by the digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.SigningCertificateThumbprint">
            <summary>
            Gets the thumbprint of the digital signature's signing X.509 certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.TargetSignatures">
            <summary>
            Gets or sets a list of target digital signatures, if this instance represents
            a counter-signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Image">
            <summary>
            Gets or sets the bitmap data for the image associated with the represented
            digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.ImageMimeType">
            <summary>
            Gets or sets the MIME type of the image associated with the represented digital
            signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.IsCounterSignature">
            <summary>
            Gets a boolean that indicates if the represented signature is a counter-signature
            which signs another signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Comments">
            <summary>
            Gets or sets comment text associated with the represented digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Signer">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance representing the security identifier (SID)
            of the signing trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Timestamp">
            <summary>
            Gets the date and time when the represented digital signature was created and
            saved to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Value">
            <summary>
            Gets or sets the raw binary value of the digital signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentSignatureInfo.PublicKey">
            <summary>
            Gets the raw binary value of the public key used to create the digital signature.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.GetDocumentManifest">
            <summary>
            Generates a document manifest of the Laserfiche document or version that the
            digital signature is associated with, including applicable target signatures.
            </summary>
            <returns>A document manifest of the Laserfiche document or version that the
            digital signature is associated with, including applicable target signatures.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Delete(System.Boolean)">
            <summary>
            Marks the represented digital signature for deletion from the Laserfiche repository
            next time this instance's changes are sent to Laserfiche.
            </summary>
            <param name="invalidateCounterSignatures">A boolean indicating if counter-signatures
            that reference this signature as a target are to be immediately invalidated.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.GetCounterSignatures">
            <summary>
            Returns a <c>DocumentSignatureInfoCollection</c> instance which represents
            the collection of counter-signatures that this signature signs.
            </summary>
            <returns>A <c>DocumentSignatureInfoCollection</c> instance which represents
            the collection of counter-signatures that this signature signs.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.ComputeHash">
            <summary>
            Computes and returns the hash value of the configured document manifest using
            the configured hash algorithm.
            </summary>
            <returns>The hash value of the configured document manifest using
            the configured hash algorithm.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.ComputeHash(System.String@)">
            <summary>
            Computes and returns the hash value of the configured document manifest using
            the configured hash algorithm.
            </summary>
            <param name="method">The cryptographic method used to generate the digital
            signature, which implies the hash algorithm used.</param>
            <returns>The hash value of the configured document manifest using
            the configured hash algorithm.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Verify(Laserfiche.RepositoryAccess.SignatureVerificationFlags)">
            <summary>
            Attempts to verify the validity of the digital signature on the associated
            Laserfiche document and returns the validity status.
            </summary>
            <param name="flags">Members of the <c>SignatureVerificationFlags</c> enumeration
            specifying options that control how the verification will occur.</param>
            <returns>True if the represented digital signature is valid, false if it is not.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentSignatureInfo.Verify(Laserfiche.RepositoryAccess.SignatureVerificationOptions)">
            <summary>
            Attempts to verify the validity of the digital signature on the associated
            Laserfiche document and returns the validity status.
            </summary>
            <param name="param">A <c>SignatureVerificationOptions</c> instance specifying
            options for how the verification will be processed.</param>
            <returns>A member of the <c>VerificationStatus</c> enumeration indicating
            the verification status of the digital signature.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentSignatureInfoCollection">
            <summary>
            Represents a collection of <c>DocumentSignatureInfo</c> instances.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfX509Certificate">
            <summary>
            Represents an X.509 certificate installed in the Laserfiche certificate store in
            a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfX509Certificate.Certificate">
            <summary>
            Gets the X.509 certificate.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfX509Certificate.AssociatedSid">
            <summary>
            Gets the security identifier (SID) of the associated trustee, or a null reference
            if there is none.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfX509CertificateCollection">
            <summary>
            Manages a collection of <c>LfX509Certificate</c> instances.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfX509CertificateCollection.Item(System.Int32)">
            <summary>
            Gets a reference to the <c>LfX509Certificate</c> instance at the
            specified index in the collection.
            </summary>
            <param name="index">The index of the <c>LfX509Certificate</c> instance to get.</param>
            <returns>A reference to the <c>LfX509Certificate</c> instance at the
            specified index in the collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfX509CertificateCollection.Add(Laserfiche.RepositoryAccess.LfX509Certificate)">
            <summary>
            Adds a <c>LfX509Certificate</c> instance to the collection.
            </summary>
            <param name="certificate">The <c>LfX509Certificate</c> instance to add.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo">
            <summary>
            Represents a LFQL external table registration in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.#ctor">
            <summary>
            Initializes an <c>LfExternalTableInfo</c> instance with a blank configuration.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            For internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="externalTableId"></param>
            <param name="session"></param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.LaserficheName">
            <summary>
            Gets or sets the name of the table as it is referred to in LFQL queries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.Id">
            <summary>
            Gets the ID of the represented registration in the current repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.Database">
            <summary>
            Gets or sets the name of the database recorded in the registration.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.Schema">
            <summary>
            Gets or sets the name of the schema recorded in the registration.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.Table">
            <summary>
            Gets or sets the name of the external database table recorded in the registration.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.Delete">
            <summary>
            Marks the represented external table registration for deletion.  Deletion will occur
            when changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTableInfo.GetColumns">
            <summary>
            Gets a list of column names.
            </summary>
            <returns>A list of column names</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfExternalTableInfoReader">
            <summary>
            Provides the ability to enumerate the specified Laserfiche external table
            references.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfClientFactory">
            <summary>
            Factory for common types in the <c>Laserfiche.RepositoryAccess.Data</c>
            namespace.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfClientFactory.CreateCommand">
            <summary>
            Returns a new instance of the <c>LfCommand</c> type.
            </summary>
            <returns>A new instance of <c>LfCommand</c>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfClientFactory.CreateConnection">
            <summary>
            Returns a new instance of the <c>LfConnection</c> type.
            </summary>
            <returns>A new instance of <c>LfConnection</c>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfClientFactory.CreateConnectionStringBuilder">
            <summary>
            Returns a new instance of the <c>LfConnectionStringBuilder</c> type.
            </summary>
            <returns>A new instance of <c>LfConnectionStringBuilder</c>.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfCommand">
            <summary>
            Represents a Laserfiche Query Language command which can be executed
            against a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfCommand.Connection">
            <summary>
            Gets or sets the <c>LfConnection</c> instance associated with this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfCommand.#ctor">
            <summary>
            Initializes an <c>LfCommand</c> object with an empty command text string
            and no connection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfCommand.#ctor(System.String)">
            <summary>
            Initializes an <c>LfCommand</c> object with the specified command text
            string and no connection.
            </summary>
            <param name="cmdText">The initial value of the <c>CommandText</c> property.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfCommand.#ctor(System.String,Laserfiche.RepositoryAccess.Data.LfConnection)">
            <summary>
            Initializes an <c>LfCommand</c> object with the specified command text
            string and connnection.
            </summary>
            <param name="cmdText">The initial value of the <c>CommandText</c> property.</param>
            <param name="connection">An <c>LfConnection</c> instance which specifies
            the connection to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfConnection">
            <summary>
            Represents a connection to Laserfiche which can be used to
            execute LFQL queries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnection.ApplicationName">
            <summary>
            Gets the application name that was set when logging in to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnection.IntegratedSecurity">
            <summary>
            Gets a boolean indicating if Windows authentication was used to
            log in to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnection.Session">
            <summary>
            Gets or sets the <c>Session</c> instance associated with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnection.IsSessionOwner">
            <summary>
            Gets or sets a boolean indicating if the associated <c>Session</c> instance
            will be closed when this instance is disposed of.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfConnection.#ctor">
            <summary>
            Initializes an <c>LfConnection</c> instance without an associated
            <c>Session</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfConnection.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>LfConnection</c> instance with the specified <c>Session</c>
            instance.
            </summary>
            <param name="session">The <c>Session</c> instance the new <c>LfConnection</c>
            instance will use when communicating with Laserfiche.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfConnection.#ctor(System.String)">
            <summary>
            Initializes an <c>LfConnection</c> instance that will create a new session
            using the settings specified by a connection string.
            </summary>
            <param name="connectionString">A connection string that specifies the
            settings to use when connecting to Laserfiche.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfColumnMetadata">
            <summary>
            Contains metadata about a LfColumn.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.IsLong">
            <summary>
            Gets or sets a value indicating whether this column can be long.
            </summary>
            <remarks>See DBCOLUMNFLAGS_ISLONG at: http://msdn.microsoft.com/en-us/library/windows/desktop/ms722704(v=vs.85).aspx</remarks>
            <value>
              <c>true</c> if this instance is long; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.CLRType">
            <summary>
            Gets or sets the type of the CLR.
            </summary>
            <value>
            The type of the CLR.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.LFType">
            <summary>
            Gets or sets the type of the LF.
            </summary>
            <value>
            The type of the LF.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>
            The name of the column.
            </value>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.Create(System.String,System.Int32)">
            <summary>
            Creates a column metadata item for the given column name and columnType.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="columnType">Type of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.GetColumnSize(System.String,Laserfiche.RepositoryAccess.Data.QueryColDataType)">
            <summary>
            Gets the size of the column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.GetColumnType(Laserfiche.RepositoryAccess.Data.QueryColDataType)">
            <summary>
            Gets the type of the column.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfColumnMetadata.GetColumnIsLong(Laserfiche.RepositoryAccess.Data.QueryColDataType)">
            <summary>
            Gets the column is long.
            </summary>
            <param name="type">The type.</param>
            <returns>True if the column can contain a large amount of data, otherwise false.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder">
            <summary>
            A type-safe Laserfiche connection string builder.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.#ctor">
            <summary>
            Initializes an <c>LfConnectionStringBuilder</c> instance with
            no properties set.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes an <c>LfConnectionStringBuilder</c> instance from the
            specified connection string.
            </summary>
            <param name="connectionString">The Laserfiche connection string to parse.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.ApplicationName">
            <summary>
            Gets or sets the client application name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.ConnectTimeout">
            <summary>
            Gets or sets the connection timeout, in seconds.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.DataSource">
            <summary>
            Gets or sets the data source (i.e., Laserfiche server name).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.Database">
            <summary>
            Gets or sets the database name (i.e., Laserfiche repository name).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.IntegratedSecurity">
            <summary>
            Gets or sets a boolean indicating if integrated security (i.e., Windows
            authentication) will be used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.UserID">
            <summary>
            Gets or sets the user name used to log in to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfConnectionStringBuilder.Password">
            <summary>
            Gets or sets the password used to log in to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfDataReader">
            <summary>
            Reads a forward-only stream of rows from a Laserfiche query cursor.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfDataReader.Status">
            <summary>
            Gets the <c>LongOperation</c> which represents the status of the
            corresponding LFQL query being executed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetBlob(System.Int32)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the data
            for a BLOB column for the current row.
            </summary>
            <param name="ordinal">The ordinal of the BLOB column to read.</param>
            <returns>A <c>Stream</c> instance which can be used to read the data
            for a BLOB column for the current row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetBlobExtension(System.Int32)">
            <summary>
            Gets the extension associated with the specified BLOB value.
            </summary>
            <param name="ordinal">The ordinal of the BLOB column to get the extension
            of.</param>
            <returns>The extension associated with the specified BLOB value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetBlobMimeType(System.Int32)">
            <summary>
            Get the MIME type associated with the specified BLOB value.
            </summary>
            <param name="ordinal">The ordinal of the BLOB column to get the MIME type
            of.</param>
            <returns>The MIME type associated with the specified BLOB value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetBlobType(System.Int32)">
            <summary>
            Gets the type of data that the specified BLOB represents, such as an
            electronic document, image, page thumbnail, etc.
            </summary>
            <param name="ordinal">The ordinal of the BLOB column to get the data
            type of.</param>
            <returns>The name of the underlying data type, one of: "edoc", "image",
            "thumbnail", "location."  Other values are possible.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetEntryPath(System.Int32)">
            <summary>
            Returns the data at the specified column in the current row formatted
            as a Laserfiche entry path string.
            </summary>
            <param name="ordinal">The ordinal of the column to retrieve the data of.</param>
            <returns>The data at the specified column in the current row formatted
            as a Laserfiche entry path string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetClob(System.Int32)">
            <summary>
            Returns a <c>TextReader</c> instance which can be used to read the
            value of the specified CLOB column for the current row.
            </summary>
            <param name="ordinal">The ordinal of the CLOB column to read.</param>
            <returns>A <c>TextReader</c> instance which can be used to read the
            value of the specified CLOB column for the current row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDataReader.GetContextHits(System.Int32,System.Int32)">
            <summary>
            Returns a <c>ContextHitListing</c> instance which provides access to
            full-text search context hits in a document which are logically contained
            in the specified column in the current row.
            </summary>
            <param name="ordinal">The column number containing the context hits to
            retrieve.</param>
            <param name="preload">The number of context hit rows to pre-load.</param>
            <returns>A <c>ContextHitListing</c> instance which provides access to
            full-text search context hits in a document which are logically contained
            in the specified column in the current row.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfDbType">
            <summary>
            Enumeration of Laserfiche query language value types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.String">
            <summary>
            Represents a string of Unicode characters; maps to <c>System.String</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.TimeStamp">
            <summary>
            Represents a date and time; maps to <c>System.DateTime</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.Int32">
            <summary>
            Represents a 32-bit signed integer; maps to <c>System.Int32</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.Decimal">
            <summary>
            Represents a base-10 number with an optional fractional portion;
            maps to <c>System.Decimal</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.UInt32">
            <summary>
            Represents a 32-bit unsigned integer; maps to <c>System.UInt32</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Data.LfDbType.Int64">
            <summary>
            Represents a 64-bit signed integer; maps to <c>System.Int64</c>.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfDbParameter">
            <summary>
            Represents a parameter to a <c>Laserfiche.RepositoryAccess.Data.LfCommand</c>,
            that is, a Laserfiche query parameter.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameter.#ctor">
            <summary>
            Initializes an <c>LfDbParameter</c> instance with an empty name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameter.#ctor(System.String)">
            <summary>
            Initializes an <c>LfDbParameter</c> instance with the specified name.
            </summary>
            <param name="parameterName">The name of the represented query parameter.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfDbParameter.LfDbType">
            <summary>
            Gets or sets the <c>LfDbType</c> associated with the represented parameter.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection">
            <summary>
            Represents a collection of <c>LfDbParameter</c> instances.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.Capacity">
            <summary>
            Gets the maximum number of elements that this collection can contain, or -1
            if there is no capacity limit.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.Add(System.String,Laserfiche.RepositoryAccess.Data.LfDbType,System.Object)">
            <summary>
            Adds a new parameter to the collection.
            </summary>
            <param name="parameterName">The name of the new parameter.</param>
            <param name="type">A member of the <c>LfDbType</c> enumeration
            specifying the type of the parameter.</param>
            <param name="parameterValue">The value of the parameter.</param>
            <returns>The index of the new parameter.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.Add(Laserfiche.RepositoryAccess.Data.LfDbParameter)">
            <summary>
            Adds a new parameter to the collection.
            </summary>
            <param name="parameter">An <c>LfDbParameter</c> instance which represents
            the parameter to add to the collection.</param>
            <returns>The index of the new parameter.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.CopyTo(Laserfiche.RepositoryAccess.Data.LfDbParameter[])">
            <summary>
            Copies the contents of the collection to a one-dimensional
            <c>LfDbParameter</c> array.
            </summary>
            <param name="array">A reference to the destination array that collection's
            contents will be copied to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.CopyTo(Laserfiche.RepositoryAccess.Data.LfDbParameter[],System.Int32)">
            <summary>
            Copies the contents of the collection to a one-dimensional
            <c>LfDbParameter</c> array.
            </summary>
            <param name="array">A reference to the destination array that collection's
            contents will be copied to.</param>
            <param name="arrayIndex">The 0-based index in the destination array which to
            begin assigning values.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.Data.LfDbParameter[],System.Int32,System.Int32)">
            <summary>
            Copies the contents of the collection to a one-dimensional
            <c>LfDbParameter</c> array.
            </summary>
            <param name="index">The 0-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">A reference to the destination array that collection's
            contents will be copied to.</param>
            <param name="arrayIndex">The 0-based index in the destination array which to
            begin assigning values.</param>
            <param name="count">The number of elements to copy.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfDbParameterCollection.Remove(Laserfiche.RepositoryAccess.Data.LfDbParameter)">
            <summary>
            Removes the specified database parameter from the collection.
            </summary>
            <param name="item">An <c>LfDbParameter</c> instance indicating the
            parameter to remove.</param>
            <returns>True if the specified parameter was found and removed, false
            otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Data.LfExternalTable">
            <summary>
            Provides the ability to register and unregister external database tables
            for querying from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.Register(System.String,System.String,System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Registers an external database table for use in Laserfiche Query Language
            queries.
            </summary>
            <param name="lfTable">The alias of the table in Laserfiche.</param>
            <param name="externalDB">The name of the external database.</param>
            <param name="externalSchema">The name of the external schema.</param>
            <param name="externalTable">The name of the external table.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.Unregister(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unregisters a previously registered external database table.
            </summary>
            <param name="lfTable">The external table's registered alias.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.Register(Laserfiche.RepositoryAccess.Data.LfExternalTableInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Registers an external database table for use in Laserfiche Query Language
            queries.
            </summary>
            <param name="lfExternalDb">An <c>LfExternableTableInfo</c> instance specifying
            the registration settings.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LfExternalTableInfo</c> instance representing the registered
            external table.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.UpdateRegistration(System.Int32,Laserfiche.RepositoryAccess.Data.LfExternalTableInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing external table registration in the current repository.
            </summary>
            <param name="id">The ID of the external table registration to update.</param>
            <param name="info">An <c>LfExternalTableInfo</c> instance specifying the
            new registration settings.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.UpdateRegistration(System.String,Laserfiche.RepositoryAccess.Data.LfExternalTableInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing external table registration in the current repository.
            </summary>
            <param name="lfTable">The name of the external table registration to update.</param>
            <param name="info">An <c>LfExternalTableInfo</c> instance specifying the
            new registration settings.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about the specified external table registration.
            </summary>
            <param name="id">The ID of an external table registration in the current
            repository.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LfExternalTableInfo</c> instance containing the external
            table registration settings for the specified table.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about the specified external table registration.
            </summary>
            <param name="lfTable">The name of the external table registration in
            the current repository to return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LfExternalTableInfo</c> instance containing the external
            table registration settings for the specified table.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Data.LfExternalTable.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>LfExternalTableInfoReader</c> instance which can be used to
            enumerate all of the external table registrations in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LfExternalTableInfoReader</c> instance which can be used to
            enumerate all of the external table registrations in the current repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLockListing">
            <summary>
            Represents a listing of entry lock objects in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListing.Settings">
            <summary>
            Gets an <c>EntryLockListingSettings</c> instance which specifies the settings used
            for the entry lock listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetPersistentLockFromRow(System.Int32)">
            <summary>
            Returns a <c>PersistentLock</c> instance which represents the persistent lock
            described by the specified row.
            </summary>
            <param name="rowIndex">The 1-based row index to return the corresponding
            <c>PersistentLock</c> instance for.</param>
            <returns>A <c>PersistentLock</c> instance which represents the persistent lock
            described by the specified row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetRow(System.Int32)">
            <summary>
            Returns a <c>EntryLockListingRow</c> instance which contains the data for
            a single row in the entry lock listing.
            </summary>
            <param name="rowIndex">The 1-based index of the row that the returned
            <c>EntryLockListingRow</c> instance shall represent.</param>
            <returns>A <c>EntryLockListingRow</c> instance which contains the data for
            a single row in the entry lock listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetRows(System.Int32,System.Int32)">
            <summary>
            Returns an array of <c>EntryLockListingRow</c> instances representing
            the specified contiguous set of rows in the entry lock listing.
            </summary>
            <param name="rowIndex">The 1-based index of the starting row in the listing
            to return.</param>
            <param name="windowSize">The maximum, and desired number of rows to return
            information about.</param>
            <returns>An array of <c>EntryLockListingRow</c> instances representing
            the specified contiguous set of rows in the entry lock listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetListing(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects in the current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetListing(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects owned by the specified user in the current
            Laserfiche repository.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a reference
            to the user that owns the persistent locks in the new listing.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects owned by the specified user in the current
            Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetListing(System.Int32,Laserfiche.RepositoryAccess.PersistentLockColumn,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects in the current Laserfiche repository.
            </summary>
            <param name="preload">The number of rows to preload in the listing.</param>
            <param name="sortColumn">A member of the <c>PersistentLockColumn</c> enumeration
            specifying which column to use as a sort key.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort column in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetListing(System.Security.Principal.IdentityReference,System.Int32,Laserfiche.RepositoryAccess.PersistentLockColumn,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects owned by the specified user in the current
            Laserfiche repository.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a reference
            to the user that owns the persistent locks in the new listing.</param>
            <param name="preload">The number of rows to preload in the listing.</param>
            <param name="sortColumn">A member of the <c>PersistentLockColumn</c> enumeration
            specifying which column to use as a sort key.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort column in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLockListing</c> instance representing a listing
            of all the persistent lock objects owned by the specified user in the current
            Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLockListing.GetListing(System.Int32,Laserfiche.RepositoryAccess.EntryLockListingSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new <c>EntryLockListing</c> instance representing a listing
            of all the entry lock objects matching the specified criteria in the
            current Laserfiche repository.
            </summary>
            <param name="preload">The number of rows to preload in the listing.</param>
            <param name="settings">An <c>EntryLockListingSettings</c> class specifying the
            settings to use for the listing.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLockListing</c> instance representing a listing
            of all the entry lock objects matching the specified criteria in the current
            Laserfiche repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PersistentLockColumn">
            <summary>
            An enumeration of the available persistent lock listing columns.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LockLifetimeScope">
            <summary>
            An enumeration of entry lock lifetime scopes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockLifetimeScope.Persistent">
            <summary>
            The lock is persistent and lasts until an unlock operation occurs or
            when the entry is deleted.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockLifetimeScope.Session">
            <summary>
            The lock is automatically released when the session that created the lock
            is terminated, or when the lock is removed by an unlock operation or
            when the entry is deleted.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLockListingRow">
            <summary>
            Represents the data of a single row in a persistent lock listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.EntryUuid">
            <summary>
            Gets the GUID of the entry of the corresponding entry lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.LockLifeTime">
            <summary>
            Gets the lifetime of the corresponding entry lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.CreationTimeAsString">
            <summary>
            Gets the date and time when the corresponding lock was created, in local time,
            formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.CreationTimeUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents when the corresponding lock
            was created in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.CreationTime">
            <summary>
            Gets a <c>DateTime</c> value which represents when the corresponding lock
            was created in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.Comment">
            <summary>
            Gets the comment associated with the corresponding lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.LockExtent">
            <summary>
            Gets the lock extent associated with the corresponding lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.Extension">
            <summary>
            Gets the extension associated with the corresponding document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.MimeType">
            <summary>
            Gets the electronic document MIME type associated with the corresponding
            document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.EntryId">
            <summary>
            Gets the ID of the corresponding entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.EntryName">
            <summary>
            Gets the name of the corresponding entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.EntryType">
            <summary>
            Gets the type of the corresponding entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.ParentPath">
            <summary>
            Gets the path to the parent entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.Path">
            <summary>
            Gets the path in the repository to the corresponding entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.Sid">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the
            security identifier (SID) of the user that created the corresponding
            lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingRow.LockToken">
            <summary>
            Gets the lock token for the corresponding lock.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLockListingSettings">
            <summary>
            Represents settings for an entry lock listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingSettings.IdentityReference">
            <summary>
            Gets or sets the identity of the user account that owns the locks in the listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingSettings.SortColumn">
            <summary>
            Gets or sets the column in the listing to sort the rows by.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingSettings.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingSettings.SessionId">
            <summary>
            Gets or sets the ID of the session that owns the locks in the listing.
            </summary>
            <remarks>
            Use a value of 0 to retrieve locks owned by all the sessions in the repository.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLockListingSettings.PersistentLocksOnly">
            <summary>
            Gets or sets a boolean that indicates only information about persistent locks
            should appear in the listing.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccessDeniedException">
            <summary>
            Represents an access denied error in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessDeniedException.#ctor">
            <summary>
            Initializes an <c>AccessDeniedException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessDeniedException.#ctor(System.Int32)">
            <summary>
            Initializes an <c>AccessDeniedException</c> instance with the specified
            error code.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessDeniedException.#ctor(System.String)">
            <summary>
            Initializes an <c>AccessDeniedException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessDeniedException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an <c>AccessDeniedException</c> instance with the specified error
            code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an <c>AccessDeniedException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Account">
            <summary>
            A collection of methods for creating and managing Laserfiche accounts.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Create(Laserfiche.RepositoryAccess.AccountInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a Laserfiche account using settings specified by an <c>AccountInfo</c>
            instance.
            </summary>
            <param name="info">An <c>AccountInfo</c> instance which specifies the settings
            to use for the new account.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified account name conflicts with an existing
            account definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>AccountInfo</c> instance which represents the new account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Update(System.Int32,Laserfiche.RepositoryAccess.AccountInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings of an existing Laserfiche account.
            </summary>
            <param name="accountId">The ID of the Laserfiche account to update.</param>
            <param name="info">An <c>AccountInfo</c> instance which specifies the
            new settings for the specified account.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Update(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.AccountInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings of an existing Laserfiche account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which
            reprsents the security identifier (SID) of the Laserfiche account to update.</param>
            <param name="info">An <c>AccountInfo</c> instance which specifies the
            new settings for the specified account.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing Laserfiche account.
            </summary>
            <param name="accountId">The ID of the account to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Delete(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing Laserfiche account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which
            reprsents the security identifier (SID) of the Laserfiche account to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing Laserfiche account.
            </summary>
            <param name="accountName">The name of the account to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified
            Laserfiche account.
            </summary>
            <param name="accountId">The ID of the account to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.Int32,Laserfiche.RepositoryAccess.AccountInfo.AccountFields,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified 
            Laserfiche account.
            </summary>
            <param name="accountId">The ID of the account to retrieve information about.</param>
            <param name="fields">Which information to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified
            Laserfiche account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of a Laserfiche account to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.AccountInfo.AccountFields,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified 
            Laserfiche account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of a Laserfiche account to retrieve information about.</param>
            <param name="fields">Which information to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified
            Laserfiche account.
            </summary>
            <param name="accountName">The name of the account to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.GetInfo(System.String,Laserfiche.RepositoryAccess.AccountInfo.AccountFields,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information from a Laserfiche repository about the specified 
            Laserfiche account.
            </summary>
            <param name="accountName">The name of the account to retrieve information about.</param>
            <param name="fields">Which information to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new instance of a type derived from <c>AccountInfo</c> which
            represents the specified Laserfiche account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Int32,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Int32,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Int32,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.String,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.String,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(System.String,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be linked to.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group account).
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.LinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Links one or more Windows accounts to a Laserfiche (user or group) account.
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be linked to.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Int32,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Int32,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Int32,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountId">The ID of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.Security.Principal.SecurityIdentifier,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.String,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.String,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(System.String,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="accountName">The name of the Laserfiche account that the
            specified set of Windows accounts will be unlinked from.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Security.Principal.IdentityReferenceCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="idrefs">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="winIdents">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.UnlinkWindowsAccounts(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlinks one or more Windows accounts from a Laserfiche (user or group) account
            that the Windows accounts were previously linked to.
            </summary>
            <param name="lfAcctRef">An <c>AccountReference</c> instance which represents
            a reference (by name/ID) to the Laserfiche account that the specified
            set of Windows accounts will be unlinked from.</param>
            <param name="winSids">A reference to a collection of Windows account references.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.AddMembersToGroup(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Adds a set of Laserfiche (user or group) accounts to the members of a
            Laserfiche group.
            </summary>
            <param name="groupAcct">An <c>AccountReference</c> instance which references
            a Laserfiche group account to add members to.</param>
            <param name="newMembers">A collection of <c>AccountReference</c> instances
            which represent Laserfiche accounts that will become members of the group
            specified by the <paramref name="groupAcct"/> argument.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.AddMembersToGroup(System.String,System.Collections.Generic.IEnumerable{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Adds a set of Laserfiche (user or group) accounts to the members of a
            Laserfiche group.
            </summary>
            <param name="groupName">The name of the Laserfiche group to add members to.</param>
            <param name="newMembers">A collection of account names to add to the group.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.RemoveMembersFromGroup(Laserfiche.RepositoryAccess.AccountReference,System.Collections.Generic.IEnumerable{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes a set of Laserfiche (user or group) accounts from the members of
            a Laserfiche group.
            </summary>
            <param name="groupAcct">An <c>AccountReference</c> instance which references
            a Laserfiche group account to remove members from.</param>
            <param name="oldMembers">A collection of <c>AccountReference</c> instances
            which represent Laserfiche accounts that will be removed from the group
            specified by the <paramref name="groupAcct"/> argument.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.RemoveMembersFromGroup(System.String,System.Collections.Generic.IEnumerable{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes a set of Laserfiche (user or group) accounts from the members of
            a Laserfiche group.
            </summary>
            <param name="groupName">The name of the Laserfiche group from which to remove
            members from.</param>
            <param name="oldMembers">A collection of account names to remove from the group.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumGroupMembers(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.
            </summary>
            <param name="groupId">The ID of the Laserfiche group account to enumerate
            the members of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumGroupMembers(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.
            </summary>
            <param name="groupName">The name of the Laserfiche group account to
            enumerate the members of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumGroupMembers(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.
            </summary>
            <param name="groupAcct">An <c>AccountReference</c> instance which references
            the Laserfiche group account to enumerate the members of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            the members of the specified Laserfiche group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumAll(Laserfiche.RepositoryAccess.Session,System.String,System.Int32,System.Int32,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user and group accounts in the current repository.
            </summary>
            <param name="name">A string containing an account name to filter by. The * and ?
            wildcard characters are supported. Use <c>null</c> or the empty string to indicate
            no filter.</param>
            <param name="offset">The row offset of the first row of data to return.</param>
            <param name="limit">The maximum number of rows to return. Use -1 to indicate no limit.</param>
            <param name="order">A member of the <c>SortDirection</c> enum that indicates whether
            rows should be sorted in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user and group accounts in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumAll(Laserfiche.RepositoryAccess.AccountInfo.AccountFields,System.String,System.Int32,System.Int32,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user and group accounts in the current repository.
            </summary>
            <param name="fields">Which information to preload.</param>
            /// <param name="name">A string containing an account name to filter by. The * and ?
            wildcard characters are supported. Use <c>null</c> or the empty string to indicate
            no filter.</param>
            <param name="offset">The row offset of the first row of data to return.</param>
            <param name="limit">The maximum number of rows to return. Use -1 to indicate no limit.</param>
            <param name="order">A member of the <c>SortDirection</c> enum that indicates whether
            rows should be sorted in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user and group accounts in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumUsers(Laserfiche.RepositoryAccess.Session,System.String,System.Int32,System.Int32,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user accounts in the current repository.
            </summary>
            /// <param name="name">A string containing an account name to filter by. The * and ?
            wildcard characters are supported. Use <c>null</c> or the empty string to indicate
            no filter.</param>
            <param name="offset">The row offset of the first row of data to return.</param>
            <param name="limit">The maximum number of rows to return. Use -1 to indicate no limit.</param>
            <param name="order">A member of the <c>SortDirection</c> enum that indicates whether
            rows should be sorted in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche user accounts in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Account.EnumGroups(Laserfiche.RepositoryAccess.Session,System.String,System.Int32,System.Int32,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche group accounts in the current repository.
            </summary>
            /// <param name="name">A string containing an account name to filter by. The * and ?
            wildcard characters are supported. Use <c>null</c> or the empty string to indicate
            no filter.</param>
            <param name="offset">The row offset of the first row of data to return.</param>
            <param name="limit">The maximum number of rows to return. Use -1 to indicate no limit.</param>
            <param name="order">A member of the <c>SortDirection</c> enum that indicates whether
            rows should be sorted in ascending or descending order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all the Laserfiche group accounts in the current repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccountInfoReader">
            <summary>
            Provides the ability to enumerate <c>AccountInfo</c> instances
            for Laserfiche accounts in a Laserfiche repository matching selected criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccountReference">
            <summary>
            Represents a reference to a Laserfiche user or group account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountReference.TrusteeType">
            <summary>
            Gets a member of the <c>TrusteeType</c> enumeration which indicates the
            type of Laserfiche account (i.e., user or group) that this instance refers to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountReference.AccountName">
            <summary>
            Gets the name of the account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountReference.LdapFriendlyName">
            <summary>
            Gets the friendly name of the account for LDAP accounts.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountReference.IsUser">
            <summary>
            Gets a boolean that indicates if the account is a user account.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AccountReference</c> instance from a Laserfiche account name.
            </summary>
            <param name="accountName">The name of the Laserfiche account to reference.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AccountReference</c> instance from a LFDS account name and organization Name.
            </summary>
            <param name="lfdsAccountName">The name of the LFDS account to reference.</param>
            <param name="organization">The organization of the LFDS account to reference. 
            Empty input here will let the server search the name in the default organization of the current repository. 
            Passing in '/' to indicate root organization. </param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AccountReference</c> instance from a Laserfiche account ID.
            </summary>
            <param name="accountId">The numeric ID of the Laserfiche account to reference.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AccountReference</c> instance from a Laserfiche account SID.
            </summary>
            <param name="accountSid">A <c>SecurityIdentifier</c> which represents the
            security identifier (SID) of the Laserfiche account to reference.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>AccountReference</c> instance from an <c>IdentityReference</c>
            instance.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.#ctor(Laserfiche.RepositoryAccess.AccountInfo)">
            <summary>
            Initializes an <c>AccountReference</c> instance from an <c>AccountInfo</c>
            instance which represents an existing Laserfiche account.
            </summary>
            <param name="account">an <c>AccountInfo</c> instance which represents the
            Laserfiche account to reference.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.ToSecurityIdentifier">
            <summary>
            Returns a <c>SecurityIdentifier</c> instance which represents the SID
            of the Laserfiche account this instance references.
            </summary>
            <returns>A <c>SecurityIdentifier</c> instance which represents the SID
            of the Laserfiche account this instance references.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.op_Equality(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Determines if two <c>AccountReference</c> object references refer to the
            same Laserfiche account.
            </summary>
            <param name="lhs">An instance of <c>AccountReference</c> or null.</param>
            <param name="rhs">An instance of <c>AccountReference</c> or null.</param>
            <returns>True if both arguments reference the same Laserfiche account
            or if both arguments are null object references, otherwise false is
            returned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.op_Inequality(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Determines if two <c>AccountReference</c> object references do not
            refer to the same Laserfiche account.
            </summary>
            <param name="lhs">An instance of <c>AccountReference</c> or null.</param>
            <param name="rhs">An instance of <c>AccountReference</c> or null.</param>
            <returns>The logical negation of the equality operator.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.IsAccountSid(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Determines if the specified <c>SecurityIdentifier</c> potentially identifies
            a Laserfiche account.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance.</param>
            <returns>True if the specified <c>SecurityIdentifier</c> potentially identifies
            a Laserfiche account, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.IsLdapAccountSid(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Determines if the specified <c>SecurityIdentifier</c> potentially identifies
            an LDAP account.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance.</param>
            <returns>True if the specified <c>SecurityIdentifier</c> potentially identifies
            an LDAP account, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.IsWindowsAccountSid(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Determines if the specified <c>SecurityIdentifier</c> potentially identifies
            a Windows account.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance.</param>
            <returns>True if the specified <c>SecurityIdentifier</c> potentially identifies
            an Windows account, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReference.IsLFDSAccountSid(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Determines if the specified <c>SecurityIdentifier</c> potentially identifies
            an LFDS account.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance.</param>
            <returns>True if the specified <c>SecurityIdentifier</c> potentially identifies
            an LFDS account, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccountReferenceCollection">
            <summary>
            Represents a read-only collection of <c>AccountReference</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReferenceCollection.CopyTo(Laserfiche.RepositoryAccess.AccountReference[])">
            <summary>
            Copies the entire <c>AccountReference</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountReferenceCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.AccountReference[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>AccountReference</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccountReferenceReader">
            <summary>
            Provides the ability to enumerate <c>AccountReference</c> instances.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AlternateEdocReader">
            <summary>
            Provides the ability to enumerate <c>AlternateEdoc</c> instances.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AlternateEdoc">
            <summary>
            Represents an alternate electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.EntryId">
            <summary>
            Gets the entry ID of the document that the represented alternate electronic
            document is contained in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.Version">
            <summary>
            Gets the version number of the document version that the represented alternate
            electronic document is associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.IsEmpty">
            <summary>
            Gets a boolean indicating if the content stream is empty.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.IsReadOnly">
            <summary>
            Gets a boolean indicating if the represented alternate electronic
            document is part of a document version and hence read-only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.MimeType">
            <summary>
            Gets the MIME type of the represented alternate electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.Name">
            <summary>
            Gets the name of the represented alternate electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.FilePath">
            <summary>
            Gets the path to the file relative to the volume root that the represented
            alternate electronic document is stored at.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AlternateEdoc.FileSize">
            <summary>
            Gets the length of the represented alternate electronic document's content
            stream.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AlternateEdoc.Delete">
            <summary>
            Marks the represented alternate electronic document for deletion
            next time pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AlternateEdoc.ReadContent">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the contents
            of the represented alternate electronic document.
            </summary>
            <returns>A <c>Stream</c> instance which can be used to read the contents
            of the represented alternate electronic document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AlternateEdoc.WriteContent(System.String,System.Int64)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to write the contents
            of the represented alternate electronic document.
            </summary>
            <param name="mimeType">The MIME type of the electronic document being written.</param>
            <param name="size">The total length in bytes of data that will
            be written to the alternate electronic document.</param>
            <returns>A <c>Stream</c> instance which can be used to write the contents
            of the represented alternate electronic document.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Annotation">
            <summary>
            A collection of static methods for manipulating Laserfiche annotations.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetInfo(System.Int32,System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about a single annotation.
            </summary>
            <param name="entryId">The entry ID of the document containing the annotation.</param>
            <param name="pageNumber">The page number of the page containing the annotation.</param>
            <param name="itemId">The ID of the annotation.</param>
            <param name="session">A connected session reference.</param>
            <returns>An object derived from <c>AnnotationBase</c> representing the
            referenced annotation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetInfo(System.Int32,System.Int64,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about a single annotation.
            </summary>
            <param name="entryId">The entry ID of the document containing the annotation.</param>
            <param name="pageId">The page ID of hte page containing the annotation.</param>
            <param name="itemId">The ID of the annotation</param>
            <param name="session">A connected session reference.</param>
            <returns>An object derived from <c>AnnotationBase</c> representing the
            referenced annotation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetForPage(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Return information about all the annotations on a single page.
            </summary>
            <param name="entryId">The entry ID of the document containing the annotations.</param>
            <param name="pageNumber">The page number of the page containing the annotations.</param>
            <param name="session">A connected session reference.</param>
            <returns>A collection of objects derived from <c>AnnotationBase</c> which
            represent the annotations on the referenced page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetForPage(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Return information about all annotations on a single page
            </summary>
            <param name="entryId">The entry ID of the document containing the annotations.</param>
            <param name="pageId">The page ID of the page containing the annotations</param>
            <param name="session">A connected session reference.</param>
            <returns>A collection of objects derived from <c>AnnotationBase</c> which
            represent the annotations on the referenced page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetForPage(System.Int32,System.Int32,System.Int64,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Return information about all annotations on a single page
            </summary>
            <param name="entryId">The entry ID of the document containing the annotations.</param>
            <param name="pageId">The page ID of the page containing the annotations</param>
            <param name="pageNumber">The page number of the page containing the annotations.</param>
            <param name="session">A connected session reference.</param>
            <returns>
            A collection of objects derived from <c>AnnotationBase</c> which
            represent the annotations on the referenced page.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">entryId or pageNumber or pageId</exception>
            <exception cref="T:System.ArgumentNullException">session</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetForDocument(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns information about all the annotations in a document.
            </summary>
            <param name="entryId">The entry ID of the document containing the annotations.</param>
            <param name="session">A connected session reference.</param>
            <returns>A collection of objects derived from <c>AnnotationBase</c> which
            represent the annotations in the referenced document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.Delete(System.Int32,System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a single annotation.
            </summary>
            <param name="entryId">The entry ID of the document containing the annotation.</param>
            <param name="pageNumber">The page number of the page containing the annotation.</param>
            <param name="itemId">The ID of the annotation.</param>
            <param name="session">A connected session reference.</param>
            <returns>An object derived from <c>AnnotationBase</c> representing the
            referenced annotation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.GetAnnotationReasons(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of the annotation reasons defined in the current
            Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of the annotation reasons defined in the current
            Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Annotation.UpdateAnnotationReasons(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.AnnotationReasonCommand},System.Collections.Generic.IList{Laserfiche.RepositoryAccess.AnnotationReasonCommandResult},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates, updates, or deletes annotation reason definitions.
            </summary>
            <param name="commands">A list of commands to execute in the repository.</param>
            <param name="results">A list of <c>AnnotationReasonCommandResult</c> instances that
            will contain the results of the commands.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationType">
            <summary>
            Enumeration of Laserfiche annotation types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Highlight">
            <summary>
            Indicates a highlight annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Redaction">
            <summary>
            Indicates a redaction annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Strikeout">
            <summary>
            Indicates a text strikeout annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Underline">
            <summary>
            Indicates a text underline annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Note">
            <summary>
            Indicates a sticky note annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Attachment">
            <summary>
            Indicates a file attachment annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.TextBox">
            <summary>
            Indicates a text box annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Bitmap">
            <summary>
            Indicates a bitmap annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Line">
            <summary>
            Indicates a line annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Rectangle">
            <summary>
            Indicates a rectangle annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Polyline">
            <summary>
            Indicates a multiple line annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Callout">
            <summary>
            Indicates a callout annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.Stamp">
            <summary>
            Indicates a stamp annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationType.FreeHand">
            <summary>
            Indicates a free-hand drawing annotation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LineStyle">
            <summary>
            Enumeration of Laserfiche annotation graphical line and border styles.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed1">
            <summary>
            A series of long dashes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed2">
            <summary>
            A series of short dots.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed3">
            <summary>
            A series of alternating long dashes and short dots.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed4">
            <summary>
            A series with the repeating sequence: long dash, short dot, short dot.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed5">
            <summary>
            Not currently implemented.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashed6">
            <summary>
            Not currently implemented.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Cloud1">
            <summary>
            Not currently implemented.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Cloud2">
            <summary>
            Not currently implemented.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dashes">
            <summary>
            A series of long dashes.  Equivalent to Dashed1.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.Dots">
            <summary>
            A series of short dots.  Equivalent to Dashed2.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.DashDot">
            <summary>
            A series of alternating long dashes and short dots.  Equivalent to Dashed3.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineStyle.DashDotDot">
            <summary>
            A series with the repeating sequence: long dash, short dot, short dot.
            Equivalent to Dashed4.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LineEndingStyle">
            <summary>
            Enumeration of Laserfiche annotation graphical line ending styles.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.None">
            <summary>
            No special line ending.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Open">
            <summary>
            An open arrow (two short angled lines swept back along the line).
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Closed">
            <summary>
            A triangle with its point at the end of the line, not extending beyond
            the end of the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.OpenReversed">
            <summary>
            The same as <c>Open</c>, but rotated 180 degrees around the end of the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.ClosedReversed">
            <summary>
            The same as <c>Closed</c>, but rotated 180 degrees around the end of the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Butt">
            <summary>
            A short bar perpendicular to the direction of the line, bisected by the
            end of the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Diamond">
            <summary>
            A diamond centered on the end of the line. One of the vertices of the
            diamond is on the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Round">
            <summary>
            A circle centered on the end of the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Square">
            <summary>
            A square centered on the end of hte line.  Two sides of the square are 
            perpendicular to the line.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LineEndingStyle.Slash">
            <summary>
            A short diagonal bar bisected by the end of the line.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BoxStyle">
            <summary>
            Enumeration of Laserfiche annotation box styles.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BoxStyle.Rectangle">
            <summary>
            Indicates a rectangle.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BoxStyle.Ellipse">
            <summary>
            Indicates an ellipse.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BoxStyle.RoundedRectangle">
            <summary>
            Indicates a rectangular shape with rounded corners.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TextDirection">
            <summary>
            Enumeration of the text direction in Laserfiche annotations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TextDirection.LeftToRight">
            <summary>
            Horizontal text that flows from left to right.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TextDirection.TopToBottom">
            <summary>
            Vertical text that flows from top to bottom.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TextDirection.RightToLeft">
            <summary>
            Horizontal text that flows from right to left.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TextDirection.BottomToTop">
            <summary>
            Vertical text that flows from bottom to top.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FillStyle">
            <summary>
            Enumeration of annotation interior fill styles.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FillStyle.None">
            <summary>
            The annotation does not have any interior fill setting.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FillStyle.Solid">
            <summary>
            The annotation interior is filled with a solid color.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationVisibility">
            <summary>
            An enumeration of annotation visibility levels.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationVisibility.CreatorAndOwner">
            <summary>
            The annotation is only visible to the annotation creator and document owner.
            This is equivalent to a "private" annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationVisibility.Standard">
            <summary>
            The standard level of access.  Visible to all users with the see annotations
            access right.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AnnotationVisibility.AllUsers">
            <summary>
            All users, even those without the see annotations access right, or see through
            redactions for redaction annotations, can see the annotation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AnnotationBase">
            <summary>
            Base class for Laserfiche annotation classes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.EntryId">
            <summary>
            The entry ID of the document that the annotation belongs to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.Version">
            <summary>
            Gets the version of the document that contains the represented annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.IsReadOnly">
            <summary>
            A boolean indicating if the represented annotation is read-only because it
            is part of an archived version of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.AnnotationType">
            <summary>
            The type of Laserfiche annotation this object represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.PageId">
            <summary>
            Gets the page ID of the page that contains the represented annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.PageNumber">
            <summary>
            Gets the page number that contains the represented annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.PageNumberRaw">
            <summary>
            Gets the page number raw.
            This prevents a call to refresh.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.PageIDRaw">
            <summary>
            Gets the page ID raw.
            This prevents a call to refresh.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.ItemId">
            <summary>
            The item ID for the Laserfiche annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.Creator">
            <summary>
            The identity of the user that created the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.Created">
            <summary>
            The date and time that the annotation was created in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.CreatedUtc">
            <summary>
            The date and time that the annotation was created in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.LastModified">
            <summary>
            The date and time of the last saved modification to the annotation in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.LastModifiedUtc">
            <summary>
            The date and time of the last saved modification to the annotation in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.IsProtected">
            <summary>
            A boolean indicating whether the annotation is protected from modification
            by users except its creator and the containing document's owner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.IsPrivate">
            <summary>
            A boolean indicating whether the annotation is private to its creator.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.Visibility">
            <summary>
            Gets or sets the annotation visibility level.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.Comment">
            <summary>
            A user-defined comment associated with the Laserfiche annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.CustomData">
            <summary>
            Gets or sets some user or application defined data associated with the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.ZOrder">
            <summary>
            Gets and sets the z-order of the annotation, which controls the rendering
            order of overlapping annotations.
            </summary>
            <remarks>
            Annotations with a lower z-order are rendered before annotations with a higher
            z-order.  Therefore, if two annotations overlap, the one with the higher
            z-order will occlude the annotation with the lower z-order.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AnnotationBase.ReasonId">
            <summary>
            Gets or sets the annotation reason definition ID associated with this annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AnnotationBase.Delete">
            <summary>
            Marks this annotation for deletion when pending changes are saved.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AnnotationBase.MoveAnnotationTo(Laserfiche.RepositoryAccess.PageInfo)">
            <summary>
            Moves an annotation from one page to another, either in the current document
            or across documents.
            </summary>
            <param name="targetPage">A <c>PageInfo</c> reference which represents the
            destination page.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AttachmentAnnotation">
            <summary>
            Represents an attachment annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AttachmentAnnotation.FileName">
            <summary>
            The file name of the attachment.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AttachmentAnnotation.Icon">
            <summary>
            Bitmap data for an icon for the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AttachmentAnnotation.MimeType">
            <summary>
            The Internet MIME type of the attachment.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AttachmentAnnotation.Position">
            <summary>
            The position of the annotation on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AttachmentAnnotation.AttachmentLength">
            <summary>
            The length of the attachment data stream in bytes.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.#ctor">
            <summary>
            Initializes an <c>AttachmentAnnotation</c> instance representing an
            empty attachment.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a new AttachmentAnnotation object representing a new attachment
            annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.GetAttachmentReader">
            <summary>
            Returns a read-only <c>LaserficheReadStream</c> object for the attachment data.
            </summary>
            <returns>A <c>LaserficheReadStream</c> object representing the attachment data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.GetAttachmentReader(Laserfiche.RepositoryAccess.StreamRange)">
            <summary>
            Returns a read-only <c>LaserficheReadStream</c> object for the attachment data.
            </summary>
            <param name="byteRange">A <c>StreamRange</c> value which specifies the
            range of bytes in the source content to retrieve.</param>
            <returns>A <c>LaserficheReadStream</c> object representing the attachment data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.GetAttachmentWriter(System.String,System.Int64)">
            <summary>
            Returns a <c>Stream</c> object to be used for uploading attachment data.
            </summary>
            <param name="size">The total length in bytes of data that will
            be written to the attached annotation.</param>
            <param name="mimeType">A string containing the MIME type of the attachment data.</param>
            <returns>A <c>Stream</c> object for writing attachment data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AttachmentAnnotation.Refresh(System.Boolean)">
            <summary>
            Retrieve data for the attachment annotation that this object represents from
            the Laserfiche repository.
            </summary>
            <param name="keepChanges">If true, keep changes to this object;
            if false, discard them.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FreeHandAnnotation">
            <summary>
            Represents a "free hand" drawing annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FreeHandAnnotation.#ctor">
            <summary>
            Initializes a <c>FreeHandAnnotation</c> instance representing a new
            annotation with no points.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FreeHandAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>FreeHandAnnotation</c> instance representing a new
            annotation with no points on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id of the page the new annotation will be on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.MultipointAnnotation">
            <summary>
            Base class for Laserfiche annotation types which manage a collection of points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.Style">
            <summary>
            The drawing style of the line segments.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.FillColor">
            <summary>
            Gets and sets the interior fill color of the polygon.
            </summary>
            <remarks>Applicable to PolylineAnnotation only.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.FillStyle">
            <summary>
            Gets and sets the interior fill style of the polygon.
            </summary>
            <remarks>Applicable to PolylineAnnotation only.</remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.Color">
            <summary>
            Gets or sets the color of the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.Thickness">
            <summary>
            Gets or sets the thickness of the line segments.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.Opacity">
            <summary>
            Gets or sets the opacity of the annotation, from 0 (fully transparent)
            to 100 (fully opaque).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.PointCount">
            <summary>
            Gets or sets the count of points in theannotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultipointAnnotation.Points">
            <summary>
            Gets a read-only list of points which comprise the annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.GetPointAt(System.Int32)">
            <summary>
            Retrieves a <c>Point</c> in the annotation's points list at the specified index.
            </summary>
            <param name="index">The zero-based index of the <c>Point</c> in the list to return.</param>
            <returns>The line segment <c>Point</c> at the requested index.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.SetPointAt(System.Int32,Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Changes the value of an existing <c>Point</c> in the annotation's point list at
            the specified index.
            </summary>
            <param name="index">The zero-based index of the <c>Point</c> in the list to modify.</param>
            <param name="pt">The new value of the <c>Point</c>.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.IndexOfPoint(Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Returns the index of the <c>Point</c> in the points list that matches the provided
            value, if such a <c>Point</c> exists, or -1 if it does not.
            </summary>
            <param name="pt">The value of the point to search for.</param>
            <returns>The index of the <c>Point</c> with a value that is equal to the argument,
            or -1 if no matching <c>Point</c> could be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.IndexOfPoint(Laserfiche.RepositoryAccess.Common.LfPoint,System.Int32)">
            <summary>
            Returns the index of the <c>Point</c> in the points list that matches the provided
            value, if such a <c>Point</c> exists, or -1 if it does not, starting at the
            specified index in the list.
            </summary>
            <param name="pt">The value of the <c>Point</c> to search for.</param>
            <param name="index">The zero-based index from which to start looking.</param>
            <returns>The index of the <c>Point</c> with a value that is equal to the argument,
            or -1 if no matching <c>Point</c> could be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.AddBreak">
            <summary>
            Adds a break in the sequence of points so that no line segment
            joins the previous and next points.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.AddPoint(Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Append a <c>Point</c> value to the annotation's points list.
            </summary>
            <param name="pt">The value of the <c>Point</c> to append to the points list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.AddPoints(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.Common.LfPoint})">
            <summary>
            Append a collection of <c>Point</c> values to the annotation's points list.
            </summary>
            <param name="pts">The collection whose elements should be appended to the
            annotation's point list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.InsertPoint(System.Int32,Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Insert a <c>Point</c> value at the specified position in the annotation's
            points list.
            </summary>
            <param name="index">The zero-based index indicating where to insert the new
            <c>Point</c>.</param>
            <param name="pt">The value of the new <c>Point</c> to insert.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.InsertPoints(System.Int32,System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.Common.LfPoint})">
            <summary>
            Insert a collection of <c>Point</c> values at a specified position in the
            annotation's points list.
            </summary>
            <param name="index">The zero-based index indicating where to insert the
            new <c>Point</c>.</param>
            <param name="pts">The collection whose elements should be inserted
            into the annotation's points list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.RemovePoint(Laserfiche.RepositoryAccess.Common.LfPoint)">
            <summary>
            Remove a <c>Point</c> from the annotation's points list that matches the given value.
            </summary>
            <param name="pt">The value of the <c>Point</c> to remove from the points list.</param>
            <returns>True if a point with a matching value was found, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.RemovePointAt(System.Int32)">
            <summary>
            Remove a <c>Point</c> from the annotation's points list with the specified index.
            </summary>
            <param name="index">The zero-based index of the <c>Point</c> in the list to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.RemovePoints(System.Int32,System.Int32)">
            <summary>
            Remove a contiguous range of <c>Point</c> values from the annotation's points list
            starting at the specified index.
            </summary>
            <param name="index">The starting index in the points list from which to begin
            removing <c>Point</c> values.</param>
            <param name="count">The number of <c>Point</c> values to remove from the list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultipointAnnotation.ClearPoints">
            <summary>
            Remove all the <c>Point</c> values from the annotation's points list.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ApplicationPropertyOptions">
            <summary>
            Options for application property operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ApplicationPropertyOptions.None">
            <summary>
            Use the default behavior.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ApplicationPropertyOptions.ReadWritePassword">
            <summary>
            A password is required for reading and writing the property value.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ApplicationPropertyOptions.WritePassword">
            <summary>
            A password is required for writing, but not reading the property value.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ApplicationPropertyOptions.NoOverwrite">
            <summary>
            Do not overwrite an existing property with the same name.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ApplicationProperty">
            <summary>
            Collection of static methods for managing application properties in a
            Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.GetApplicationProperty(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the value of a single application property.
            </summary>
            <param name="key">The key of the application property to return.</param>
            <param name="password">The password, if any, to the application property.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The data associated with the specified application property.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.GetApplicationProperties(System.String[],System.String[],Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves data for one or more application properties in a single operation.
            </summary>
            <param name="keys">An array of key names specifying the application properties
            to retrieve values for.</param>
            <param name="passwords">An array of passwords for the corresponding application
            properties.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An array of BLOBs representing the data associated with the
            specified application properties.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.SetApplicationProperty(System.String,System.Byte[],System.String,Laserfiche.RepositoryAccess.ApplicationPropertyOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the value of an application property.  If the property does not already
            exist it can be created.
            </summary>
            <param name="key">The key of the application property to set the value of.</param>
            <param name="value">The value to set the application property to.</param>
            <param name="password">The password to the specified application property.</param>
            <param name="options">One or more members of the <c>ApplicationPropertyOptions</c>
            enumeration which specify which options to use.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.SetApplicationProperties(System.String[],System.Byte[][],System.String[],Laserfiche.RepositoryAccess.ApplicationPropertyOptions[],Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the value of one or more application properties in a single operation.
            If a property does not exist it can be created.
            </summary>
            <param name="keys">The list of keys of the application properties to set
            values for.</param>
            <param name="values">The list of values to set the specified application
            properties to.</param>
            <param name="passwords">The list of passwords for the specified application
            properties.</param>
            <param name="options">An array of <c>ApplicationPropertyOptions</c> enumeration
            values which specify options for setting the corresponding application
            property.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.DeleteApplicationProperty(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified application property key and value from the current
            Laserfiche repository.
            </summary>
            <param name="key">The key of the application property to delete.</param>
            <param name="password">The password to the application property.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.DeleteApplicationProperties(System.String[],System.String[],Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified application property keys and their corresponding
            values from the current Laserfiche repository.
            </summary>
            <param name="keys">A list of keys of the application properties to delete.</param>
            <param name="passwords">A list of passwords to the specified application
            properties.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ApplicationProperty.ChangeApplicationPropertyPassword(System.String,System.String,System.String,Laserfiche.RepositoryAccess.ApplicationPropertyOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets or changes the password for an application property.
            </summary>
            <param name="key">The key of the application property to change the
            password to.</param>
            <param name="oldPassword">The old password to the specified application
            property.</param>
            <param name="newPassword">The new password for the specified application
            property.</param>
            <param name="options">One or more values from the <c>ApplicationPropertyOptions</c>
            enumeration, specifying options that will be used to change the password.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BitmapAnnotation">
            <summary>
            Represents a bitmap annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BitmapAnnotation.Opacity">
            <summary>
            The opacity level of the bitmap, from 0 (transparent) to 100 (opaque).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BitmapAnnotation.Rotation">
            <summary>
            The degree of clockwise rotation of the bitmap relative to the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BitmapAnnotation.Position">
            <summary>
            The position of the upper-left corner of the bitmap on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BitmapAnnotation.Size">
            <summary>
            The size of the bitmap on the page image in pixels.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BitmapAnnotation.ImageData">
            <summary>
            The bitmap data for the Laserfiche annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BitmapAnnotation.#ctor">
            <summary>
            Initializes a <c>BitmapAnnotation</c> instance representing a new
            bitmap annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BitmapAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a new BitmapAnnotation object representing a new bitmap
            annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CalloutAnnotation">
            <summary>
            Represents a callout annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.BoxCoordinates">
            <summary>
            The coordinates on the page image of the text box.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.FocusPosition">
            <summary>
            The position on the page image of the callout annotation's focus.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.FillColor">
            <summary>
            The background color of the callout annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.BorderColor">
            <summary>
            The border color of the callout annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.BorderStyle">
            <summary>
            The line style of the callout annotation's border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.BorderThickness">
            <summary>
            The thickness of the callout annotation's border.  A value of 0 denotes
            no visible border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.FocusStyle">
            <summary>
            The graphical style of the callout annotation's focus point.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.Opacity">
            <summary>
            The opacity level of the callout, from 0 (transparent) to 100 (opaque).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.TextSize">
            <summary>
            The size of the callout text font in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.Text">
            <summary>
            The text inside the callout.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CalloutAnnotation.Direction">
            <summary>
            The direction of the text in the annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CalloutAnnotation.#ctor">
            <summary>
            Initializes a <c>CalloutAnnotation</c> instance representing a new callout
            annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CalloutAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a CalloutAnnotation object representing a new callout annotation
            on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseException">
            <summary>
            Represents an error when processing (importing/exporting) a Laserfiche
            briefcase.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseException.#ctor">
            <summary>
            Initializes a <c>BriefcaseException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseException.#ctor(System.String)">
            <summary>
            Initializes a <c>BriefcaseException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>BriefcaseException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseFormat">
            <summary>
            Enumeration of Laserfiche briefcase format versions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFormat.Default">
            <summary>
            Use the default briefcase format the content server selects for this session.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFormat.Version_7_0">
            <summary>
            Use the Laserfiche 7.0/7.1 briefcase format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFormat.Version_7_2">
            <summary>
            Use the Laserfiche 7.2 briefcase format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFormat.Version_8_0">
            <summary>
            Use the Laserfiche 8.0+ briefcase format.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseSourceOptions">
            <summary>
            Enumeration of options that control which entries are selected when
            choosing the source of a Laserfiche briefcase export operation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseSourceOptions.None">
            <summary>
            Use the default behavior.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseSourceOptions.RecurseFolders">
            <summary>
            Recurse through sub-folders, exporting all entries.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseExporter">
            <summary>
            Exports data in a Laserfiche repository to a Laserfiche briefcase file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.Session">
            <summary>
            Gets the <c>Session</c> instance associated with the briefcase export operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeAnnotations">
            <summary>
            Gets or sets a boolean indicating whether to exclude annotations from
            the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeDocuments">
            <summary>
            Gets or sets a boolean indicating whether to exclude documents from
            the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeElectronicDocuments">
            <summary>
            Gets or sets a boolean indicating whether to exclude the electronic document
            portion of documents from the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeImages">
            <summary>
            Gets or sets a boolean indicating whether to exclude page images from
            the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeText">
            <summary>
            Gets or sets a boolean indicating whether to exclude page text from
            the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeUserNames">
            <summary>
            Gets or sets a boolean indicating whether to strip user name information
            from entry metadata in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeShortcuts">
            <summary>
            Gets or sets a boolean indicating whether to exclude entry shortcuts
            from the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeThumbnails">
            <summary>
            Gets or sets a boolean indicating whether to exclude thumbnails from
            the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ExcludeRecordsManagementData">
            <summary>
            Gets or sets a boolean indicating whether to exclude records management
            specific metadata from the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.IncludeAuditData">
            <summary>
            Gets or sets a boolean indicating whether to include audit data in the
            briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.IncludeDocumentSignatures">
            <summary>
            Gets or sets a boolean indicating whether to include digital signatures
            on documents in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.IncludeVersionHistory">
            <summary>
            Gets or sets a boolean indicating whether to include document version
            history in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.IncludeWorkingCopy">
            <summary>
            Gets or sets a boolean indicating whether to include working copy or latest version in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.PrepareForClientSignature">
            <summary>
            Gets or sets a boolean indicating whether the briefcase should be prepared
            for client-side digital signing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.PreserveFolderStructure">
            <summary>
            Gets or sets a boolean indicating whether to preserve the folder structure
            or to place all exported entries at the briefcase root.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.RedactDocuments">
            <summary>
            Gets or sets a boolean indicating whether to permanently apply redactions
            in exported data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.RecordDestinationLocation">
            <summary>
            Gets or sets the ID of the records management location when exporting for
            a records management transfer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.RecordTransferId">
            <summary>
            Gets or sets the ID of the records management transfer definition when
            exporting for a records management transfer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.RecordsForAccession">
            <summary>
            Gets or sets a boolean if records are being exported for records management
            accession.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ServerSignatureComments">
            <summary>
            Gets or sets the comment to record in the server-side briefcase signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ServerSignatureImage">
            <summary>
            Gets or sets the image data to use for the server-side briefcase signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ServerSignatureImageMimeType">
            <summary>
            Gets or sets the MIME type of the image data for the server-side briefcase signature.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.ServerTimeStampAuthorityProfile">
            <summary>
            Gets or sets the name of the time-stamp authority profile to use when digitally
            time-stamping the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.Version">
            <summary>
            Gets or sets a member of the <c>BriefcaseFormat</c> enumeration which
            specifies which version of the briefcase format to use.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.CompressionLevel">
            <summary>
            Gets or sets the compression level of the briefcase.  Level 0 is no compression,
            and levels 1-9 indicate compression ranging from fastest to most compression.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.Description">
            <summary>
            Gets or sets a descriptive comment for the exported briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.BriefcaseName">
            <summary>
            Gets or sets the name of the briefcase.  This is an optional property
            and may be different than the file name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseExporter.AuditReasonId">
            <summary>
            Gets or sets a custom audit reason ID to use as the export reason
            for the export operation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new <c>BriefcaseExporter</c> instance using the specified
            session.
            </summary>
            <param name="session">A <c>Session</c> instance representing the Laserfiche
            session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.ClearSources">
            <summary>
            Clears all selected entries from the briefcase sources.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Selects an entry to be exported in the briefcase.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance representing the entry
            to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddEntry(Laserfiche.RepositoryAccess.EntryInfo,Laserfiche.RepositoryAccess.BriefcaseSourceOptions)">
            <summary>
            Adds an entry to the briefcase.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance representing the entry
            to add.</param>
            <param name="options">Members of the <c>BriefcaseSourceOptions</c> enumeration
            which specifies which options to use when selecting the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddEntry(System.Int32)">
            <summary>
            Adds an entry to the briefcase.
            </summary>
            <param name="entryId">The ID of the entry to add to the briefcase.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddEntry(System.Int32,Laserfiche.RepositoryAccess.BriefcaseSourceOptions)">
            <summary>
            Adds an entry to the briefcase.
            </summary>
            <param name="entryId">The ID of the entry to add to the briefcase.</param>
            <param name="options">Options to apply to the added entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddSearch(Laserfiche.RepositoryAccess.Search)">
            <summary>
            Adds the results of a search command to the briefcase.
            </summary>
            <param name="search">A <c>Search</c> instance representing a completed
            search whose results will be added to the briefcase.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddSearch(Laserfiche.RepositoryAccess.Search,Laserfiche.RepositoryAccess.BriefcaseSourceOptions)">
            <summary>
            Adds the results of a search command to the briefcase.
            </summary>
            <param name="search">A <c>Search</c> instance representing a completed
            search whose results will be added to the briefcase.</param>
            <param name="options">Members of the <c>BriefcaseSourceOptions</c> enumeration
            which specifies which options to use when selecting the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddVolume(Laserfiche.RepositoryAccess.VolumeInfo)">
            <summary>
            Adds the documents on the specified volume to the briefcase.
            </summary>
            <param name="volume">A <c>VolumeInfo</c> instance representing the volume
            whose constituent documents will be added to the briefcase.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddVolume(System.Int32)">
            <summary>
            Adds the documents on the specified volume to the briefcase.
            </summary>
            <param name="volumeId">The ID of the volume whose constituent documents
            will be added to the briefcase.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddPassword(System.String)">
            <summary>
            Password protect and encrypt the briefcase and add a password to the set of
            passwords which can be used to decrypt the briefcase.
            </summary>
            <param name="newPasswd">The password to add to the password set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.AddServerSigningCertificate(System.String)">
            <summary>
            Configure the Laserfiche server to sign the briefcase with a certificate
            that has the specified thumbprint.
            </summary>
            <param name="thumbprint">The thumbprint of a certificate that the server
            will use to sign the briefcase.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.Export(System.String)">
             <summary>
             Creates a Laserfiche briefcase file at the specified file path
             containing the selected entries in the current Laserfiche repository.
             </summary>
             <param name="outputPath">The path to the new Laserfiche briefcase file.</param>
             <remarks>
             This method will block and will return only when the export operation is
             complete.  The <c>Close</c> method must be called after this method returns
             successfully or throws an exception.
            
             The <c>CancelExport</c> and <c>GetPercentComplete</c> methods may be safely
             called in another thread while this method is executing.  No other methods
             or properties on this instance should be called or modified while the
             <c>Export</c> method is executing.  As briefcase export is considered a
             "long operation" by Laserfiche, other methods in other object instances
             associated with the current Laserfiche session may be safely called, however.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.Export">
            <summary>
            Returns a <c>Stream</c> instance representing a stream that contains the
            data for a Laserfiche briefcase containing the selected entries in the
            current Laserfiche repository.
            </summary>
            <returns>A <c>Stream</c> instance representing a stream that contains the
            data for a Laserfiche briefcase containing the selected entries.</returns>
            <remarks>
            This method may block.  The returned <c>Stream</c> is read-only and not
            seekable, and calls to <c>Stream.Read</c> may block.
            The caller is responsible for disposing the returned <c>Stream</c> instance.
            The returned <c>Stream</c> must be disposed before disposing the originating
            <c>BriefcaseExporter</c> instance.  The <c>Close</c> method must be called
            after calling this method, either after the returned <c>Stream</c> is disposed,
            or anytime after this method throws an exception and does not return a
            <c>Stream</c> instance.
            
            The <c>CancelExport</c> and <c>GetPercentComplete</c> methods may be safely
            called in another thread while this method is executing.  No other method
            in the instance can be safely called while this method is executing, and
            no properties should be modified while this method is executing.  As briefcase
            export is considered a "long operation" by Laserfiche, other methods
            in other object instances associated with the current Laserfiche session may
            be safely called, however.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.BeginExport(System.String,System.AsyncCallback,System.Object)">
             <summary>
             Asynchronously creates a Laserfiche briefcase file at the specified file path
             containing the selected entries in the current Laserfiche repository.
             </summary>
             <param name="outputPath">The path to the new Laserfiche briefcase file.</param>
             <param name="callback">References a method that will be called when
             the export operation has completed.</param>
             <param name="state">An <c>Object</c> reference that will be passed to
             the callback function specified by the <paramref name="callback"/> argument.</param>
             <returns>An <c>IAsyncResult</c> instance that represents the results of
             the asynchronous export operation.</returns>
             <remarks>
             After this method returns, while the export process is running, only the
             <c>EndExport</c>, <c>CancelExport</c>, and <c>GetPercentComplete</c> methods
             should be called and no properties should be modified.  Call <c>EndExport</c>
             to complete the export operation.  Do not call any method or modify any
             property of this instance while this method is executing.  As briefcase
             export is considered a "long operation" by Laserfiche, other methods
             in other object instances associated with the current Laserfiche session may
             be safely called, however.
            
             The <c>Close</c> method should be called if this method throws an exception.  If
             this method completes successfuly and returns an <c>IAsyncResult</c> instance,
             the <c>Close</c> method should be called after <c>EndExport</c> completes.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.EndExport(System.IAsyncResult)">
            <summary>
            Completes an asynchronous export operation that was started by <c>BeginExport</c>.
            This method will wait for the briefcase export to complete if it is still running.
            </summary>
            <param name="asyncResult">The <c>IAsyncResult</c> instance that was returned
            by <c>BeginExport</c>.</param>
            <remarks>
            This method can block.  If this method throws a <c>LaserficheRepositoryException</c>,
            check the <c>InnerException</c> property to determine if the exception occurred
            during the export operation and the specific cause of it.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.CancelExport">
            <summary>
            Attempts to cancel a briefcase export operation that was started by <c>Export</c>
            or <c>BeginExport</c>.
            </summary>
            <returns>True if a cancel request was sent, false if the export has already
            completed or been canceled.</returns>
            <remarks>
            This method can block, although it normally completes much more quickly than
            a briefcase export operation.  This method can be called while the <c>Export</c>
            method is executing on another thread or after <c>BeginExport</c> has
            successfully returned.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.GetPercentComplete">
             <summary>
             Returns the progress of the briefcase operation as a percentage, from 0 to 100,
             as reported by Laserfiche.
             </summary>
             <returns>The progress of the briefcase operation as a percentage, from 0 to
             100, or -1 if the operation has been canceled.</returns>
             <remarks>
             This method can block, although it normally completes much more quickly than
             a briefcase export operation.  This method can be called while the <c>Export</c>
             method is executing on another thread or after <c>BeginExport</c> has
             successfully returned.
            
             Since this method requires sending a request to Laserfiche, it should not be
             called in a tight loop.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.Close">
             <summary>
             Closes the briefcase export command and frees all allocated resources.
             </summary>
             <remarks>
             This method can block, although it normally completes much faster than
             a briefcase export operation.
            
             <c>Close</c> must be called if either <c>Export</c> or <c>BeginExport</c>
             were called.  If <c>BeginExport</c> was called and returned successfully,
             call <c>Close</c> after <c>EndExport</c> completes.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseExporter.GetLongOperation">
            <summary>
            Returns a <c>LongOperation</c> instance which represents the export long operation.
            </summary>
            <returns>A <c>LongOperation</c> instance which represents the export long
            operation.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseFieldMatchStrategy">
            <summary>
            Enumeration of briefcase field definition matching strategies.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFieldMatchStrategy.IgnoreField">
            <summary>
            Ignore this field when importing the briefcase.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFieldMatchStrategy.FollowTemplate">
            <summary>
            Searches for an existing field in the assigned template that can hold the
            data for this briefcase field.  Only valid when an explicit template matching
            is specified for the entry's template, and only valid for LF7 briefcases.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFieldMatchStrategy.Match">
            <summary>
            Try to match the briefcase field with a repository field definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseFieldMatchStrategy.Create">
            <summary>
            Create a new field in the repository for the briefcase field.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseFieldInfo">
            <summary>
            Represents a template field definition in a Laserfiche briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseFieldInfo.MatchField">
            <summary>
            Gets or sets a <c>FieldInfo</c> instance which represents the field in the
            repository that will be mapped to the briefcase field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseFieldInfo.MatchStrategy">
            <summary>
            Gets or sets a member of the <c>BriefcaseFieldMatchStrategy</c> enumeration
            which specifies the field matching strategy to employ for the represented field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseFieldInfo.ValidMatches">
            <summary>
            Gets a collection of Laserfiche field IDs which are potential matches for
            the represented field definition in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseFieldInfo.BriefcaseId">
            <summary>
            Gets the briefcase ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseFieldInfo.Name">
            <summary>
            Gets or sets the name of the new field to create.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseImporter">
            <summary>
            Imports a Laserfiche briefcase into a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.BriefcaseName">
            <summary>
            Gets or sets the name of the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.Password">
            <summary>
            Sets the password used to decrypt the briefcase.  Used for encrypted briefcases.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.Session">
            <summary>
            Gets a <c>Session</c> instance which represents the Laserfiche session
            used to import the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.DestinationFolder">
            <summary>
            Gets or sets a <c>FolderInfo</c> instance which represents the folder in
            the repository to import the contents of the briefcase in to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.OnFolderConflict">
            <summary>
            Gets or sets a value from the <c>FolderConflictStrategy</c> enumeration
            which controls how Laserfiche will treat folders in the briefcase that
            have the same name as folders in the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.OnDocumentConflict">
            <summary>
            Gets or sets a member of the <c>DocumentConflictStrategy</c> enumeration
            that specifies the action Laserfiche will take upon encountering a document
            name conflict during the volume attach.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.DestinationVolume">
            <summary>
            Gets or sets a <c>VolumeInfo</c> instance which represents the destination
            volume for imported documents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.CurrentRequest">
            <summary>
            Gets a <c>BriefcaseRequest</c> instance representing the current briefcase
            import operation request.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.LongOperation">
            <summary>
            Gets a <c>LongOperation</c> instance which represents the briefcase import
            operation in Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.IsTemplateMatchingDone">
            <summary>
            Gets a boolean indicating if template and field matching is completed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.Canceled">
            <summary>
            Gets a boolean indicating if the briefcase import operation is being
            canceled or has been canceled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.Stream">
            <summary>
            Gets or sets a boolean indicating if the briefcase import operation will be
            performed in streaming mode.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.BucketName">
            <summary>
            Gets or sets the AWS S3 bucket name used to download the briefcase from.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.KeyName">
            <summary>
            Gets or sets the S3 key name used to download the briefcase from AWS S3 bucket.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseImporter.DownloadFromS3">
            <summary>
            Gets a boolean indicating if the briefcase needs to be downloaded
            from S3 bucket.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>BriefcaseImporter</c> using the specified
            Laserfiche session.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.#ctor(Laserfiche.RepositoryAccess.FolderInfo,Laserfiche.RepositoryAccess.VolumeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>BriefcaseImporter</c> using the specified
            Laserfiche session and destination folder and volume.
            </summary>
            <param name="destFolder">A <c>FolderInfo</c> instance which represents the
            folder in Laserfiche to import the briefcase contents in to.</param>
            <param name="destVolume">A <c>VolumeInfo</c> instance which represents the
            volume in Laserfiche to import documents in the briefcase to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.BeginImport(System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously begin importing a Laserfiche briefcase from the specified
            stream into the configured destination.
            </summary>
            <param name="briefcaseStream">A <c>Stream</c> instance representing the data
            stream containing the contents of the Lasefiche briefcase to import.</param>
            <param name="callback">An <c>AsyncCallback</c> instance representing a callback
            method that will be invoked when the operation completes.</param>
            <param name="state">An <c>Object</c> reference that will be passed to the
            callback method.</param>
            <returns>An <c>IAsyncResult</c> interface reference representing the asynchronous
            briefcase import operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.EndImport(System.IAsyncResult)">
            <summary>
            Waits for an asynchronous briefcase import operation to end and returns the
            status code of the operation.
            </summary>
            <param name="asyncResult">An <c>IAsyncResult</c> interface instance returned by
            a previous call to <c>BeginInvoke</c>.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.Import(System.IO.Stream)">
            <summary>
            Imports a Laserfiche briefcase into the current repository using the
            configured settings.  This method returns when the import operation
            completes.
            </summary>
            <param name="briefcaseStream">A <c>Stream</c> instance representing the data
            stream containing the contents of the Lasefiche briefcase to import.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.Import(System.String)">
            <summary>
            Imports a Laserfiche briefcase into the current repository using the
            configured settings.  This method returns when the import operation
            completes.
            </summary>
            <param name="briefcasePath">The file system path to the Laserfiche briefcase
            to import.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.ImportFromS3">
            <summary>
            Imports a Laserfiche briefcase from AWS S3 bucket into the current repository using the
            configured settings.  This method returns when the import operation
            completes.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.DownloadBriefcaseFromS3">
            <summary>
            Download the Laserfiche briefcase from AWS S3 bucket.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.Import">
            <summary>
            Starts the process of importing a Laserfiche briefcase into the current
            repository using the configured settings.  The operation proceeds along
            as the caller responds to each <c>BriefcaseRequest</c>.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance which represents the briefcase
            import operation the caller is required to process.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.CancelImport">
            <summary>
            Sends a request to cancel the current briefcase import process.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.GetPercentComplete">
            <summary>
            Returns the current progress of the import operation as a percentage
            of work completed, from 0 to 100.
            </summary>
            <returns>The current progress of the import operation as a percentage
            of work completed, from 0 to 100.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.WriteData(System.Byte[],System.Int32)">
            <summary>
            Writes briefcase data to the importer so that it can be sent to Laserfiche.
            </summary>
            <param name="data">The next chunk of data in the briefcase stream to be
            written.</param>
            <param name="dataLen">The length of the chunk of data to be written.</param>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.FinishedMatchingTemplates">
            <summary>
            Notifies the importer that template and field definition matching has
            completed and that importing can proceed.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.FinishedSeek">
            <summary>
            Notifies the importer that the requested stream seek operation has been completed
            and that importing can proceed.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.TellPosition(System.Int64)">
            <summary>
            Notifies the importer of the current position in the stream and lets
            importing proceed.
            </summary>
            <param name="position">The current position in the briefcase stream, as
            a byte offset from the start of the stream.</param>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.FinishedWait">
            <summary>
            Notify the importer that the caller has finished waiting and is ready
            to proceed with the import operation.  Take care not to call
            <c>FinishedWait</c> in a tight loop.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.FinishedPassword">
            <summary>
            Notify the importer that the caller has set the <c>Password</c> property
            and is ready to proceed with the import operation.
            </summary>
            <returns>A <c>BriefcaseRequest</c> instance representing the next
            request.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.Close">
            <summary>
            Ends the briefcase import operation and frees all associated resources.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.GetLastException">
            <summary>
            Returns the exception instance that occurred during the import operation, or
            a null reference if no exception was encountered.
            </summary>
            <returns>The exception instance that occurred during the import operation,
            or a null reference if no exception was encountered.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseImporter.GetAllExceptions">
            <summary>
            Returns a list of non-fatal exceptions that were encountered during the
            import process.
            </summary>
            <returns>A list of non-fatal exceptions that were encountered during the
            import process.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseRequestType">
            <summary>
            Enumeration of briefcase import request types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.Finished">
            <summary>
            An indication that the briefcase import has completed and that there
            will be no further requests.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.WriteData">
            <summary>
            A request to call the <c>WriteData</c> method.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.Seek">
            <summary>
            A request to call the <c>FinishedSeek</c> method after seeking.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.TellPosition">
            <summary>
            A request to call the <c>TellPosition</c> method.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.MatchTemplates">
            <summary>
            A request to call the <c>FinishMatchingTemplates</c> method.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.Wait">
            <summary>
            A request to call the <c>FinishedWait</c> method.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseRequestType.Password">
            <summary>
            A request to set the <c>Password</c> property and to call the
            <c>FinishedPassword</c> method.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseRequest">
            <summary>
            Represents a briefcase import request.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.RequestType">
            <summary>
            Gets a value of the <c>BriefcaseRequestType</c> enumeration which
            specifies the value of the request.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.DataRequested">
            <summary>
            Gets the number of bytes requested by the importer.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.SeekOrigin">
            <summary>
            Gets a value of the <c>SeekOrigin</c> enumeration specifying the seek
            origin for the requested seek operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.SeekOffset">
            <summary>
            Gets the seek offset for the requested seek operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.Progress">
            <summary>
            Gets a measure of the import operation's current progress.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.MatchTemplates">
            <summary>
            Gets a collection of <c>BriefcaseTemplateInfo</c> instances which specify
            how template definitions will be matched.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseRequest.MatchFields">
            <summary>
            Gets a collection of <c>BriefcaseFieldInfo</c> instances which specify
            how template field definitions will be matched.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseTemplateMatchStrategy">
            <summary>
            Enumeration of briefcase template matching strategies.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTemplateMatchStrategy.Match">
            <summary>
            Try to match the briefcase template with repository definitions whenever possible.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTemplateMatchStrategy.Create">
            <summary>
            Create new a template in the repository for the briefcase template.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTemplateMatchStrategy.IgnoreEntry">
            <summary>
            Skip entries in the briefcase that have this template assigned.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.BriefcaseTemplateMatchStrategy.IgnoreAllFieldData">
            <summary>
            Ignore all the data in the fields for this template.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo">
            <summary>
            Represents information about a template definition stored in a Laserfiche briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.BriefcaseId">
            <summary>
            Gets the ID of the briefcase being imported.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.MatchTemplate">
            <summary>
            Gets or sets a <c>TemplateInfo</c> instance which represents the template in the
            repository that will be mapped to the briefcase template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.MatchStrategy">
            <summary>
            Gets or sets a member of the <c>BriefcaseTemplateMatchStrategy</c> enumeration
            which specifies the template matching strategy to employ for the represented template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.BriefcaseFields">
            <summary>
            Gets a list of fields which are members of the represented template
            definition in the briefcase.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.Name">
            <summary>
            Gets or sets the name of the represented template.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.BriefcaseTemplateInfo.GetValidMatches">
            <summary>
            Returns a read-only collection of <c>TemplateInfo</c> instances which represent
            templates in Laserfiche which are potential matches for the represented
            template definition in the briefcase.
            </summary>
            <returns>A read-only collection of <c>TemplateInfo</c> instances which represent
            templates in Laserfiche which are potential matches for the represented
            template definition in the briefcase.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CatalogCreationOptions">
            <summary>
            Options that control or change how the Laserfiche Full-Text Search Engine
            creates a catalog.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CatalogAttachOptions">
            <summary>
            Options that control or change how the Laserfiche Full-Text Search Engine
            attaches a catalog.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Catalog">
            <summary>
            Represents a Laserfiche Full-Text Search Engine (LFFTS) catalog.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.IsAttached">
            <summary>
            Gets a boolean indicating if a search engine catalog is attached to the
            current Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.Id">
            <summary>
            Gets the catalog ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.Name">
            <summary>
            Gets or sets the name of the represented search engine catalog.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.Path">
            <summary>
            Gets or sets the path to the represented search engine catalog index files.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.ControllerUrl">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.IndexerUrl">
            <summary>
            For Laserfiche internal use only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.Port">
            <summary>
            Gets or sets the TCP/IP port that the search engine to which the represented
            catalog is attached to is listening on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.Server">
            <summary>
            Gets or sets the host name of the computer that the search engine to which the
            represented catalog is attached to is running on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.DefaultLanguage">
            <summary>
            Gets or sets the default catalog language, which is specified using an
            RFC 5646 IETF language tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.DataNodeNumber">
            <summary>
            Gets or sets the number of data node used for the catalog.
            This attribute will only affect catalog creation.
            It will not be saved through the Save() call. 
            This number will be 1 for standalong catalog.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>Catalog</c> instance representing the search engine catalog
            that is attached to the current Laserfiche repository.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.#ctor">
            <summary>
            Initializes a <c>Catalog</c> instance representing a Laserfiche search
            engine catalog.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Detach">
            <summary>
            Detaches the represented catalog from the Laserfiche Full-Text Search
            Engine instance that it is currently attached to.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Attach(System.String)">
            <summary>
            Attaches a search engine catalog at the specified path to the search
            engine instance associated with the current repository.
            </summary>
            <param name="path">The path to the search engine catalog index files
            to attach.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Attach(System.String,Laserfiche.RepositoryAccess.CatalogAttachOptions)">
            <summary>
            Attaches a search engine catalog at the specified path to the search
            engine instance associated with the current repository.
            </summary>
            <param name="path">The path to the search engine catalog index files
            to attach.</param>
            <param name="options">Members of the <c>CatalogAttachOptions</c> enumeration that
            specify optional settings.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Delete">
            <summary>
            Marks the represented catalog for deletion next time pending changes
            are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Create">
            <summary>
            Creates a new search engine catalog associated with the current Laserfiche
            repository and attaches it to the search engine instance associated with
            the current instance of Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.Create(Laserfiche.RepositoryAccess.CatalogCreationOptions)">
            <summary>
            Creates a new search engine catalog associated with the current Laserfiche
            repository and attaches it to the search engine instance associated with
            the current instance of Laserfiche.
            </summary>
            <param name="options">Members of the <c>CatalogCreationOptions</c> enumeration that
            specify optional settings.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.GetConnectionInfo">
            <summary>
            Returns a <c>CatalogConnectionInfo</c> instance which describes the connection
            settings used by the represented catalog.
            </summary>
            <returns>A <c>CatalogConnectionInfo</c> instance which describes the connection
            settings used by the represented catalog.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.GetPEPEnabled">
            <summary>
            return a boolean to show whether or not PEP is enabled for the catalog.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.SetPEPEnabled(System.Boolean)">
            <summary>
            enable/disable PEP status for the catalog
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Catalog.IsUsingSSL">
            <summary>
            Gets if LFS connects to the Laserfiche Full-Text Search Engine using TLS/SSL.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.CheckIfUsingSSL">
            <summary>
            Returns true if LFS connects to the Laserfiche Full-Text Search Engine using TLS/SSL.
            </summary>
            <returns>True if LFS connects to the Laserfiche Full-Text Search Engine using TLS/SSL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Catalog.SetUseSSL(System.Boolean)">
            <summary>
            Set lffts to use (or not to use) SSL connection to connect to lfs
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.OcrState">
            <summary>
            An enumeration of possible OCR states of a Laserfiche document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OcrState.EmptyDocument">
            <summary>
            The document has no pages to OCR.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OcrState.None">
            <summary>
            The document has pages and has not been OCR'd.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OcrState.SomePages">
            <summary>
            Some pages in the document have been OCR'd but others have not been.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.OcrState.AllPages">
            <summary>
            All of the pages in the document have been OCR'd.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SystemColumn">
            <summary>
            An enumeration of supported system columns for entry listings.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ColumnSpecifier">
            <summary>
            Represents a column specification in a Laserfiche entry listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnSpecifier.IsSystemColumn">
            <summary>
            Gets a boolean indicating if the represented column's value type is a system property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnSpecifier.IsFieldColumn">
            <summary>
            Gets a boolean indicating if the represented column's value type is a template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnSpecifier.ColumnType">
            <summary>
            Gets a member of the <c>SystemColumn</c> enumeration which specifies the system
            property the column represents if <c>IsSystemColumn</c> returns true.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnSpecifier.FieldName">
            <summary>
            Gets the name of the template field that the represented column will draw
            values from, if <c>IsFieldColumn</c> is true.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ColumnSpecifier.#ctor(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Initializes a <c>ColumnSpecifier</c> instance representing a system property column.
            </summary>
            <param name="columnType">A value from the <c>SystemColumn</c> enumeration
            specifying the type of system column to represent.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ColumnSpecifier.#ctor(System.String)">
            <summary>
            Initializes a <c>ColumnSpecifier</c> instance representing a template field column.
            </summary>
            <param name="fieldName">A string containing the name of the template field
            to represent.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ColumnSpecifier.op_Equality(Laserfiche.RepositoryAccess.ColumnSpecifier,Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Compares two <c>ColumnSpecifier</c> instances for equality.
            </summary>
            <param name="lhs">A <c>ColumnSpecifier</c> instance to compare.</param>
            <param name="rhs">A <c>ColumnSpecifier</c> instance to compare.</param>
            <returns>True if the two instances have equal values, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ColumnSpecifier.op_Inequality(Laserfiche.RepositoryAccess.ColumnSpecifier,Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Compares two <c>ColumnSpecifier</c> instances for inequality.
            </summary>
            <param name="lhs">A <c>ColumnSpecifier</c> instance to compare.</param>
            <param name="rhs">A <c>ColumnSpecifier</c> instance to compare.</param>
            <returns>True if the two instances have different values, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ColumnSpecifier.Equals(Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Determines if two <c>ColumnSpecifier</c> instances represent the same column
            source.
            </summary>
            <param name="other">A <c>ColumnSpecifier</c> instance to check for equality
            with this instance.</param>
            <returns>True if <paramref name="other"/> represents the same column source
            as this instance.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.HitType">
            <summary>
            Enumeration of available context hit types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.PageContent">
            <summary>
            The context hit is in the main page text.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Note">
            <summary>
            The context hit is in a sticky note annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Callout">
            <summary>
            The context hit is in a callout annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.TextBox">
            <summary>
            The context hit is in a text box annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Edoc">
            <summary>
            The context hit is in an electronic document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Prop">
            <summary>
            The context hit is in an unknow property.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Name">
            <summary>
            The context hit is in an entry name.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Extension">
            <summary>
            The context hit is in an extension.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.VersionGroupNote">
            <summary>
            The context hit is in a version group note.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.VersionComment">
            <summary>
            The context hit is in a version comment.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Field">
            <summary>
            The context hit is in a template field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.SignatureComment">
            <summary>
            The context hit is in a signature comment.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.CertificateSubject">
            <summary>
            The context hit is in a certificate subject.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.TagComment">
            <summary>
            The context hit is in a tag comment.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.AnnotationComment">
            <summary>
            The context hit is in an annotation comment.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.HitType.Attachment">
            <summary>
            The context hit is in an attachment annotation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ContextHit">
            <summary>
            Represents a context hit in a Laserfiche search result.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.HitType">
            <summary>
            Gets the type of context hit this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.IsAnnotationHit">
            <summary>
            Gets a boolean indicating if this context hit occurs on an annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.AnnotationId">
            <summary>
            Gets the ID of the annotation that the context hit is in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.PageNumber">
            <summary>
            Gets the page number in the document of the search hit's context.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.PageOffset">
            <summary>
            Gets the offset from the beginning of the page of the starting character
            of the search hit's context line.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.Context">
            <summary>
            Gets the line of context for the search hit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.Highlight1Offset">
            <summary>
            Gets the character offset from the beginning of the context line of the start
            of the first highlight.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.Highlight1Length">
            <summary>
            Gets the length of the first highlight in characters.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.Highlight2Offset">
            <summary>
            Gets the character offset from the beginning of the context line of the start
            of the second highlight.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.Highlight2Length">
            <summary>
            Gets the length of the second highlight in characters.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.HitWidth">
            <summary>
            Gets the number of words in the context hit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.EdocHitCount">
            <summary>
            The number of hits in the electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.FieldHitCount">
            <summary>
            The number of hits in the template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHit.FieldName">
            <summary>
            The name of a template field containing the hit.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ContextHitListing">
            <summary>
            Representing a listing of search hits in a single document with context information.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHitListing.EntryId">
            <summary>
            Gets the ID of the document that the search hits represented by this
            instance reference.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ContextHitListing.ContextHitCount">
            <summary>
            Gets the number of available context hits for the document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ContextHitListing.GetContextHit(System.Int32)">
            <summary>
            Gets a <c>ContextHit</c> instance representing the context for the search
            hit with the specified index in the document.
            </summary>
            <param name="rowNumber">The 1-based index of the context hit in the
            document to retrieve.</param>
            <returns>A <c>ContextHit</c> instance representing the context for the search
            hit with the specified index in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ContextHitListing.GetContextHits(System.Int32,System.Int32)">
            <summary>
            Gets a collection of <c>ContextHit</c> instances representing a set of
            contiguous search hits with context information starting as the specified
            index in the document.
            </summary>
            <param name="rowNumber">The 1-based starting index of the context hits in the
            document to retrieve.</param>
            <param name="windowSize">The maximum number of <c>ContextHit</c> instances
            to return.</param>
            <returns>An array of <c>ContextHit</c> instances representing search hits
            with context data.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DatabaseInfo">
            <summary>
            Represents the database connection information Laserfiche manages
            for a repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DatabaseInfo.Driver">
            <summary>
            Gets the name of the database driver used for the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DatabaseInfo.DataSource">
            <summary>
            Gets the name of the data source used for the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DatabaseInfo.DatabaseName">
            <summary>
            Gets the name of the database/catalog used for the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DatabaseInfo.UserId">
            <summary>
            Gets the name of the user used to connect to the database for the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DatabaseInfo.IsTrustedAuthUsed">
            <summary>
            Gets a boolean indicating whether trusted authentication is used when connecting
            to the database for the repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.MultiStatusException">
            <summary>
            Represents a collection of errors from Laserfiche.  The primary error is
            available through the <c>ErrorCode</c> property and additional errors
            are stored in an "extra errors" collection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.#ctor">
            <summary>
            Initializes a <c>MultiStatusException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.#ctor(System.Int32)">
            <summary>
            Initializes a new <c>MultiStatusException</c> instance from the specified
            Laserfiche error code.
            </summary>
            <param name="errorCode">The error code of the Laserfiche error to represent.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.#ctor(System.String)">
            <summary>
            Initializes a new <c>MultiStatusException</c> instance with the specified
            message string.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new <c>MultiStatusException</c> instance with the specified
            Laserfiche error code and message.
            </summary>
            <param name="errorCode">The error code of the Laserfiche error to represent.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <c>MultiStatusException</c> instance with the specified
            message string and a reference to the inner exception that is the cause of the error.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">An <c>Exception</c> instance which is the inner
            exception that represents the cause of the error.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.MultiStatusException.ExtraErrorCount">
            <summary>
            Gets a count of the number of errors stored in the extra errors collection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.GetExtraError(System.Int32)">
            <summary>
            Gets information about an error in the extra errors collection.
            </summary>
            <param name="index">A zero-based index of the error in the extra errors
            collection.</param>
            <returns>The message of the error with the specified index in the
            collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MultiStatusException.AddExtraError(Laserfiche.RepositoryAccess.InnerExtraException)">
            <summary>
            Inserts a new error into the extra errors collection.
            </summary>
            <param name="newExtraError">An <c>InnerExtraException</c> instance representing the
            new error to add.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FormLogicRule">
            <summary>
            A collection of static methods to manage Laserfiche field form logic
            rules.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.Create(Laserfiche.RepositoryAccess.FormLogicRuleInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Create a new field form logic rules in the current repository and return a
            new <c>FormLogicRuleInfo</c> instance representing the new rule.
            </summary>
            <param name="info">A <c>FormLogicRuleInfo</c> instance which specifies the
            configuration of the new form logic rule.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FormLogicRuleInfo</c> instance which represents the
            form logic rule that was created.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.Delete(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes all the form logic rules from the specified template and field in
            the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the template containing the form logic rules.</param>
            <param name="fieldId">The ID of the field associated with the form logic rules.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Delete all the form logic rules from the specified template.
            </summary>
            <param name="templateId">The ID of the template containing the form logic rules.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.GetAll(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about all of the field form logic rules configured on
            the specified template in the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the Laserfiche template to retrieve field
            form logic rules for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FormLogicRuleInfoReader</c> which can be used to enumerate
            information about all of the field form logic rules assigned to the specified
            template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.GetInfo(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieve information about the field form logic rule assigned to the specified
            Laserfiche template and field.
            </summary>
            <param name="templateId">The ID of the Laserfiche template to retrieve the
            field form logic rule for.</param>
            <param name="fieldId">The ID of the field in the template associated with the
            requested field form logic rule.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FormLogicRuleInfo</c> instance representing the requested field
            form logic rule.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.GetRelatedFields(System.Int32,System.Int32,Laserfiche.RepositoryAccess.FormLogicRuleRelationship,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an array of IDs representing fields that are related to the specified
            field according to the specified field form logic relationship and form logic
            rule configured on the specified field.
            </summary>
            <param name="templateId">The ID of the template containing the fields
            and the form logic rule.</param>
            <param name="fieldId">The ID of the field associated with the root field
            form logic rule.</param>
            <param name="relationship">A member of the <c>FormLogicRuleRelationship</c>
            enumeration specifying the type of relation between the specified field and
            the returned fields.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An array of IDs representing fields that are related to the specified
            field according to the specified field form logic relationship.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.GetDataReader(System.Int32,System.Int32,Laserfiche.RepositoryAccess.FieldValueCollection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LfDataReader</c> containing the results of the specified
            form logic rule evaluated using the provided field values.
            </summary>
            <param name="templateId">The ID of the Laserfiche template containing the
            field and associated form logic rule.</param>
            <param name="fieldId">The ID of the field whose associated form logic
            rule will be evaluated.</param>
            <param name="fieldVals">The current values of the fields in the template
            to use when evaluating the form logic rule.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LfDataReader</c> containing the results of the specified
            form logic rule evaluated using the provided field values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRule.GetDataReader(System.Int32,System.Int32,Laserfiche.RepositoryAccess.FieldValueCollection,System.Int32@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LfDataReader</c> containing the results of the specified
            form logic rule and query evaluated using the provided field values.
            </summary>
            <param name="templateId">The ID of the Laserfiche template containing the
            field and associated form logic rule.</param>
            <param name="fieldId">The ID of the field whose associated form logic
            rule will be evaluated.</param>
            <param name="fieldVals">The current values of the fields in the template
            to use when evaluating the form logic rule.</param>
            <param name="index">On input, the 0-based index of the query in the rule
            to use, or -1 to let the server pick; on output the 0-based index of the
            query in the rule actually used to select the results.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LfDataReader</c> containing the results of the specified
            form logic rule and query evaluated using the provided field values.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FormLogicRuleRelationship">
            <summary>
            An enumeration of the types of relationships between fields in a form logic
            rule.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FormLogicRuleRelationship.Ancestors">
            <summary>
            Form logic rules which are associated with fields that are referenced in
            the current field's form logic rule.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FormLogicRuleRelationship.Children">
            <summary>
            Form logic rules that consider this form logic rule an ancestor.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FormLogicQuery">
            <summary>
            A query with condition guard in a Laserfiche form logic rule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicQuery.Query">
            <summary>
            Gets or sets the text of the LFQL query.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicQuery.Condition">
            <summary>
            Gets or sets the text of conditional expression guard.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicQuery.ValueRequired">
            <summary>
            Gets or sets a boolean indicating if the query must return a
            non-empty result.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FormLogicRuleInfo">
            <summary>
            Represents a form logic rule associated with a Laserfiche template and field
            definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.#ctor">
            <summary>
            Initializes a new instance of <c>FormLogicRuleInfo</c> with no queries
            and no bindings and not associated with any field.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.#ctor(Laserfiche.RepositoryAccess.FormLogicRuleInfo)">
            <summary>
            Initializes an instance of <c>FormLogicRuleInfo</c> that copies settings from
            an existing <c>FormLogicRuleInfo</c> instance.
            </summary>
            <param name="info">An instance of <c>FormLogicRuleInfo</c> to draw settings from.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.TemplateId">
            <summary>
            Gets or sets the ID of the template the represented form logic rule is
            associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.FieldId">
            <summary>
            Gets or sets the ID of the field the represented form logic rule is
            associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.IsValueRequired">
            <summary>
            Gets or sets a boolean indicating if the client should restrict the user to
            inputting values in the returned values or not.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.Validate">
            <summary>
            Gets or sets a boolean indicating if Laserfiche should validate that the value
            set for the associated field is in the result set.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.BoundColumn">
            <summary>
            Gets or sets the name of the bound column when simple binding is used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.BoundTable">
            <summary>
            Gets or sets the id of the bound table when simple binding is used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.SortColumn">
            <summary>
            Gets or sets the name of the column in the bound table to sort by when simple
            binding is used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.SortDirection">
            <summary>
            Gets or sets the direction of the sort when simple binding is used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.IsSimple">
            <summary>
            Gets a boolean indicating if simple binding is configured.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.ParentFields">
            <summary>
            Gets or sets the IDs of the parent fields in the template according to the
            represented form logic rule.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FormLogicRuleInfo.Queries">
            <summary>
            Gets or sets the list of queries and their conditional guards for the
            represented form logic rule.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.GetRelatedFields(Laserfiche.RepositoryAccess.FormLogicRuleRelationship)">
            <summary>
            Gets the IDs of fields in the template that are related to the field associated
            with the represented form logic rule according to the specified form logic rule
            relationship.
            </summary>
            <param name="relationship">A member of the <c>FormLogicRuleRelationShip</c>
            enumeration specifying the type of relationship between the associated field
            and the returned fields.</param>
            <returns>An array of IDs of fields that are related to the field associated
            with the represented rule according to the specified form logic rule
            relationship.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.GetDataReader(Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Returns a <c>LfDataReader</c> containing the results of the represented
            form logic rule evaluated using the provided field values.
            </summary>
            <param name="fieldVals">The current values of the fields in the template
            to use when evaluating the form logic rule.</param>
            <returns>A <c>LfDataReader</c> containing the results of the represented
            form logic rule evaluated using the provided field values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.GetDataReader(Laserfiche.RepositoryAccess.FieldValueCollection,System.Int32@)">
            <summary>
            Returns a <c>LfDataReader</c> containing the results of the represented
            form logic rule and query evaluated using the provided field values.
            </summary>
            <param name="fieldVals">The current values of the fields in the template
            to use when evaluating the form logic rule.</param>
            <param name="index">On input, the 0-based index of the query in the rule
            to use, or -1 to let the server pick; on output the 0-based index of the
            query in the rule actually used to select the results.</param>
            <returns>A <c>LfDataReader</c> containing the results of the represented
            form logic rule and query evaluated using the provided field values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FormLogicRuleInfo.Delete">
            <summary>
            Marks the represented form logic rule for deletion when the session's changes
            are saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FormLogicRuleInfoReader">
            <summary>
            Enumerates the specified set of form logic rules in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DirectoryEntryType">
            <summary>
            An enumeration of LDAP directory object types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DirectoryEntryType.Unknown">
            <summary>
            The directory entry is of an unknown type or one that doesn't fit in the
            other categories.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DirectoryEntryType.User">
            <summary>
            The directory entry is a user account.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DirectoryEntryType.Group">
            <summary>
            The directory entry is a group account.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DirectoryEntryType.Location">
            <summary>
            The directory entry represents a location.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapPropertyType">
            <summary>
            An enumeration of LDAP property types.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfPropertyValueCollection">
            <summary>
            A collection of values for a single LDAP property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfPropertyValueCollection.PropertyName">
            <summary>
            Gets the name of the LDAP property.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfPropertyValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns>True if the value was found in the collection, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies the elements of the collection to a System.Array, starting at a specified
            index in the array.
            </summary>
            <param name="array">The array that will hold the values in the collection.</param>
            <param name="index">The starting index in the array to use when copying values.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfPropertyValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific value in the collection.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns>The index of the specified value in the collection, or -1 if the
            value is not in the collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfPropertyValueCollection.Add(System.Object)">
            <summary>
            Adds a value to the collection.
            </summary>
            <param name="value">The value to add to the collection.</param>
            <returns>The index in the collection of the newly added value.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfPropertyCollection">
            <summary>
            A collection of LDAP properties and their values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfPropertyCollection.LdapServerProfileId">
            <summary>
            Gets the Laserfiche LDAP server profile ID that is associated with the
            stored LDAP properties.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfDirectoryEntry">
            <summary>
            Represents an object in an LDAP directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectoryEntry.Session">
            <summary>
            Gets the Laserfiche session used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectoryEntry.DistinguishedName">
            <summary>
            Gets the distinguished name of the represented object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectoryEntry.Properties">
            <summary>
            Gets the represented object's properties and their values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectoryEntry.DirectoryEntryType">
            <summary>
            Gets a member of the <c>DirectoryEntryType</c> enumeration which indicates
            the type of LDAP object represented.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectoryEntry.LdapServerProfileId">
            <summary>
            Gets the Laserfiche LDAP server profile ID that is associated with the
            LDAP object.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfDirectoryEntry.GetChildren(System.Int32,System.Boolean,System.Boolean,Laserfiche.RepositoryAccess.LfDirectorySearchFlags)">
            <summary>
            Returns a <c>LfSearchResultCollection</c> instance that contains the LDAP objects
            which are children of the represented LDAP object.
            </summary>
            <param name="pageSize">The number of LDAP objects to request per page of
            results.</param>
            <param name="loadProperties">A boolean indicating whether to load the properties
            for the children.</param>
            <param name="asynchronous">A boolean indicating if the result collection should
            be populated asychronously.</param>
            <param name="flags">One or more <c>LfDirectorySearchFlags</c> controlling how the
            search results are populated.</param>
            <returns>A <c>LfSearchResultCollection</c> instance that contains the LDAP objects
            which are children of the represented LDAP object.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfSearchResultCollection">
            <summary>
            The results of an LDAP search operation submitted using <c>LfDirectorySearcher</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfSearchResultCollection.OperationUuid">
            <summary>
            Gets the UUID of the long operation corresponding to the search request.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfSearchResultCollection.Session">
            <summary>
            Gets the Laserfiche session being used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfSearchResultCollection.LdapServerProfileId">
            <summary>
            Gets the ID of the LDAP server profile used by the search.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfSearchResultCollection.Operation">
            <summary>
            Gets the <c>LongOperation</c> instance representing the search operation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfSearchResultCollection.GetEnumerator">
            <summary>
            Gets the result enumerator.
            </summary>
            <returns>The result enumerator</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfSearchResultCollection.Close">
            <summary>
            Releases all the resources allocated for the corresponding search.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfDirectorySearchFlags">
            <summary>
            Flags to control how <c>LfDirectorySearcher</c> processes a search.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LfDirectorySearchFlags.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LfDirectorySearchFlags.Users">
            <summary>
            Limit search results to user objects.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LfDirectorySearchFlags.Groups">
            <summary>
            Limit search results to group objects.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LfDirectorySearchFlags.Locations">
            <summary>
            Limit search results to location objects.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LfDirectorySearcher">
            <summary>
            Submits LDAP searches and processes the results.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfDirectorySearcher.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>LfDirectorySearcher</c> instance.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.Session">
            <summary>
            Gets or sets the Laserfiche session to use.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.LdapServerProfileId">
            <summary>
            Gets or sets the ID of the Laserfiche LDAP server profile to use.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.Filter">
            <summary>
            Gets or sets the LDAP filter to use in the search.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.PageSize">
            <summary>
            Gets or sets the result page size, counted in number of objects.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.Flags">
            <summary>
            Gets or sets members of the <c>LfDirectorySearchFlags</c> enumeration that
            controls how searches will be submitted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.PropertiesToLoad">
            <summary>
            Gets or sets which LDAP properties will be loaded in the results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.SearchScope">
            <summary>
            Gets or sets a member of the <c>SearchScope</c> enumeration which controls the
            scope of the LDAP search, relative to the root.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.SearchRoot">
            <summary>
            Gets or sets a <c>LfDirectoryEntry</c> instance representing the root LDAP object
            to start the search from.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.Asynchronous">
            <summary>
            Gets or sets a boolean indicating if the search should be run asynchronously.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LfDirectorySearcher.LoadProperties">
            <summary>
            Gets or sets a boolean indicating if LDAP properties should be loaded in the
            results.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfDirectorySearcher.FindAll">
            <summary>
            Submit the search to the currently configured LDAP server.
            </summary>
            <returns>A <c>LfSearchResultCollection</c> instance representing the results
            of the LDAP search operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LfDirectorySearcher.FindChildren">
            <summary>
            Submit the search to the currently configured LDAP server, restricted to the
            current object's children.
            </summary>
            <returns>A <c>LfSearchResultCollection</c> instance representing the results
            of the LDAP search operation.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapAccountReferenceReader">
            <summary>
            Provides the ability to enumerate LDAP account references which match
            the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CommonAccessRule">
            <summary>
            The base class for types which represent Laserfiche access control entry (ACE)
            structures.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CommonAccessRule.AccountReference">
            <summary>
            Gets an <c>AccountReference</c> instance which represents the user the
            ACE applies to.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheObjectSecurity">
            <summary>
            Base class for classes which represent Laserfiche object access control lists (ACL).
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccessRuleCollection">
            <summary>
            Represents a read-only collection of <c>CommonAccessRule</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessRuleCollection.CopyTo(System.Security.AccessControl.AuthorizationRule[],System.Int32)">
            <summary>
            Copies the <c>CommonAccessRule</c> references to the specified <c>AuthorizationRule</c>
            array.
            </summary>
            <param name="rules">An array that will contain a copy of the references.</param>
            <param name="index">The index in the <paramref name="rules"/> array to start
            copying to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccessRuleCollection.CopyTo(Laserfiche.RepositoryAccess.CommonAccessRule[],System.Int32)">
            <summary>
            Copies the <c>CommonAccessRule</c> references to the specified <c>CommonAccessRule</c>
            array.
            </summary>
            <param name="rules">An array that will contain a copy of the references.</param>
            <param name="index">The index in the <paramref name="rules"/> array to start
            copying to.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LongOperationReader">
            <summary>
            Retrieves information about the specified active long operations in Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.OfflineLocale">
            <summary>
            Provides an implementation of the <c>ILfLocale</c> interface without
            requiring a Laserfiche <c>Session</c> instance or to be logged on to
            Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.OfflineLocale.#ctor">
            <summary>
            Initializes an <c>OfflineLocale</c> instance matching the locale settings
            of the current Windows session.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.OfflineLocale.#ctor(System.String,System.String)">
            <summary>
            Initializes an <c>OfflineLocale</c> instance with the specified locale and
            time zone.
            </summary>
            <param name="localeName">The name of the locale to use.  Defaults
            to the process' current Windows locale if left blank or null.</param>
            <param name="tzid">The ID of the time zone to use, specified as an Olson/IETF
            time zone ID.  Defaults to the process' current Windows time zone if
            left blank or null.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LabelConflictStrategy">
            <summary>
            Specifies what action to take when setting a label on a document version.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LabelConflictStrategy.Add">
            <summary>
            Adds the specified label while leaving existing labels in place.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LabelConflictStrategy.Set">
            <summary>
            Clears any existing labels and adds the specified label.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentVersion">
            <summary>
            Represents a version of a versioned Laserfiche document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.#ctor(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new <c>DocumentVersion</c> instance for the specified
            entry with the given version number.
            </summary>
            <param name="entryId">The ID of the entry that the version will reference.</param>
            <param name="version">The version number of the version.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.#ctor(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new <c>DocumentVersion</c> instance for the specified
            entry with the given label.
            </summary>
            <param name="entryId">The ID of the entry that the version will reference.</param>
            <param name="label">The label of the version.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Session">
            <summary>
            Gets the Laserfiche session associated with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.EntryId">
            <summary>
            Gets the entry ID of the associated document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Version">
            <summary>
            Gets the version number of the represented document version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.ElecDocumentSize">
            <summary>
            Gets the size of the electronic document attached to the represented document
            version, if there is one, in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Extension">
            <summary>
            Gets the extension for the document version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.MimeType">
            <summary>
            Gets the MIME type of the electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.ElecDocumentLastModifiedUtc">
            <summary>
            Gets the last modification date of the electronic document in
            Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Labels">
            <summary>
            Gets the (potentially empty) collection of labels associated with the
            represented version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.SignerSubjects">
            <summary>
            Gets a collection of subject names for each digital certificate that was
            used to create the digital signatures associated with the document version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Comment">
            <summary>
            Gets the comment associated with the represented version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.CreateDate">
            <summary>
            Gets a <c>DateTime</c> value representing the date and time when the
            represented version was created, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.CreateDateUtc">
            <summary>
            Gets a <c>DateTime</c> value representing the date and time when the
            represented version was created, in Universal Time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.CreatorSid">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the security
            identifier (SID) of the user that created the represented version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.Creator">
            <summary>
            Gets the account name of the user that created the represented version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.IsConnected">
            <summary>
            Gets a boolean indicating if this instance is associated with an active
            Laserfiche session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.IsExpunged">
            <summary>
            Gets a boolean indicating if this version has been expunged from
            the record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.TemplateName">
            <summary>
            Gets the name of the template assigned to the represented document version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentVersion.ChangeReport">
            <summary>
            Gets a <c>DocumentDifferenceReport</c> summarizing the changes between this version
            and the prior version of the document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.AddLabel(System.String,Laserfiche.RepositoryAccess.LabelConflictStrategy)">
            <summary>
            Adds or sets a label on the represented document version.  This operation occurs
            immediately.
            </summary>
            <param name="label">The name of the label.</param>
            <param name="onConflict">A value from the <c>LabelConflictStrategy</c>
            enumeration which specifies what action to take when encountering
            an existing label on the version.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.RemoveLabel(System.String)">
            <summary>
            Removes a label from the represented document version.  This operation occurs
            immediately.
            </summary>
            <param name="label">An existing label on the version to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.ClearLabels">
            <summary>
            Removes any labels applied to the represented document version.  This operation
            occurs immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.Delete(System.String)">
            <summary>
            Deletes the current version of the document, while leaving other versions intact.
            This operation occurs immediately.
            </summary>
            <param name="note">A short note that will appear in the version history in place
            of the deleted version's comments.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.Refresh">
            <summary>
            Retrieves data about the represented document version from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.Save">
            <summary>
            Saves changes to the represented document version to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyPagesTo(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Copies the specified pages in the represented document version to the
            specified destination document.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance specifying which
            pages in the source historical document version to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance representing
            the destination document.</param>
            <param name="destPageNum">The starting page number in the destination
            at which to place the copied pages.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyPagesTo(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,System.Boolean)">
            <summary>
            Copies the specified pages in the represented document version to the
            specified destination document.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance specifying which
            pages in the source historical document version to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance representing
            the destination document.</param>
            <param name="destPageNum">The starting page number in the destination
            at which to place the copied pages.</param>
            <param name="copyAnnotations">A boolean indicating whether to copy annotations
            over into the destination.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyPagesTo(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Copies the specified pages in the represented document version to the
            specified destination document.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance specifying which pages in
            the source historical document version to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance representing
            the destination document.</param>
            <param name="destPageNum">The starting page number in the destination
            at which to place the copied pages.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyPagesTo(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,System.Boolean)">
            <summary>
            Copies the specified pages in the represented document version to the
            specified destination document.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance specifying which pages in
            the source historical document version to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance representing
            the destination document.</param>
            <param name="destPageNum">The starting page number in the destination
            at which to place the copied pages.</param>
            <param name="copyAnnotations">A boolean indicating whether to copy annotations
            over into the destination.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyTo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Copies the contents of the represented version to a new Laserfiche document.
            </summary>
            <param name="parent">The destination folder.</param>
            <param name="name">The name of the new document.</param>
            <param name="options">One or more members of the <c>EntryNameOption</c> enumeration
            that will control how the new entry is named.</param>
            <returns>The entry ID of the new document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyTo(Laserfiche.RepositoryAccess.FolderInfo,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Copies the contents of the represented version to a new Laserfiche document.
            </summary>
            <param name="parent">The destination folder.</param>
            <param name="name">The name of the new document.</param>
            <param name="targetVol">The name of the volume that the new document will
            reside in, or null for the default.</param>
            <param name="options">One or more members of the <c>EntryNameOption</c> enumeration
            that will control how the new entry is named.</param>
            <returns>The entry ID of the new document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.CopyTo(System.String,System.String,System.String@,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Copies the contents of the represented version to a new Laserfiche document.
            </summary>
            <param name="newPath">The path in the current repository to the destination
            document.</param>
            <param name="targetVol">The name of the volume that the new document will
            reside in, or null for the default.</param>
            <param name="realPath">A reference to a string that will contain the actual
            path chosen by the server for the copy operation.</param>
            <param name="options">One or more members of the <c>EntryNameOption</c> enumeration
            that will control how the new entry is named.</param>
            <returns>The entry ID of the new document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetFieldInfo(System.String)">
            <summary>
            Returns a <c>FieldInfo</c> instance representing information about the
            specified field definition.
            </summary>
            <param name="fieldName">The name of a template field to return information
            about.</param>
            <returns>A <c>FieldInfo</c> instance representing information about the
            specified field definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetAlternateEdoc(System.String)">
            <summary>
            Returns an <c>AlternateEdoc</c> instance which describes the specified
            alternate electronic document associated with the represented document version.
            </summary>
            <param name="altEdocName">The name of the alternate electronic document
            to retrieve information about.</param>
            <returns>An <c>AlternateEdoc</c> instance which describes the specified
            alternate electronic document associated with the represented document
            version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetAlternateEdocs">
            <summary>
            Returns an <c>AlternateEdocReader</c> instance which can be used to
            retrieve information about all of the alternate electronic documents
            associated with the represented document version.
            </summary>
            <returns>An <c>AlternateEdocReader</c> instance which can be used to
            retrieve information about all of the alternate electronic documents
            associated with the represented document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetAnnotations">
            <summary>
            Returns a collection of <c>AnnotationBase</c> derived objects which
            represent all of the annotations stored in the represented document
            version.
            </summary>
            <returns>A collection of <c>AnnotationBase</c> derived objects which
            represent all of the annotations stored in the represented document
            version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetFieldValue(System.String)">
            <summary>
            Retrieves a field value that is set on the represented document version.
            </summary>
            <param name="fieldName">The name of the field to retrieve the value of.</param>
            <returns>The value of the specified field set on the represented document
            version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetFieldValues">
            <summary>
            Returns a <c>FieldValueCollection</c> instance which represents a
            collection of all the set template field values on the represented
            document version.
            </summary>
            <returns>A <c>FieldValueCollection</c> instance which represents a
            collection of all the set template field values on the represented
            document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetManifest">
            <summary>
            Generates a document manifest for the represented document version.
            </summary>
            <returns>The document manifest for the represented document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetManifest(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.DocumentSignatureInfo})">
            <summary>
            Generates a document manifest for the represented document version and
            the specified collection of digital signatures.
            </summary>
            <param name="targetSigs">A collection of target digital signatures to include
            in the manifest.</param>
            <returns>The document manifest for the represented document version.</returns>
            <remarks>
            This method is intended to be used when generating manifests suitable for
            counter-signatures.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetPageInfo(System.Int32)">
            <summary>
            Returns a <c>PageInfo</c> instance which describes the specified page
            in the represented document version.
            </summary>
            <param name="pageNum">The page number of the document to retrieve
            information about.</param>
            <returns>A <c>PageInfo</c> instance which describes the specified page
            in the represented document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetPageInfos">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the document.
            </summary>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetPageInfos(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to retrieve
            information about the specified page range in the represented document
            version.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance specifying the range
            of pages to retrieve information on.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to retrieve
            information about the specified page range in the represented document
            version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetPageInfos(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to retrieve
            information about the specified set of pages in the represented document
            version.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance specifyign the set of
            pages to retrieve information on.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to retrieve
            information about the specified set of pages in the represented document
            version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetSignatures">
            <summary>
            Returns a <c>DocumentSignatureInfoCollection</c> which represents a collection of
            the electronic signatures associated with the represented document version.
            </summary>
            <returns>A <c>DocumentSignatureInfoCollection</c> which represents a collection of
            the electronic signatures associated with the represented document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetLatestVersion">
            <summary>
            Returns an <c>IDocumentContents</c> reference which represents the latest version
            of the document.
            </summary>
            <returns>An <c>IDocumentContents</c> reference which represents the latest version
            of the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetStatistics">
            <summary>
            Returns a <c>DocumentStatistics</c> instance which contains a summary
            report of the document's contents.
            </summary>
            <returns>A <c>DocumentStatistics</c> instance which contains a summary
            report of the document's contents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetThumbnails(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Returns a <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified range of pages in the represented
            document version.
            </summary>
            <param name="pageRange">A <c>PageRange</c> value specifying the range
            of pages to retrieve image thumbnails for.</param>
            <returns>A <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified range of pages.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetThumbnails(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Returns a <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified set of pages in the represented
            document version.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance specifying the set
            of pages to retrieve image thumbnails for.</param>
            <returns>A <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified set of pages.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.GetTokenSubstitutionContext">
            <summary>
            Returns a token substitution context for the represented document version.
            </summary>
            <returns>A token substitution context for the represented document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.ReadEdoc(System.String@)">
            <summary>
            Returns a <c>LaserficheReadStream</c> instance which can be used to read the contents
            of the electronic document associated with the represented document
            version, if any.
            </summary>
            <param name="contentType">Contains the MIME type of the electronic document
            on output.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the contents
            of the electronic document associated with the document version, if any.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.ReadEdoc(Laserfiche.RepositoryAccess.StreamRange,System.String@)">
            <summary>
            Returns a <c>LaserficheReadStream</c> instance which can be used to read the contents
            of the electronic document associated with the represented document
            version, if any.
            </summary>
            <param name="byteRange">A <c>StreamRange</c> value indicating the byte range
            to read.</param>
            <param name="contentType">Contains the MIME type of the electronic document
            on output.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the
            contents of the electronic document, for the specified byte range, associated
            with the document version.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentVersion.Sign(Laserfiche.RepositoryAccess.DocumentSignatureInfo)">
            <summary>
            Digitally signs the represented document version.
            </summary>
            <param name="signature">A <c>DocumentSignatureInfo</c> instance which
            contains the settings used to sign the document version.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.ServerAdminCollection">
            <summary>
            Represents a collection of Laserfiche server administrator user identities.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminCollection.CopyTo(System.Security.Principal.IdentityReference[])">
            <summary>
            Copies the collection of IdentityReference instances to the specified array.
            </summary>
            <param name="array">An IdentityReference array at least as large as the
            collection which will contain a copy of the references in the represented
            collection.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminCollection.CopyTo(System.Int32,System.Security.Principal.IdentityReference[],System.Int32,System.Int32)">
            <summary>
            Copies a portion of the collection of IdentityReference instances to the specified array.
            </summary>
            <param name="index">The starting index in the collection from which to begin copying.</param>
            <param name="array">The destination array where the references will be copied to.</param>
            <param name="arrayIndex">The index in the array from where to begin writing.</param>
            <param name="count">The number of references to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase">
            <summary>
            Represents a Laserfiche server's administrator user database.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.Count">
            <summary>
            Gets a count of the number of accounts stored in the database.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.#ctor(System.String)">
            <summary>
            Initializes a <c>ServerAdminDatabase</c> instance for the named server.
            </summary>
            <param name="serverName">The name of the server of which its administrator's database shall be accessed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.#ctor(Laserfiche.RepositoryAccess.Server)">
            <summary>
            Initializes a <c>ServerAdminDatabase</c> instance for the specified server.
            </summary>
            <param name="server">A <c>Server</c> instance representing the server
            of which its administrator's database shall be accessed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.AddAdministratorAccount(System.Security.Principal.IdentityReference)">
            <summary>
            Adds an account to the administrator users' database.
            </summary>
            <param name="account">An <c>IdentityReference</c> instance referring to the account to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.RemoveAdministratorAccount(System.Security.Principal.IdentityReference)">
            <summary>
            Removes an account from the administrator users' database.
            </summary>
            <param name="account">An <c>IdentityReference</c> instance referring to the account to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.GetServerAdminCollection">
            <summary>
            Returns a <c>ServerAdminCollection</c> instance that contains a collection of
            account identities of server administrators.
            </summary>
            <returns>A <c>ServerAdminCollection</c> instance that contains a collection of
            account identities of server administrators.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerAdminDatabase.Refresh">
            <summary>
            Retrieves data from the Laserfiche server instance.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.DetachRepositoryOptions">
            <summary>
            Options which affect repository detach operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.DetachRepositoryOptions.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.DetachRepositoryOptions.ForceUnmount">
            <summary>
            Force the repository to be unmounted if necessary.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.DeleteRepositoryOptions">
            <summary>
            Options which affect repository deletion operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.DeleteRepositoryOptions.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.DeleteRepositoryOptions.ForceUnmount">
            <summary>
            Force the repository to be unmounted if necessary.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.UnmountRepositoryOptions">
            <summary>
            Options which affect repository unmount operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.UnmountRepositoryOptions.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Admin.UnmountRepositoryOptions.ForceUnmount">
            <summary>
            Force the repository to be unmounted if necessary.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Admin.ServerManagement">
            <summary>
            Provides management capabilities for a Laserfiche server.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.#ctor(Laserfiche.RepositoryAccess.Server)">
            <summary>
            Initializes an instance of the <c>ServerManagement</c> class.
            </summary>
            <param name="server">A <c>Server</c> instance which specifies the server
            to perform management operations on.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.#ctor(System.String)">
            <summary>
            Initializes an instance of the <c>ServerManagement</c> class.
            </summary>
            <param name="serverName">The host name of the computer running the Laserfiche
            server instance to manage.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.Name">
            <summary>
            Gets the name of the server that is being managed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.Port">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            HTTP requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.SecurePort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            HTTP over TLS/SSL requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.NotificationsPort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            LRNP requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.VersionNumber">
            <summary>
            The server's version number in packed format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.DefaultRepository">
            <summary>
            Gets or sets the name of the configured default repository, if any.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.LfapiPort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            LFAPI requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.AccessLogPath">
            <summary>
            Gets or sets the configured path to the HTTP access log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.AccessLogFormat">
            <summary>
            Gets or sets the configured HTTP access log format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Admin.ServerManagement.FlexibleLicensing">
            <summary>
            Gets or sets a boolean indicating whether or not flexibile licensing is enabled.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.CheckHasAdministratorAccess">
            <summary>
            Determines if the current Windows user has server administrator (also called
            server manager) access to the Laserfiche server.
            </summary>
            <returns>True if the current user has server administrator access to the
            Laserfiche server, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.CreateRepository(System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new repository in the specified Laserfiche instance.
            </summary>
            <param name="repositoryName">The name of the new repository.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS to use.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
            <param name="volumeName">The name of the initial Laserfiche volume.</param>
            <param name="volumePath">The fixed path to the initial volume.</param>
            <param name="createDatabase">A boolean indicating whether to create the
            database automatically or to use an existing database.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.CreateRepository(Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Creates a new repository in the specified Laserfiche instance.
            </summary>
            <param name="data">An instance of <c>RepositoryProperties</c> specifying the
            settings for the new repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.AttachRepository(System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Attaches an existing repository to a Laserfiche instance.
            </summary>
            <param name="repositoryName">The name of the repository after it is
            attached.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS the repository uses.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.AttachRepository(Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Attaches an existing repository to a Laserfiche instance.
            </summary>
            <param name="data">An instance of <c>RepositoryProperties</c> specifying the
            settings for the repository to attach.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.DetachRepository(System.String,Laserfiche.RepositoryAccess.Admin.DetachRepositoryOptions)">
            <summary>
            Detaches the specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to detach from
            Laserfiche.</param>
            <param name="options">Members of the <c>DetachRepositoryOptions</c> enumeration
            which specifies options for the deatch operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.DeleteRepository(System.String,Laserfiche.RepositoryAccess.Admin.DeleteRepositoryOptions)">
            <summary>
            Deletes the specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
            <param name="options">Members of the <c>DeleteRepositoryOptions</c>
            enumeration which specifies options for the repository deletion operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.MountRepository(System.String)">
            <summary>
            Mount an specified repository to the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.UnmountRepository(System.String,Laserfiche.RepositoryAccess.Admin.UnmountRepositoryOptions)">
            <summary>
            Unmount an specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
            <param name="options">The options for the unmount operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.GetSessionInfo(System.Int32)">
            <summary>
            Returns a <c>SessionInfo</c> instance which represents information about
            the specified Laserfiche session.
            </summary>
            <param name="sessionId">The ID of the active Laserfiche session to return
            information about.</param>
            <returns>A <c>SessionInfo</c> instance which represents information about
            the specified Laserfiche session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.EnumSessions">
            <summary>
            Enumerates the active sessions in the Laserfiche server.
            </summary>
            <returns>A <c>ServerSessionInfoReader</c> instance used to enumerate sessions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.TerminateSession(System.Int32)">
            <summary>
            Terminates the specified session.
            </summary>
            <param name="sessionId">The ID of the session to terminate.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.Save">
            <summary>
            Saves pending modifications to properties to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.GetDriveLetters">
            <summary>
            Returns a collection of disk drive letters and their types on the server.
            </summary>
            <returns>A collection of disk drive letters and their types on the server.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Admin.ServerManagement.GetDirectoryNames(System.String)">
            <summary>
            Returns a collection of names of subdirectories in the specified parent
            directory on the server.
            </summary>
            <param name="parentPath">The path to the parent directory on the server.</param>
            <returns>A collection of names of subdirectories in the specified parent
            directory on the server.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SslException">
            <summary>
            Represents an error indicating an error with a TLS/SSL connection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SslException.#ctor">
            <summary>
            Initializes a <c>SslException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SslException.#ctor(System.String)">
            <summary>
            Initializes a <c>SslException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SslException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>SslException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageTextWord">
            <summary>
            Represents a word in a document's text stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageTextWord.Text">
            <summary>
            The represented word, as a <c>String</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageTextWord.TrailingDelimiter">
            <summary>
            The delimiters following the text of the word.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageTextWord.StartPosition">
            <summary>
            The position in the page text of the start of the word.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageTextWord.EndPosition">
            <summary>
            The position in the page text of the end of the word.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageTextWord.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>PageTextWord</c> instance.
            </summary>
            <param name="wordText">A string containing the text of the word.</param>
            <param name="trailingDelimiter">A string containing the delimiter following the word.</param>
            <param name="startPosition">An integer representing the position in the 
            text of the start of the word.</param>
            <param name="endPosition">An integer representing the position in the 
            text of end start of the word</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagEntryAccessRule">
            <summary>
            An access control list entry (ACE) for a Laserfiche tag that specified which
            feature rights are granted or denied to a specified trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagEntryAccessRule.FeatureRights">
            <summary>
            Gets the feature rights set in the represented tag access control entry (ACE).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntryAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.FeatureRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified ACE type (i.e., allowed or denied) with the specified trustee
            and feature rights.
            </summary>
            <param name="identity">The trustee identity for the ACE.</param>
            <param name="tagFRs">One or more feature rights to enable in the ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration specifying the type of ACE.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntryAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.FeatureRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified ACE type (i.e., allowed or denied) with the specified trustee
            and feature rights.
            </summary>
            <param name="identity">The trustee identity for the ACE.</param>
            <param name="tagFRs">One or more feature rights to enable in the ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration specifying the type of ACE.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagEntrySecurity">
            <summary>
            Represents an access control list (ACL) for ACLs.
            </summary>
            <remarks>
            Tag ACLs work differently than other types of object ACLs in Laserfiche.
            They are used to control which feature rights are present on entries
            rather than controlling access to tags themselves.  Tag ACLs from all
            the tags assigned to an entry are combined into a single "super ACL"
            and effective feature rights (not entry access rights) are calculated
            from this.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagEntrySecurity.AccessRightType">
            <summary>
            Gets the <c>Type</c> instance for the <c>FeatureRights</c> enumeration, which
            is the access right type for <c>TagEntrySecurity</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagEntrySecurity.AccessRuleType">
            <summary>
            Gets the <c>Type</c> instance for the <c>TagEntryAccessRule</c> type, which
            represents an access control entry (ACE) for tag ACLs.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.AccessRuleFactory(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.FeatureRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Returns a new <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified type referencing the the specified trustee with the specified
            feature rights.
            </summary>
            <param name="acctReference">A reference to the trustee that the ACE shall refer to.</param>
            <param name="featureRights">The set of feature rights that will be set in the ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration specifying
            the type of ACE to return.</param>
            <returns>A new <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified type referencing the the specified trustee with the specified
            feature rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.FeatureRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Returns a new <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified type referencing the the specified trustee with the specified
            feature rights.
            </summary>
            <param name="identityReference">A reference to the identity of the trustee
            that the ACE shall refer to.</param>
            <param name="featureRights">The set of feature rights that will be set in the ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            specifying the type of ACE to return.</param>
            <returns>A new <c>TagEntryAccessRule</c> instance representing a tag ACE of
            the specified type referencing the the specified trustee with the specified
            feature rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.AddAccessRule(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Adds a new ACE to the represented tag ACL.
            </summary>
            <param name="rule">A <c>TagEntryAccessRule</c> instance representing the
            tag ACE to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.RemoveAccessRule(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Removes an ACE from the represented tag ACL.
            </summary>
            <param name="rule">A <c>TagEntryAccessRule</c> instance currently in the ACL.</param>
            <returns>True if the ACE was found and removed, false if the ACE was not
            found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.RemoveAccessRuleAll(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Removes all ACEs with a security identifier (SID) that matches the SID in the
            specified ACE.
            </summary>
            <param name="rule">An ACE containing the SID for which all matching ACEs in the
            ACL shall be removed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.RemoveAccessRuleSpecific(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Removes all ACEs that exactly match the specified ACE.
            </summary>
            <param name="rule">The ACE to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.ResetAccessRule(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Removes all ACEs from the represented ACL and then adds the specified ACE.
            </summary>
            <param name="rule">The ACE to add after the ACL is made empty.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagEntrySecurity.SetAccessRule(Laserfiche.RepositoryAccess.TagEntryAccessRule)">
            <summary>
            Removes all ACEs that contain the same security identifier (SID) as the
            specified ACE and then adds the specified ACE to the ACL.
            </summary>
            <param name="rule">The ACE containing the SID of the ACEs to remove and
            the ACE to add after removal.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ThumbnailReader">
            <summary>
            Provides the ability to read the requested collection of Laserfiche thumbnails.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CloudTicket">
            <summary>
            Represents a Laserfiche hosted Account Control Service (ACS) session key,
            which is used to access hosted Laserfiche services.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudTicket.#ctor(System.String,System.Uri)">
            <summary>
            Initializes an instance of <c>CloudTicket</c> when the caller already has
            a valid Laserfiche ACS session key.
            </summary>
            <param name="sessionKey">An ACS session key.</param>
            <param name="endpoint">The ACS endpoint which issued the session key.</param>
            <remarks>
            This constructor is primarily intended for Laserfiche internal use.
            Public consumers of this class should instead use the <c>GetTicket</c>
            factory method to obtain <c>CloudTicket</c> instances.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicket.SessionKey">
            <summary>
            Gets the session key for for the login session represented by this ticket.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicket.Endpoint">
            <summary>
            Gets the end-point which issued the login session represented by this ticket.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudTicket.GetSamlToken">
            <summary>
            Returns a string containing the SAML 2.0 token representing the security principal
            of the associated login session.
            </summary>
            <returns>A string containing the SAML 2.0 token representing the security principal
            of the associated login session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudTicket.CancelSession">
            <summary>
            Cancels the session associated with the current <c>CloudTicket</c> instance.
            This is equivalent to signing out from Laserfiche Cloud.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.CloudTicket.GetTicket(Laserfiche.RepositoryAccess.CloudTicketRequestSettings)">
            <summary>
            Acquires a session token, represented by a <c>CloudTicket</c> instance, for
            the Laserfiche Cloud given the specified credentials.
            </summary>
            <param name="requestSettings">Parameters to pass to the Laserfiche Cloud
            service when acquiring the session token.</param>
            <returns>A <c>CloudTicket</c> instance which represents the session token.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CloudTicketRequestSettings">
            <summary>
            Settings that control how the Laserfiche <c>CloudTicket</c> instance should be
            acquired the hosted Laserfiche account control system (ACS) service.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.CustomEndpoint">
            <summary>
            Gets or sets an optional end-point used to interact with the ACS to create
            session keys and retrieve security tokens.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.AccountId">
            <summary>
            Gets or sets the account ID for the customer account of the user requesting the login.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.Password">
            <summary>
            Gets or sets the password to log in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.OneTimePassword">
            <summary>
            Gets or sets a one-time password used for multi-factor authentication.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.CloudTicketRequestSettings.ClientAddress">
            <summary>
            Optional: the client's IP address.  Intended to be used by application
            servers making requests on behalf of a client.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.UploadFile">
            <summary>
            Uploads files into a Laserfiche repository to efficiently create documents with metadata
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFile.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>uploadFileInfo</c> instance which describes an existing 
            upload file definition.
            </summary>
            <param name="filename">The filename of the upload file
            definition to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>UploadFileInfo</c> instance which represents the upload file definition
            with the specified file name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFile.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a upload file from a repository specified by its name.
            </summary>
            <param name="filename">The file name of the upload file
            definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFile.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>UploadFileInfoReader</c> instance which can be used to enumerate
            all of the upload file definitions in a repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>UploadFileInfoInfoReader</c> instance which can be used to enumerate
            all of the upload file existed in a repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFile.CreateDocument(Laserfiche.RepositoryAccess.Upload.CreateDocumentContent,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new document in the current Laserfiche repository.
            </summary>
            <param name="contentData">A <c>CreateDocumentContent</c> instance which represents
            all the metadata of the new document.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new document.</returns>
            <remarks>
            This method does not lock the resultant document.
            </remarks>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.PageData">
            <summary>
            Represents the page metadata in the <c>CreateDocumentContent</c> class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.PageData.#ctor(System.String,System.String)">
            <summary>
            Initialize an instance of <c>PageData</c> that represents one empty page.
            </summary>
            <param name="textFileName">The upload file name that need to be imported to 
            the text part of the page.</param>
            <param name="imageFileName">The upload file name that need to be imported to 
            the image part of the page.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.PageData.TextFileName">
            <summary>
            Gets or sets the name of the text file that will be uploaded.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.PageData.ImageFileName">
            <summary>
            Gets or sets the name of the image file that will be uploaded.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.PageData.HasTextFile">
            <summary>
            Gets if the page has text part.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.PageData.HasImageFile">
            <summary>
            Gets if the page has image part.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.TagData">
            <summary>
            Represents the tag metadata in the <c>CreateDocumentContent</c> class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.TagData.#ctor">
            <summary>
            A tag that will be assigned to a document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.TagData.#ctor(System.String)">
            <summary>
            A tag that will be assigned to a document.
            </summary>
            <param name="tagName">The name of the tag.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.TagData.#ctor(System.String,System.String)">
            <summary>
            A tag that will be assigned to a document.
            </summary>
            <param name="tagName">The name of the tag.</param>
            <param name="note">The note of the tag.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.TagData.TagName">
            <summary>
            Gets or sets the tag name that will be assigned to the new document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.TagData.Note">
            <summary>
            Gets or sets the tag note.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.EntryLinkData">
            <summary>
            Represents the entry link metadata in the <c>CreateDocumentContent</c> class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.EntryLinkData.#ctor">
            <summary>
            An entry link that will be assigned to a document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.EntryLinkData.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            An entry link that will be assigned to a document.
            </summary>
            <param name="entryLinkId">The entry link ID.</param>
            <param name="otherSourceId">The entry ID of another entry in the entry link.</param>
            <param name="isSource">A boolean that indicating if the document is the source of the entry link.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.EntryLinkData.EntryLinkId">
            <summary>
            Gets or sets the entry link ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.EntryLinkData.IsSource">
            <summary>
            Gets or sets a boolean that indicating if the document is the source of the entry link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.EntryLinkData.OtherEntryId">
            <summary>
            Gets or sets the entry ID of another entry in the entry link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.EntryLinkData.Note">
            <summary>
            Gets or sets the entry link note.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent">
            <summary>
            Describes the document that will be created in the Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.#ctor">
            <summary>
            Initialize an instance of <c>CreateDocumentContent</c>
            that represents an empty CreateDocumentContent.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.Path">
            <summary>
            Gets or sets the path of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.TemplateName">
            <summary>
            Gets or sets the template name of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.FieldValueCollection">
            <summary>
            Gets or sets the collection of template field values on the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.VolumeName">
            <summary>
            Gets or sets the volume name of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.Autorename">
            <summary>
            Gets or sets a boolean indicating whether or not to automatically
            rename the entry by appending a suffix on name conflicts.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.SubstituteTokens">
            <summary>
            Gets or sets a boolean indicating whether or not to 
            enable token substitution in the entry name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.Extension">
            <summary>
            Gets or sets the extension of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.Pages">
            <summary>
            Gets or sets the PageData of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.EdocFileName">
            <summary>
            Gets or sets the upload file name for the edoc file of the new document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.TagInfos">
            <summary>
            Gets or sets the Tag metadata of the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.CreateDocumentContent.EntryLinkInfos">
            <summary>
            Gets or sets the entry link metadata of the document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.UploadFileInfo">
            <summary>
            Represents information about an upload file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.MimeType">
            <summary>
            Gets the MIME type of the upload file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.FileSize">
            <summary>
            Gets the size of the upload file, in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.CreatedTimestamp">
            <summary>
            Gets the time when the file to be uploaded was created, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.FileName">
            <summary>
            Gets the filename of the upload file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.IsEmpty">
            <summary>
            Gets if the upload file is empty.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.#ctor(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>UploadFileInfo</c> instance with its MIME type.
            </summary>
            <param name="mimetype">The MIME type of the uplaod file</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.Delete">
            <summary>
            Marks the UploadFileInfo represented by this instance for deletion 
            when pending changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.GetUploadFileWriter(System.Int64)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to write the contents
            of the represented upload file.
            </summary>
            <param name="size">The total length in bytes of data that will
            be written to the upload file.</param>
            <returns>A <c>Stream</c> instance which can be used to write the contents
            of the upload file.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Upload.UploadFileInfo.GetUploadFileTextWriter">
            <summary>
            Returns a <c>TextWriter</c> instance which can be used to write the contents
            of the represented upload file.
            </summary>
            <returns>A <c>TextWriter</c> instance which can be used to write the contents
            of the represented upload file.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Upload.UploadFileInfoReader">
            <summary>
            Enumerates <c>UploadFileInfo</c> instances which represent
            upload file definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserAreaEntryInfo">
            <summary>
            Represents a user area in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaEntryInfo.#ctor(Laserfiche.RepositoryAccess.UserAreaInfo,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>UserAreaEntryInfo</c> instance representing an entry in an user area.
            </summary>
            <param name="eid">The entry id of the destination entry. </param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.Position">
            <summary>
            Gets or sets the position of the represented user area. It can be used to reorder the entry in a more flexible way.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.LastModificationTime">
            <summary>
            Gets the last modification time of the represented user area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.Comment">
            <summary>
            Gets or sets the comment field of the user area entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.Data">
            <summary>
            Gets or sets the data field of the user area entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.EntryId">
            <summary>
            Gets the entry id of the user area entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.UserAreaId">
            <summary>
            Gets the user area id of the user area this entry is in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryInfo.UserAreaName">
            <summary>
            Gets the user area name of the user area this entry is in.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaEntryInfo.MoveAfterEntry(System.Int32)">
            <summary>
            Move this entry after another entry.
            </summary>
            <param name="DstEntryId">The entry id of the destination entry. The current entry will be moved after that entry. </param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaEntryInfo.MoveToTop">
            <summary>
            Move this entry to the top of the current user area.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaEntryInfo.MoveToBottom">
            <summary>
            Move this entry to the bottom of the current user area.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VersionHistory">
            <summary>
            Represents a version history for a versioned document in Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionHistory.Count">
            <summary>
            Gets the number of versions in the version history.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LocaleFormat">
            <summary>
            Enumeration of pre-defined string format patterns that are provided by
            Laserfiche locales.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.ShortDate">
            <summary>
            Short date format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.LongDate">
            <summary>
            Long date format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.ShortDateTime">
            <summary>
            Short date and time format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.LongDateTime">
            <summary>
            Long date and time format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.ShortTime">
            <summary>
            Short time format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.LongTime">
            <summary>
            Long time format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.GeneralNumber">
            <summary>
            General number format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.Scientific">
            <summary>
            Scientific number format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.Percent">
            <summary>
            Percent number format
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LocaleFormat.Currency">
            <summary>
            Currency number format
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ILfLocale">
            <summary>
            Locale specific formatting and parsing capabilities, and time zone conversion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILfLocale.LocaleName">
            <summary>
            Gets or sets the name of the locale.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILfLocale.TimeZoneId">
            <summary>
            Gets or sets the time zone ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILfLocale.CalendarType">
            <summary>
            Gets or sets the calendar type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILfLocale.Currency">
            <summary>
            Gets or sets the ISO 4217 currency code which controls the rules used for
            formatting currency values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILfLocale.TokenSpelling">
            <summary>
            Gets or sets the token spelling of the locale.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.Format(System.Object,Laserfiche.RepositoryAccess.LocaleFormat)">
            <summary>
            Formats a value using one of the pre-defined string format patterns.
            </summary>
            <param name="value">The value to format as a string.</param>
            <param name="localeFormat">A member of the <c>LocaleFormat</c> enumeration
            which specifies which pre-defined format pattern to apply.</param>
            <returns>The string representation of the provided value using the
            specified pre-defined format.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.FormatCustom(System.Object,System.String)">
            <summary>
            Formats a value using a custom format pattern.  Dates and times will use
            the date/time pattern syntax and numeric values will use the number
            format pattern syntax.
            </summary>
            <param name="value">The value to format as a string.</param>
            <param name="pattern">The custom pattern to format the value as.</param>
            <returns>The string representation of the provided value using the
            specified custom format pattern.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.FormatCurrency(System.Object,System.String)">
            <summary>
            Formats a number using the currency pattern with the specified currency.
            </summary>
            <param name="value">The value to format.</param>
            <param name="currencyCode">An ISO 4217 currency code denoting the currency.</param>
            <returns>A string containing the value formatted using the currency pattern
            with the specified currency.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.Parse(System.String,Laserfiche.RepositoryAccess.LocaleFormat)">
            <summary>
            Parses a string representation of date, time, or number and converts it
            into its native representation in memory assuming the specified format pattern.
            </summary>
            <param name="strVal">The string representation of the value to parse and
            convert to its native representation.</param>
            <param name="format">A member of the <c>LocaleFormat</c> enumeration which
            specifies which pre-defined format pattern to assume.</param>
            <returns>The value of the specified string in its native representation
            in memory.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.ToLocalTime(System.DateTime)">
            <summary>
            Converts a <c>DateTime</c> value, assumed to be in Coordinated Universal
            Time (UTC), to the current local time zone.
            </summary>
            <param name="dateTime">A <c>DateTime</c> value in UTC to convert to the
            local time zone.</param>
            <returns>The provided <c>DateTime</c> value in the local time zone.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.ToLocalTime(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Converts a <c>TimeOfDay</c> value, assumed to be in Coordinated Universal
            Time (UTC), to the current local time zone.
            </summary>
            <param name="time">A <c>TimeOfDay</c> value in UTC to convert to the
            local time zone.</param>
            <returns>The provided <c>TimeOfDay</c> value in the local time zone.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a <c>DateTime</c> value, assumed to be in local time, to Coordinated
            Universal Time (UTC).
            </summary>
            <param name="dateTime">A <c>DateTime</c> value in local time to convert
            to UTC.</param>
            <returns>The provided <c>DateTime</c> value in UTC.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILfLocale.ToUniversalTime(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Converts a <c>TimeOfDay</c> value, assumed to be in local time, to Coordinated
            Universal Time (UTC).
            </summary>
            <param name="time">A <c>TimeOfDay</c> value in local time to convert
            to UTC.</param>
            <returns>The provided <c>TimeOfDay</c> value in UTC.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IndexOption">
            <summary>
            An enumeration of options for commands that control indexing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexOption.None">
            <summary>
            No indexing
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexOption.Reindex">
            <summary>
            Reindex documents that are already indexed.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexOption.IndexAll">
            <summary>
            Index every document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IndexingStatus">
            <summary>
            An enumeration of possible Laserfiche full-text search engine indexer states.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexingStatus.Stopped">
            <summary>
            The indexer has been stopped by an administrator.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexingStatus.Idle">
            <summary>
            The indexer is ready to run but is idle.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexingStatus.Indexing">
            <summary>
            The indexer is indexing documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.IndexingStatus.Paused">
            <summary>
            The indexer has been temporarily paused.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FileType">
            <summary>
            Information about an electronic document type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FileType.Extension">
            <summary>
            The file system extension of the electronic document file type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FileType.MimeType">
            <summary>
            The MIME type of the electronic document file type.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.IndexConfiguration">
            <summary>
            Represents the full-text search indexing configuration for a Laserfiche
            repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>IndexConfiguration</c> instance from a <c>Session</c> instance.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexConfiguration.Session">
            <summary>
            Gets the <c>Session</c> instance associated with the current instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexConfiguration.IsConnected">
            <summary>
            Gets a boolean indicating if the current instance has a connection to
            Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.IndexConfiguration.WillAutoIndex">
            <summary>
            Gets or sets a boolean indicating if documents will be automatically indexed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.Refresh(System.Boolean)">
            <summary>
            Reads the currently configured full-text indexing settings from the
            current repository and updates the instance's data members with the
            retrieved settings.
            </summary>
            <param name="keepChanges">A boolean indicating if local changes to the
            indexing settings should be kept (true) or discarded (false).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.ClearQueue">
            <summary>
            Removes all pending documents from the full-text index queue.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.Save">
            <summary>
            Saves the full-text search indexing settings represented by this class
            to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.ResetToDefault">
            <summary>
            Resets the indexing configuration for the current repository to the
            default settings.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.GetIndexingStatus">
            <summary>
            Returns a member of the <c>IndexingStatus</c> enumeration which specifies the
            current state of the Laserfiche full-text search engine indexer for the full-text
            catalog associated with the current Laserfiche repository.
            </summary>
            <returns>A member of the <c>IndexingStatus</c> enumeration which specifies the
            current state of the Laserfiche full-text search engine indexer.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.GetIndexingStatusReport">
            <summary>
            Returns an <c>IndexingStatusReport</c> instance which contains data about the
            current status of the Laserfiche Full Text Search Engine's indexer.
            </summary>
            <returns>An <c>IndexingStatusReport</c> instance which contains data about the
            current status of the Laserfiche Full Text Search Engine's indexer.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.GetIndexQueueLength">
            <summary>
            Returns the length of the index queue used by the Laserfiche full-text search
            engine indexer associated with the current Laserfiche repository.  This is
            a measure of the number of documents pending for indexing.
            </summary>
            <returns>The length of the index queue used by the Laserfiche full-text search
            engine indexer associated with the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.GetIndexQueueLength(System.Boolean@)">
            <summary>
            Returns the length of the index queue used by the Laserfiche full-text search
            engine indexer associated with the current Laserfiche repository.  This is
            a measure of the number of documents pending for indexing.
            </summary>
            <param name="isAccurate">On output, a boolean indicating if the queue length
            is fairly accurate, or if the queue is only at least as large as reported and
            could be much greater.</param>
            <returns>The length of the index queue used by the Laserfiche full-text search
            engine indexer associated with the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.PauseIndexing">
            <summary>
            Requests that the Laserfiche full-text search engine indexer associated with
            the current repository pause operation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.ResumeIndexing">
            <summary>
            Requests that the Laserfiche full-text search engine indexer associated with
            the current repository resume indexing, if it was previously paused.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.Reindex(Laserfiche.RepositoryAccess.IndexOption)">
            <summary>
            Requests that the Laserfiche full-text search engine indexer reindex the
            specified portion of the repository.
            </summary>
            <param name="indexOpt">A member of the <c>IndexOption</c> enumeration which
            specifies which entries in the repository should be indexed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.IndexConfiguration.MarkAllNotIndexed">
            <summary>
            Marks all documents in the current repository as not indexed.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheResource">
            <summary>
            For internal Laserfiche use.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapServerProfile">
            <summary>
            A collection of static methods for managing LDAP server profiles
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.Create(Laserfiche.RepositoryAccess.LdapServerProfileInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new LDAP server profile in the current Laserfiche repository.
            </summary>
            <param name="info">An <c>LdapServerProfileInfo</c> instance representing
            the settings for the new LDAP server profile.  The instance is not
            modified.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>LdapServerProfileInfo</c> instance representing the
            newly created LDAP server profile.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.Update(System.Int32,Laserfiche.RepositoryAccess.LdapServerProfileInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing LDAP server profile in the current Laserfiche repository.
            </summary>
            <param name="profileId">The ID of the LDAP server profile to update.</param>
            <param name="info">An <c>LdapServerProfileInfo</c> instance representing
            the new settings for the LDAP server profile.  The instance is not
            modified.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>LdapServerProfileInfo</c> instance representing the specified
            LDAP server profile.
            </summary>
            <param name="profileId">The ID of the LDAP server profile to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LdapServerProfileInfo</c> instance representing the specified
            LDAP server profile.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>LdapServerProfileInfo</c> instance representing the specified
            LDAP server profile.
            </summary>
            <param name="profileName">The name of the LDAP server profile to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LdapServerProfileInfo</c> instance representing the specified
            LDAP server profile.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing LDAP server profile stored in the current Laserfiche
            repository.
            </summary>
            <param name="profileId">The ID of the LDAP server profile to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing LDAP server profile stored in the current Laserfiche
            repository.
            </summary>
            <param name="profileName">The name of the LDAP server profile to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfile.EnumLdapServerProfiles(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>LdapServerProfileInfoReader</c> instance which can be
            used to enumerate all of the LDAP server profile definitions stored in
            the current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>LdapServerProfileInfoReader</c> instance which can be
            used to enumerate all of the LDAP server profile definitions stored in
            the current Laserfiche repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapSchemaType">
            <summary>
            Enumeration of LDAP schema types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapSchemaType.Generic">
            <summary>
            Not one of the other known LDAP schemas.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapSchemaType.ActiveDirectory">
            <summary>
            A Microsoft Active Directory LDAP schema.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapSchemaType.NovellEDirectory">
            <summary>
            A Novell eDirectory LDAP schema.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapSchemaType.Rfc2307">
            <summary>
            An RFC 2307 compliant LDAP schema.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapAuthenticationType">
            <summary>
            Enumeration of LDAP authentication mechanisms.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapAuthenticationType.SimpleAuthentication">
            <summary>
            Log in to the LDAP server using the SIMPLE authentication mechanism.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LdapAuthenticationType.DigestAuthentication">
            <summary>
            Log in to the LDAP server using the SASL DIGEST authentication mechanism.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapServerProfileInfo">
            <summary>
            Represents an LDAP server profile defined in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfileInfo.#ctor">
            <summary>
            Initializes an <c>LdapServerProfileInfo</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfileInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an <c>LdapServerProfileInfo</c> instance.
            </summary>
            <param name="session">The <c>Session</c> instance that the new
            <c>LdapServerProfileInfo</c> instance will use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.Name">
            <summary>
            Gets or sets the name of the represented LDAP server profile.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.Id">
            <summary>
            Gets the ID of the represented LDAP server profile.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.ServerName">
            <summary>
            Gets or sets the LDAP server host name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.DistinguishedNameBase">
            <summary>
            Gets or sets the LDAP distinguished name (DN) template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.Port">
            <summary>
            Gets or sets the TCP port number that the LDAP server is listening on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.IsUsingTls">
            <summary>
            Gets or sets a boolean indicating whether LDAP over TLS/SSL is to be used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.SchemaType">
            <summary>
            Gets or sets a value of the <c>LdapSchemaType</c> enumeration which
            specifies the type of LDAP schema configured.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.AuthenticationType">
            <summary>
            Gets or sets a value of the <c>LdapAuthenticationType</c> enumeration
            which specifies the authentication mechanism to use when binding to
            the LDAP server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.LdapUserName">
            <summary>
            Gets or sets the LDAP user name that the server will use for various
            internal operations.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.LdapPassword">
            <summary>
            Gets or sets the password for the LDAP user that the server uses for
            various internal operations.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LdapServerProfileInfo.UniqueAttribute">
            <summary>
            Gets or sets a unique attribute to enable login with uniqueAttribute@profile 
            for complex OU structures 
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfileInfo.GetSearcher">
            <summary>
            Returns an <c>LfDirectorySearcher</c> instance for the represented LDAP server.
            </summary>
            <returns>An <c>LfDirectorySearcher</c> instance for the represented LDAP server.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LdapServerProfileInfo.Delete">
            <summary>
            Marks the represented LDAP server profile for deletion.  The LDAP server
            profile will be deleted next time pending changes are sent to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LdapServerProfileInfoReader">
            <summary>
            Provides the ability to enumerate <c>LdapServerProfile</c> instances
            representing LDAP server profiles which match the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheReadStream">
            <summary>
            A <c>Stream</c> derived class which is used to read byte-oriented streams from
            Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheReadStream.ContentType">
            <summary>
            Gets the MIME type of the content, if available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheReadStream.ChecksumAlgorithm">
            <summary>
            Gets the standardized name of the checksum/hash algorithm.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheReadStream.ComputedChecksum">
            <summary>
            Gets the checksum that this instance computed over the data received.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheReadStream.StoredChecksum">
            <summary>
            Gets the checksum of the data pre-calculated and sent by Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheReadStream.ComputeChecksum">
            <summary>
            Gets or sets a boolean which directs the <c>LaserficheReadStream</c> to compute
            a checksum over the bytes it receives from Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StreamRange">
            <summary>
            Represents a range in a data stream.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StreamRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a <c>StreamRange</c> value with the specified start and end
            values.
            </summary>
            <param name="start">The starting position in the data stream.</param>
            <param name="end">The ending position in the data stream.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StreamRange.Start">
            <summary>
            Gets and sets the starting position in the data stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StreamRange.End">
            <summary>
            Gets and sets the ending position in the data stream.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StreamRange.Equals(Laserfiche.RepositoryAccess.StreamRange)">
            <summary>
            Determines if the <c>StreamRange</c> value is equal to the given <c>StreamRange</c>.
            </summary>
            <param name="other">The <c>StreamRange</c> value to compare.</param>
            <returns>True if the given <c>StreamRange</c> value is equal to this <c>StreamRange</c>, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StreamRange.op_Equality(Laserfiche.RepositoryAccess.StreamRange,Laserfiche.RepositoryAccess.StreamRange)">
            <summary>
            Compares two <c>StreamRange</c> values for equality.
            </summary>
            <param name="lhs">A <c>StreamRange</c> value to compare.</param>
            <param name="rhs">A <c>StreamRange</c> value to compare.</param>
            <returns>True if the given <c>StreamRange</c> values are equal, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StreamRange.op_Inequality(Laserfiche.RepositoryAccess.StreamRange,Laserfiche.RepositoryAccess.StreamRange)">
            <summary>
            Compares two <c>StreamRange</c> values for inequality.
            </summary>
            <param name="lhs">A <c>StreamRange</c> value to compare.</param>
            <param name="rhs">A <c>StreamRange</c> value to compare.</param>
            <returns>True if the given <c>StreamRange</c> values are not equal, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Document">
            <summary>
            Collection of methods for creating and locking documents, and reading
            and writing document contents.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new document in the current Laserfiche repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the new document.</param>
            <param name="name">The name of the new document.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which controls which options to use when creating the document.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new document.</returns>
            <remarks>
            The document is created on the volume that is assigned to the parent
            folder.  If the parent folder does not have a volume assigned, an
            exception will be thrown.
            
            This method does not lock the resultant document.  Use the
            <c>DocumentInfo.Create</c> method to create a document that is locked.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new document in the current Laserfiche repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the new document.</param>
            <param name="name">The name of the new document.</param>
            <param name="volumeName">The name of the volume to create the document in.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which controls which options to use when creating the document.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new document.</returns>
            <remarks>
            This method does not lock the resultant document.  Use the
            <c>DocumentInfo.Create</c> method to create a document that is locked.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.Create(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new document in the current Laserfiche repository.
            </summary>
            <param name="documentPath">The path to the new document.</param>
            <param name="volumeName">The name of the volume to create the document in.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which controls which options to use when creating the document.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new document.</returns>
            <remarks>
            This method does not lock the resultant document.  Use the
            <c>DocumentInfo.Create</c> method to create a document that is locked.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.CreatePersistentLock(Laserfiche.RepositoryAccess.DocumentInfo,System.String,Laserfiche.RepositoryAccess.Session,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Creates a persistent lock on a document.
            </summary>
            <param name="doc">The document to create a persistent lock for.</param>
            <param name="comment">The comment text for this persistent lock.</param>
            <param name="session">The Laserfiche session to use.</param>
            <param name="lockextent">A member of the <c>LockExtent</c> enumeration specifying
            the extent of lock that will cover.</param>
            <returns>A new <c>PersistentLock</c> instance which represents the new
            persistent lock in the repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetDocumentInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a document in a Laserfiche repository.
            </summary>
            <param name="path">The path to the Laserfiche document in the repository.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DocumentInfo</c> instance which represents the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetDocumentInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a document in a Laserfiche repository.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DocumentInfo</c> instance which represents the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetDocumentInfo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a document in a Laserfiche repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the document to retrieve information for.</param>
            <param name="docName">The name of the document to retrieve information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DocumentInfo</c> instance which represents the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPersistentLock(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a persistent lock on a document in a Laserfiche repository.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve persistent
            lock information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>PersistentLock</c> instance which represents the persistent
            lock owned by the current session on the document, or null if the specified 
            document is not persistently locked.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPersistentLocks(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about all the persistent locks on a document in a Laserfiche repository.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve persistent
            lock information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A IList of <c>PersistentLock</c> instance which represents all the persistent
            locks on the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.TryGetVersionGroup(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieve information about the version group a document in a Laserfiche
            repository belongs to.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve version
            group information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VersionGroup</c> instance which represents the version
            group the specified document belongs to, or null if the document does
            not belong to a version group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.Index(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Submits a request to (re)index a single Laserfiche document.
            </summary>
            <param name="entryId">The entry ID of the document to index.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadEdoc(System.Int32,System.String@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Opens a data stream for reading the contents of the electronic document
            portion of a Laserfiche document.
            </summary>
            <param name="entryId">The entry ID of the document to open.</param>
            <param name="contentType">An out parameter that will contain the MIME type
            of the electronic document when this method returns.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which represents the data stream for
            the specified document's electronic document portion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadEdocRange(System.Int32,Laserfiche.RepositoryAccess.StreamRange,System.String@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Opens a data stream for reading a range of bytes in the electronic document portion
            of a Laserfiche document.
            </summary>
            <param name="entryId">The entry ID of the document to open.</param>
            <param name="byteRange">A <c>StreamRange</c> value which specifies the
            range of bytes in the source content to retrieve.</param>
            <param name="contentType">An out parameter that will contain the MIME type
            of the electronic document when this method returns.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which represents the data stream for
            the specified range of bytes in the specified document's electronic
            document portion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPageInfo(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>PageInfo</c> instance which describes the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the specified
            page.</param>
            <param name="pageNum">The page number specifying which page to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>PageInfo</c> instance which describes the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPageInfos(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the specified document.
            </summary>
            <param name="entryId">The entry ID of the document containing the pages.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPageInfos(System.Int32,Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about the pages in the specified range in the specified document.
            </summary>
            <param name="entryId">The entry ID of the document containing the pages.</param>
            <param name="pageRange">A <c>PageRange</c> instance which specifies the
            range of pages to return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about the pages in the specified range in the specified
            document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetPageInfos(System.Int32,Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about the specified set of pages in the specified document.
            </summary>
            <param name="entryId">The entry ID of the document containing the pages.</param>
            <param name="pageSet">A <c>PageSet</c> instance which specifies the set
            of pages to return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about the specified set of pages in the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadLocationsPagePart(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>WordLocationsReader</c> instance which can be used to read the
            specified page's OCR locations data.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WordLocationsReader</c> instance which can be used to read the
            specified page's OCR locations data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadTextPagePart(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>StreamReader</c> instance which can be used to read the text
            content of the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StreamReader</c> instance which can be used to read the text
            content of the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadTextPagePartAsWords(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>WordsReader</c> instance which can be used to read the text
            contents of the specified page as a sequence of words corresponding to the
            OCR locations data rectangles.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WordsReader</c> instance which can be used to read the text
            contents of the specified page as a sequence of words corresponding to the
            OCR locations data rectangles.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadThumbnailPagePart(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Thumbnail</c> instance which represents the image thumbnail
            associated with the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Thumbnail</c> instance which represents the image thumbnail
            associated with the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadPagePart(System.Int32,System.Int32,Laserfiche.RepositoryAccess.PagePart,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the raw data
            stream for the specified page part of the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the raw data
            stream for the specified page part of the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadPagePartById(System.Int32,System.Int64,Laserfiche.RepositoryAccess.PagePart,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the raw data
            stream for the specified page part of the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageId">The ID of the page read.</param>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the raw data
            stream for the specified page part of the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadPagePartRange(System.Int32,System.Int32,Laserfiche.RepositoryAccess.PagePart,Laserfiche.RepositoryAccess.StreamRange,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageNum">The page number to read.</param>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <param name="byteRange">A <c>StreamRange</c> value which specifies which
            range of bytes in the raw data stream to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.ReadPagePartRangeById(System.Int32,System.Int64,Laserfiche.RepositoryAccess.PagePart,Laserfiche.RepositoryAccess.StreamRange,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the specified page.
            </summary>
            <param name="entryId">The entry ID of the document containing the page.</param>
            <param name="pageId">The ID of the page to read.</param>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <param name="byteRange">A <c>StreamRange</c> value which specifies which
            range of bytes in the raw data stream to read.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetTagWatermarks(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagWatermarkCollection</c> instance which represents the collection
            of all tag watermarks applied to the specified document.
            </summary>
            <param name="entryId">The entry ID of the document to retrieve tag
            watermark information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagWatermarkCollection</c> instance which represents the collection
            of all tag watermarks applied to the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.GetAlternateEdoc(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AlternateEdoc</c> instance which represents the specified
            alternate electronic document in the specified document.
            </summary>
            <param name="entryId">The entry ID of the document containing the alternate
            electronic document to retrieve information about.</param>
            <param name="altEdocName">The name of the electronic document to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AlternateEdoc</c> instance which represents the specified
            alternate electronic document in the specified document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Document.VerifyChecksums(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Verifies checksums for data files that belong to the specified document.
            </summary>
            <param name="entryId">The entry ID of the document that contains the data
            files to verify the checksums of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>DocumentChecksumReport</c> instance that contains a summary of
            the volume checksum verification procedure.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PagePart">
            <summary>
            An enumeration representing the different types of Laserfiche page parts.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PagePart.Image">
            <summary>
            The page's image rendering.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PagePart.Text">
            <summary>
            The page's plain text rendering.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PagePart.Locations">
            <summary>
            The page's OCR word locations data stream.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PagePart.Thumbnail">
            <summary>
            The page's image thumbnail.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CheckInOptions">
            <summary>
            An enumeration controlling how document check in is processed.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CheckInOptions.None">
            <summary>
            No options specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CheckInOptions.KeepCheckedOut">
            <summary>
            Keep the document checked out.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RevertOptions">
            <summary>
            Options that affect reverting a document to a previous version.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageDeletionOptions">
            <summary>
            Options that affect reverting a document to a previous version.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentInfo">
            <summary>
            Represents a document in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of the <c>DocumentInfo</c> class representing a
            new document.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>DocumentInfo</c> representing a reference
            to the document with the specified entry ID.
            </summary>
            <param name="docId">The entry ID of the document to reference.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.ElecDocumentSize">
            <summary>
            Gets the size of the electronic document attached to the represented document,
            if there is one, in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.Extension">
            <summary>
            Gets or sets the extension for the document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.ElecDocumentLastModifiedUtc">
            <summary>
            Gets or sets the last modification time of the electronic document in
            Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.ElecDocumentLastModified">
            <summary>
            Gets or sets the last modification time of the electronic document in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.IsElectronicDocument">
            <summary>
            Gets a boolean indicating if there is an electronic document attached to the represented document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.IsRecord">
            <summary>
            Gets a boolean indicating if the represented document is a record.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.MimeType">
            <summary>
            Gets or sets the MIME type of the electronic document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.PageCount">
            <summary>
            Gets the page count of the represented document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.AllPages">
            <summary>
            Gets a <c>PageSet</c> instance which represents all of the pages in this document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.PersistentLock">
            <summary>
            Gets a <c>PersistentLock</c> instance which represents the persistent lock
            on this document, or null if the represented document is not persistently locked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.IsPersistentlyLocked">
            <summary>
            Gets a boolean indicating if the represented entry is persistently locked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.IsCheckedOut">
            <summary>
            Gets a boolean indicating if the represented document is checked out.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.CurrentVersion">
            <summary>
            Gets the current version number of the represented document, if the
            document is under version control.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.CheckedOutBy">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance representing the security
            identifier (SID) of the user that checked out the represented document,
            if the document is checked out.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DocumentInfo.IsUnderVersionControl">
            <summary>
            Gets a boolean indicating if the represented document is under version control.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new document in a Laserfiche repository.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance representing the parent
            of the new document.</param>
            <param name="name">The name of the new document.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which control the naming of the new document.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new document in a Laserfiche repository.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance representing the parent
            of the new document.</param>
            <param name="name">The name of the new document.</param>
            <param name="volumeName">The name of the Laserfiche volume the new document
            will reside on.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which control the naming of the new document.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Create(Laserfiche.RepositoryAccess.Upload.CreateDocumentContent)">
            <summary>
            Creates a new document in a Laserfiche repository.
            </summary>
            <param name="documentContent">A <c>CreateDocumentContent</c> instance which represents
            all the metadata of the new document.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Create(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new document in a Laserfiche repository.
            </summary>
            <param name="path">The path in the current repository to the new document.</param>
            <param name="volumeName">The name of the Laserfiche volume the new document
            will reside on.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which control the naming of the new document.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.AppendPage">
            <summary>
            Creates a new empty page at the end of the represented document.
            The operation will occur immediately.
            </summary>
            <returns>A <c>PageInfo</c> instance representing the new page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CopyPagesTo(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Copies a range of pages from this document to another position in
            the same document or to a different document.  The operation will occur immediately.
            </summary>
            <param name="pageRange">The range of pages in this document (the source)
            to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination.</param>
            <param name="destPageNum">The page number in the destination document
            to insert the pages.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CopyPagesTo(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,System.Boolean)">
            <summary>
            Copies a range of pages from this document to another position in
            the same document or to a different document.  The operation will occur immediately.
            </summary>
            <param name="pageRange">The range of pages in this document (the source)
            to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination.</param>
            <param name="destPageNum">The page number in the destination document
            to insert the pages.</param>
            <param name="copyAnnotations">A boolean indicating whether or not to copy
            the annotations on the source pages to the destination.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CopyPagesTo(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Copies a set of pages from this document to another position in
            the same document or to a different document.  The operation will occur immediately.
            </summary>
            <param name="pageSet">The set of pages in this document (the source) to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination.</param>
            <param name="destPageNum">The page number in the destination document
            to insert the pages.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CopyPagesTo(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,System.Boolean)">
            <summary>
            Copies a set of pages from this document to another position in
            the same document or to a different document.  The operation will occur immediately.
            </summary>
            <param name="pageSet">The set of pages in this document (the source) to copy.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination.</param>
            <param name="destPageNum">The page number in the destination document
            to insert the pages.</param>
            <param name="copyAnnotations">A boolean indicating whether or not to copy
            the annotations on the source pages to the destination.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePage(System.Int32)">
            <summary>
            Deletes a single specified page from the represented document.  The operation will
            occur immediately.
            </summary>
            <param name="pageNum">The page number specifying which page to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePages(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Deletes a set of pages from the represented document.  The operation will occur
            immediately.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance representing the set of
            pages to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePages(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Deletes a range of pages from the represented document.  The operation will occur
            immediately.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance representing the range
            of pages to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePage(System.Int32,Laserfiche.RepositoryAccess.PageDeletionOptions)">
            <summary>
            Deletes a single specified page from the represented document.  The operation will
            occur immediately.
            </summary>
            <param name="pageNum">The page number specifying which page to delete.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePages(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.PageDeletionOptions)">
            <summary>
            Deletes a set of pages from the represented document.  The operation will occur
            immediately.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance representing the set of
            pages to delete.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeletePages(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.PageDeletionOptions)">
            <summary>
            Deletes a range of pages from the represented document.  The operation will occur
            immediately.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance representing the range
            of pages to delete.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.SetRecord">
            <summary>
            Set the document as a record. The operation will occur immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.UnsetRecord">
            <summary>
            Unset the document as a record. The operation will occur immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetRecordProperties">
            <summary>
            Returns a <c>RecordProperties</c> instance which describes the records
            management specific properties of the represented document.  Only valid
            for records.
            </summary>
            <returns>A <c>RecordProperties</c> instance which describes the records
            management specific properties of the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.TryGetVersionGroup">
            <summary>
            Retrieves information about the version group this document belongs to,
            if it belongs to a version group.
            </summary>
            <returns>A <c>VersionGroup</c> instance which represents the version
            group this document belongs to, or null if this document does not belong
            to a version group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.InsertPage(System.Int32)">
            <summary>
            Inserts a new, empty page at a specified position in the represented document.
            The operation will occur immediately.
            </summary>
            <param name="newPageNumber">The page number of the new page to insert.</param>
            <returns>A <c>PageInfo</c> instance representing the new page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.ExpandLockExtent(Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Expand the lock extent of the current lock.
            </summary>
            <param name="lextent">The <c>LockExtent</c> to expand.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.UnlockAllPlocks">
            <summary>
            Removes all plocks on the represented entry.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.LockPersistently(System.String,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Creates a persistent lock on the current document.
            </summary>
            <param name="comment">The comment text for this persistent lock.</param>
            <param name="lockextent">A member of the <c>LockExtent</c> enumeration specifying
            the extent of lock that will cover.</param>
            <returns>A <c>PersistentLock</c> instance which represents the new
            persistent lock.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.LockPersistentlyWithCheck(System.String,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Creates a persistent lock on the current document while checking that
            the document has not been modified since data about it was last
            retrieved.
            </summary>
            <param name="comment">The comment text for this persistent lock.</param>
            <returns>A <c>PersistentLock</c> instance which represents the new
            persistent lock.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.MovePagesTo(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Moves a range of pages from the represented document (the source) to
            the specified destination document, which may be the same document.
            The operation will occur immediately.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance which specifies
            the range of pages to move.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination document.</param>
            <param name="destPageNum">A page number which specifies the position
            in the destination document to insert the moved pages to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.MovePagesTo(Laserfiche.RepositoryAccess.PageSet,Laserfiche.RepositoryAccess.DocumentInfo,System.Int32)">
            <summary>
            Moves a set of pages from the represented document (the source) to
            the specified destination document, which may be the same document.
            The operation will occur immediately.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance which specifies the
            set of pages to move.</param>
            <param name="destination">A <c>DocumentInfo</c> instance which represents
            the destination document.</param>
            <param name="destPageNum">A page number which specifies the position
            in the destination document to insert the moved pages to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.ReadEdoc(Laserfiche.RepositoryAccess.StreamRange,System.String@)">
            <summary>
            Opens a data stream for reading a selected byte range of the electronic document
            portion of the represented document.
            </summary>
            <param name="byteRange">A <c>StreamRange</c> value indicating the byte range
            to read.</param>
            <param name="contentType">An out parameter that will contain the MIME type
            of the electronic document when this method returns.</param>
            <returns>A <c>LaserficheReadStream</c> instance supporting forward-only reads which
            represents the data stream for the specified byte range in the represented
            document's electronic document portion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetAlternateEdocReader">
            <summary>
            Returns an <c>AlternateEdocReader</c> instance which represents the
            alternate electronic document in the represented document.
            </summary>
            <returns>An <c>AlternateEdocReader</c> instance which represents the
            alternate electronic document in the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CreateAlternateEdoc(System.String)">
            <summary>
            Creates an alternate electronic document in the represented document.
            The operation will occur immediately.
            </summary>
            <param name="altEdocName">The name of the new alternate electronic document.</param>
            <returns>An <c>AlternateEdoc</c> instance which represents the new
            alternate electronic document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.WriteEdoc(System.String,System.Int64)">
            <summary>
            Opens a data stream for writing the contents of the electronic document
            portion of the represented document.
            </summary>
            <param name="contentType">The MIME type of the electronic document to
            save in Laserfiche.</param>
            <param name="size">The total length in bytes of data that will
            be written to the electronic document.</param>
            <returns>A <c>Stream</c> instance supporting forward-only writing the
            contents of the electronic document portion of the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Index">
            <summary>
            Submits a request to (re)index the represented document in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetTagWatermarks">
            <summary>
            Returns a <c>TagWatermarkCollection</c> instance which represents the collection
            of all tag watermarks applied to this document.
            </summary>
            <returns>A <c>TagWatermarkCollection</c> instance which represents the collection
            of all tag watermarks applied to this document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeleteEdoc">
            <summary>
            Deletes the electronic document in the represented document.  The operation
            will occur immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.DeleteAlternateEdoc(System.String)">
            <summary>
            Deletes an alternate electronic document in the represented document.
            </summary>
            <param name="altEdocName">The name of the alternate electronic document
            to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetVersionHistory">
            <summary>
            Returns a <c>VersionHistory</c> instance which represents the version history
            of the specified document, if the document is under version control.
            </summary>
            <returns>A <c>VersionHistory</c> instance which represents the version history
            of the specified document, if the document is under version control.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetVersionDifferences(System.Int32,System.Int32)">
            <summary>
            Returns a <c>DocumentDifferenceReport</c> instance which contains a summary
            of the changes between two different versions of the document.
            </summary>
            <param name="version1">The version number of the first version to compare.</param>
            <param name="version2">The version number of the second version to compare.</param>
            <returns>A <c>DocumentDifferenceReport</c> instance which contains a summary
            of the changes between two different versions of the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetVersionDifferences(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <c>PageDifferenceReport</c> instance which contains a summary
            of the changes in a page between two different versions of the document.
            </summary>
            <param name="pageNumber">The page number in the first version to compare.</param>
            <param name="version1">The version number of the first version to compare.</param>
            <param name="version2">The version number of the second version to compare.</param>
            <returns>A <c>PageDifferenceReport</c> instance which contains a summary
            of the changes in a page between two different versions of the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetVersionDifferences(System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            Returns a <c>PageDifferenceReport</c> instance which contains a summary
            of the changes between two different pages that are in two different versions
            of the document.
            </summary>
            <param name="pageId1">The page ID of the first page to compare.</param>
            <param name="pageId2">The page ID of the second page to compare.</param>
            <param name="version1">The version number of the first version to compare.</param>
            <param name="version2">The version number of the second version to compare.</param>
            <returns>A <c>PageDifferenceReport</c> instance which contains a summary
            of the changes between two different pages that are in two different versions
            of the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.VerifyChecksums">
            <summary>
            Verifies checksums for data files that belong to the represented document.
            </summary>
            <returns>A <c>DocumentChecksumReport</c> instance that contains a summary of
            the volume checksum verification procedure.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CheckOut">
            <summary>
            Checks out the represented document for editing, if the document is under
            version control and is not already checked out.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CheckIn">
            <summary>
            Checks in a new version of the represented document, if the document was
            previously checked out by the same user.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.CheckIn(Laserfiche.RepositoryAccess.CheckInOptions)">
            <summary>
            Checks in a new version of the represented document, if the document was
            previously checked out by the same user.
            </summary>
            <param name="options">One or more members of the <c>CheckInOptions</c>
            enumeration specifying options that control the check in.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.UndoCheckOut">
            <summary>
            Undo a previous check out operation on the represented document without
            creating a new version of the document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Revert(System.Int32)">
            <summary>
            Updates the working copy of the version controlled document to the
            specified version.
            </summary>
            <param name="version">The version to update the working copy to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Revert(System.Int32,Laserfiche.RepositoryAccess.RevertOptions)">
            <summary>
            Updates the working copy of the version controlled document to the
            specified version.
            </summary>
            <param name="version">The version to update the working copy to.</param>
            <param name="options">Options that control how the operation will occur.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.PutUnderVersionControl">
            <summary>
            Places the represented document under version control.  The document must
            be checked out before it can be modified again.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetAlternateEdoc(System.String)">
            <summary>
            Returns an <c>AlternateEdoc</c> instance which represents the specified
            alternate electronic document in the represented document.
            </summary>
            <param name="altEdocName">The name of the electronic document to retrieve
            information about.</param>
            <returns>An <c>AlternateEdoc</c> instance which represents the specified
            alternate electronic document in the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetAlternateEdocs">
            <summary>
            Returns an <c>AlternateEdocReader</c> instance which represents the
            alternate electronic document in the represented document.
            </summary>
            <returns>An <c>AlternateEdocReader</c> instance which represents the
            alternate electronic document in the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetAnnotations">
            <summary>
            Retrieves a collection of all the annotations in the document.
            </summary>
            <returns>An <c>ICollection</c> instance of <c>AnnotationBase</c> derived
            instances which represent the annotations in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetLocalName">
            <summary>
            Returns the name of the document with any electronic document extension appended.
            </summary>
            <returns>The name of the document with any electronic document extension appended.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetManifest">
            <summary>
            Generates a document manifest for the represented document.
            </summary>
            <returns>The document manifest for the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetManifest(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.DocumentSignatureInfo})">
            <summary>
            Generates a document manifest for the represented document and the specified
            collection of digital signatures.
            </summary>
            <param name="targetSigs">A collection of target digital signatures to include
            in the manifest.</param>
            <returns>The document manifest for the represented document.</returns>
            <remarks>
            This method is intended to be used when generating manifests suitable for
            counter-signatures.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetPageInfo(System.Int32)">
            <summary>
            Returns a <c>PageInfo</c> instance which describes the specified page.
            </summary>
            <param name="pageNum">The page number specifying which page to retrieve information about.</param>
            <returns>A <c>PageInfo</c> instance which describes the specified page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetPageInfos">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the document.
            </summary>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about all the pages in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetPageInfos(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about the pages in the specified range in the document.
            </summary>
            <param name="pageRange">A <c>PageRange</c> instance which specifies the
            range of pages to return information about.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about the pages in the specified range in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetPageInfos(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Returns a <c>PageInfoReader</c> instance which can be used to enumerate
            information about the specified set of pages in the document.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance which specifies the set
            of pages to return information about.</param>
            <returns>A <c>PageInfoReader</c> instance which can be used to enumerate
            information about the specified set of pages in the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetSignatures">
            <summary>
            Returns a <c>DocumentSignatureInfoCollection</c> which represents a collection of
            the electronic signatures on the document.
            </summary>
            <returns>A <c>DocumentSignatureInfoCollection</c> which represents a collection of
            the electronic signatures on the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetStatistics">
            <summary>
            Returns a <c>DocumentStatistics</c> instance representing a collection of
            information about the document.
            </summary>
            <returns>A <c>DocumentStatistics</c> instance representing a collection of
            information about the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetThumbnails(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Returns a <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified range of pages in the represented
            document.
            </summary>
            <param name="pageRange">A <c>PageRange</c> value specifying the range
            of pages to retrieve image thumbnails for.</param>
            <returns>A <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified range of pages.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetThumbnails(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Returns a <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified set of pages in the represented
            document.
            </summary>
            <param name="pageSet">A <c>PageSet</c> instance specifying the set
            of pages to retrieve image thumbnails for.</param>
            <returns>A <c>ThumbnailReader</c> instance which can be used to retrieve
            image thumbnails for the specified set of pages.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetTokenSubstitutionContext">
            <summary>
            Returns a token substitution context for the represented document.
            </summary>
            <returns>A token substitution context for the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.GetLatestVersion">
            <summary>
            Returns an <c>IDocumentContents</c> reference which represents the latest version
            of the document.
            </summary>
            <returns>An <c>IDocumentContents</c> reference which represents the latest version
            of the document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.ReadEdoc(System.String@)">
            <summary>
            Opens a data stream for reading the contents of the electronic document
            portion of the represented document.
            </summary>
            <param name="contentType">An out parameter that will contain the MIME type
            of the electronic document when this method returns.</param>
            <returns>A <c>LaserficheReadStream</c> instance supporting forward-only reads which
            represents the data stream for the represented document's electronic
            document portion.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DocumentInfo.Sign(Laserfiche.RepositoryAccess.DocumentSignatureInfo)">
            <summary>
            Digitally signs the represented document.
            </summary>
            <param name="signature">A <c>DocumentSignatureInfo</c> instance which
            contains the settings used to sign the document.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Entry">
            <summary>
            Collection of static methods for managing entries in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEntryInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.
            </summary>
            <param name="entryId">The ID of the entry to return an <c>EntryInfo</c>
            instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEntryInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.
            </summary>
            <param name="path">The path in the repository to the entry to return an
            <c>EntryInfo</c> instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEntryInfo(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.
            </summary>
            <param name="entryUuid">The UUID of the entry in the current repository
            to return an <c>EntryInfo</c> instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEntryInfo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the entry to retrieve information about.</param>
            <param name="childName">The name of the entry to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.TryGetEntryInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.
            </summary>
            <param name="entryId">The ID of the entry to return an <c>EntryInfo</c>
            instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.TryGetEntryInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.
            </summary>
            <param name="path">The path in the repository to the entry to return an
            <c>EntryInfo</c> instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.TryGetEntryInfo(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.
            </summary>
            <param name="entryUuid">The UUID of the entry in the current repository
            to return an <c>EntryInfo</c> instance for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.TryGetEntryInfo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the entry to retrieve information about.</param>
            <param name="childName">The name of the entry to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the specified
            entry in the current repository, or null if the entry cannot be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetShortcutTarget(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.
            </summary>
            <param name="shortcutId">The entry ID of the shortcut whose target
            entry shall be returned.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetShortcutTarget(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.
            </summary>
            <param name="shortcutPath">The path in the repository to the shortcut whose
            target entry shall be returned.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetShortcutTarget(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.
            </summary>
            <param name="shortcutUuid">The entry UUID of the shortcut in the current
            repository whose target entry shall be returned.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetShortcutTarget(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance representing
            the parent folder of the shortcut.</param>
            <param name="shortcutName">The name of the shortcut in the folder whose
            target entry shall be returned.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryInfo</c> instance which represents the target entry
            of the specified shortcut in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetFieldValue(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the value of a single field set on an entry.  Throws an exception
            if the specified field is not set.
            </summary>
            <param name="entryId">The entry ID of the entry to retrieve the field value of.</param>
            <param name="fieldName">The name of the field to retrieve the value of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The set value of the field.</returns>
            <remarks>
            Prefer to call <c>GetFieldValues</c> over this method.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetFieldValue(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the value of a single field set on an entry.  Throws an exception
            if the specified field is not set.
            </summary>
            <param name="path">The path to the entry in the repository</param>
            <param name="fieldName">The name of the field to retrieve the value of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The set value of the field.</returns>
            <remarks>
            Prefer to call <c>GetFieldValues</c> over this method.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetFieldValues(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the field values set on an entry.
            </summary>
            <param name="entryId">The ID of the entry to return the field values of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FieldValueCollection</c> instance which represents the
            collection of set field values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetFieldValues(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the field values set on an entry.
            </summary>
            <param name="path">The path to the entry in the repository to return the
            field values of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FieldValueCollection</c> instance which represents the
            collection of set field values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="entryId">The ID of the entry to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.DeleteAsync(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="entryId">The ID of the entry to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the deletion progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="path">The path to the entry in the repository to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.DeleteAsync(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="path">The path to the entry in the repository to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the deletion progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Delete(System.Int32,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="entryId">The ID of the entry to delete.</param>
            <param name="options">The options to use.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.DeleteAsync(System.Int32,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="entryId">The ID of the entry to delete.</param>
            <param name="options">The options to use.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the deletion progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Delete(System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="path">The path to the entry in the repository to delete.</param>
            <param name="options">The options to use.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.DeleteAsync(System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an entry from a Laserfiche repository.
            </summary>
            <param name="path">The path to the entry in the repository to delete.</param>
            <param name="options">The options to use.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the deletion progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Copy(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the newly created copy.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Copy(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="flag">Members of the <c>EntryNameOption</c> enumeration which
            control how the new entry will be named.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the newly created copy.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Copy(System.String,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="flag">Members of the <c>EntryNameOption</c> enumeration which
            control how the new entry will be named.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the newly created copy.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Copy(System.String,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.String@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="flags">Members of the <c>EntryNameOption</c> enumeration which
            control how the new entry will be named.</param>
            <param name="realPath">A reference to the actual path to the destination entry
            that was chosen by the server for the copy operation.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the newly created copy.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.CopyAsync(System.String,System.String,System.Int32@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository using an asynchronous operation.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="entryId">The entry ID of the newly created copy.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.CopyAsync(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.Int32@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository using an asynchronous operation.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="flag">Members of the <c>EntryNameOption</c> enumeration to control
            how the entry is copied.</param>
            <param name="entryId">The entry ID of the newly created copy.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.CopyAsync(System.String,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.Int32@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository using an asynchronous operation.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="flag">Members of the <c>EntryNameOption</c> enumeration to control
            how the entry is copied.</param>
            <param name="entryId">The entry ID of the newly created copy.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.CopyAsync(System.String,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.String@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Make a copy of an entry in a Laserfiche repository using an asynchronous operation.
            </summary>
            <param name="existingPath">The path in the repository to the source entry.</param>
            <param name="newPath">The path in the repository to the new entry to create.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="flags">Members of the <c>EntryNameOption</c> enumeration to control
            how the entry is copied.</param>
            <param name="realPath">A reference to the actual path to the destination entry
            that was chosen by the server for the copy operation.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Move(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Change the path of an entry in a Laserfiche repository.
            </summary>
            <param name="existingEntryId">The id in the repository to the entry to move.</param>
            <param name="newPath">The new path of the entry.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The new path to the entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Move(System.Int32,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Change the path of an entry in a Laserfiche repository.
            </summary>
            <param name="existingEntryId">The Id in the repository to the entry to move.</param>
            <param name="newPath">The new path of the entry.</param>
            <param name="flag">Members of the <c>EntryNameOption</c> enumeration to control
            how the entry is moved.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The new path to the entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Migrate(System.Int32,System.String,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Migrates a document between volumes, sets the default volume on a folder,
            or perform both operations on a folder tree.
            </summary>
            <param name="entryId">The entry ID of the entry to migrate between volumes.</param>
            <param name="destVol">The name of the volume to migrate to.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration specifying
            how to process folders.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Migrate(System.String,System.String,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Migrates a document between volumes, sets the default volume on a folder,
            or perform both operations on a folder tree.
            </summary>
            <param name="entryPath">The repository path in the current repository of the
            entry to migrate.</param>
            <param name="destVol">The name of the volume to migrate to.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration specifying
            how to process folders.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.MigrateAsync(System.Int32,System.String,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Asynchronously migrates a document between volumes, sets the default volume
            on a folder, or perform both operations on a folder tree.
            </summary>
            <param name="entryId">The entry ID of the entry to migrate between volumes.</param>
            <param name="destVol">The name of the volume to migrate to.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration specifying
            how to process folders.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance that represents the asynchronous
            volume migration operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.MigrateAsync(System.String,System.String,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Asynchronously migrates a document between volumes, sets the default volume
            on a folder, or perform both operations on a folder tree.
            </summary>
            <param name="entryPath">The repository path in the current repository of the
            entry to migrate.</param>
            <param name="destVol">The name of the volume to migrate to.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration specifying
            how to process folders.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance that represents the asynchronous
            volume migration operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAssignedTags(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the tags assigned to a specified entry.
            </summary>
            <param name="entryId">The ID of the entry that the tags in the
            returned collection are assigned to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryTagCollection</c> instance which represents the
            collection of tags the specified entry has assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAssignedTags(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the tags assigned to a specified entry.
            </summary>
            <param name="path">The path to the entry in the repository to return
            assigned tags for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryTagCollection</c> instance which represents the
            collection of tags the specified entry has assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.Unlock(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Forcibly deletes an entry lock.
            </summary>
            <param name="entryId">The entry ID of the locked entry.</param>
            <param name="lockToken">The lock token identifying the entry lock to be deleted.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAccessControl(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntrySecurity</c> instance which describes the access
            control list (ACL) and other security settings for the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return the <c>EntrySecurity</c>
            instance to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntrySecurity</c> instance which describes the access
            control list (ACL) and other security settings for the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAccessControl(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntrySecurity</c> instance which describes the access
            control list (ACL) and other security settings for the specified entry.
            </summary>
            <param name="entryPath">The repository path to the entry to return the
            <c>EntrySecurity</c> instance to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntrySecurity</c> instance which describes the access
            control list (ACL) and other security settings for the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return the current session's
            access to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            current session's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the specified entry.
            </summary>
            <param name="entryPath">The path in the current repository to the entry to
            return the current session's access to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            current session's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return the specified trustee's
            access to.</param>
            <param name="ident">An <c>IdentityReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to return the specified trustee's
            access to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the effective access rights each input trustee has
            to each input entry.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the effective access rights each input trustee has
            to each input entry.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="sids">The <c>SecurityIdentifier</c> of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetEffectiveRightsEx(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the effective access rights each input trustee has
            to each input entry. Check if the trustee missing tag as well.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to <c>EntryRights</c> enumeration and 
            a boolean indicating whether the trustee misses tags on the target entry. 
            Null for that boolean means server did not return the infomation. </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetEffectiveRightsEx(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the effective access rights each input trustee has
            to each input entry. Check if the trustee missing tag as well.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="sids">The <c>SecurityIdentifier</c> of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to <c>EntryRights</c> enumeration and 
            a boolean indicating whether the trustee misses tags on the target entry. 
            Null for that boolean means server did not return the infomation. </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRightsEx(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryPath">The path in the current repository to the entry to
            return the specified trustee's access to.</param>
            <param name="ident">An <c>IdentityReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRightsEx(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryPath">The path in the current repository to the entry to
            return the specified trustee's access to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryPath">The path in the current repository to the entry to
            return the specified trustee's access to.</param>
            <param name="ident">An <c>IdentityReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights the specified trustee has
            to the specified entry.
            </summary>
            <param name="entryPath">The path in the current repository to the entry to
            return the specified trustee's access to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance that references the
            trustee to return access rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's effective access to the specified entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAclDisplayRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified entry
            to the specified trustee.
            </summary>
            <param name="entryId">The ID of the entry with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the ACL fconfigured on each input entry
            to each input trustee.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates and returns the ACL fconfigured on each input entry
            to each input trustee.
            </summary>
            <param name="entryIds">The IDs of the target entries.</param>
            <param name="sids">The <c>SecurityIdentifier</c> instances of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAclDisplayRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified entry
            to the specified trustee.
            </summary>
            <param name="entryId">The ID of the entry with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAclDisplayRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified entry
            to the specified trustee.
            </summary>
            <param name="entryPath">The path in the repository to the entry with the ACL
            to use to calculate the granted access for the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetAclDisplayRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified entry
            to the specified trustee.
            </summary>
            <param name="entryPath">The path in the repository to the entry with the ACL
            to use to calculate the granted access for the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetGeographyData(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the geography data for the specified entry, or null if geography data
            is not available.
            </summary>
            <param name="entryId">The ID of the entry to return the associated geography data for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The geography data for the specified entry, or null if geography data
            is not available.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetGeographyData(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the geography data for the specified entry, or null if geography data
            is not available.
            </summary>
            <param name="entryPath">The path to the entry to return the associated geography data for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The geography data for the specified entry, or null if geography data
            is not available.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.SetGeographyData(System.Int32,Laserfiche.RepositoryAccess.EntryGeography,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Stores geography data associated with the specified entry in the repository.
            </summary>
            <param name="entryId">The ID of the entry to associated with the stored geography data.</param>
            <param name="data">The geography data.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.SetGeographyData(System.String,Laserfiche.RepositoryAccess.EntryGeography,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Stores geography data associated with the specified entry in the repository.
            </summary>
            <param name="entryPath">The path to the entry associated with the stored geography data.</param>
            <param name="data">The geography data, in binary form.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Entry.GetWopiAccessToken(System.Int32,System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session,System.Int32@)">
            <summary>
            For internal Laserfiche use only.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryRights">
            <summary>
            Access rights for Laserfiche entry objects.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Browse">
            <summary>
            Permission to browse the entry in the folder browser and search results.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Read">
            <summary>
            Permission to read the entry's contents and metadata.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.WriteContent">
            <summary>
            Permission to write to the entry's contents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.AddPage">
            <summary>
            Permission to add pages to the document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Rename">
            <summary>
            Permission to rename the entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.RemovePage">
            <summary>
            Permissions to remove pages from the document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Freeze">
            <summary>
            Permission to create a records management freeze (i.e., a hold) on a record
            or folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Annotate">
            <summary>
            Permission to create, modify and delete annotations in the document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.SeeThroughRedactions">
            <summary>
            Permission to see through redactions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.SeeAnnotations">
            <summary>
            Permission to see annotations in the document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.SetReviewDate">
            <summary>
            Permission to set the vital record review date of the record.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.WriteMetadata">
            <summary>
            Permission to write the metadata for the entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.CreateFolder">
            <summary>
            Permission to create a subfolder in the current folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.CreateDocument">
            <summary>
            Permission to create or add a document/shortcut to the current folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.SetEventDate">
            <summary>
            Permission to set a records management event date on the entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Close">
            <summary>
            Permission to close the record folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.Delete">
            <summary>
            Permission to delete the entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.ReadPermissions">
            <summary>
            Permission to read the entry's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.ChangePermissions">
            <summary>
            Permission to write the entry's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.TakeOwnership">
            <summary>
            Permission to take ownership of the entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryRights.FullControl">
            <summary>
            A combination of all entry access rights.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryAccessScope">
            <summary>
            Enumeration of scopes for Laserfiche entry access control entries.  Combines
            the information of the <c>InheritanceFlags</c> and <c>PropagationFlags</c>
            enumerations into a single enumeration.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.ThisEntry">
            <summary>
            This entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.Folders">
            <summary>
            This entry and subfolders.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.All">
            <summary>
            This entry, subfolders and documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.NotThisEntry">
            <summary>
            Subfolders and documents only.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.FoldersOnly">
            <summary>
            Subfolders only.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.DocumentsOnly">
            <summary>
            Documents only.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.Immediate">
            <summary>
            This entry, and subfolders and documents that are immediate children.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.ImmediateChildren">
            <summary>
            Subfolders and documents that are immediate children only.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryAccessScope.ImmediateDocuments">
            <summary>
            Documents that are immediate children only.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryAccessRule">
            <summary>
            Represents an access control entry (ACE) for a Laserfiche entry (i.e., document,
            folder, shortcut or record series).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryAccessRule.InheritedFrom">
            <summary>
            Gets the path to the entry that the represented ACE is inherited from,
            or the empty string if the represented ACE is not inherted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryAccessRule.EntryRights">
            <summary>
            Gets the access mask associated with the represented ACE.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryAccessRule.EntryAccessScope">
            <summary>
            Gets the scope associated with the represented ACE.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.EntryRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.EntryRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.EntryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="inheritanceFlags">Members of the <c>InheritanceFlags</c>
            enumeration which control what kinds of entries can inherit this ACE.</param>
            <param name="propagationFlags">Members of the <c>PropagationFlags</c>
            enumeration which control how this ACE is propagated down the folder tree.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.EntryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="inheritanceFlags">Members of the <c>InheritanceFlags</c>
            enumeration which control what kinds of entries can inherit this ACE.</param>
            <param name="propagationFlags">Members of the <c>PropagationFlags</c>
            enumeration which control how this ACE is propagated down the folder tree.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.EntryRights,Laserfiche.RepositoryAccess.EntryAccessScope,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="scope">A member of the <c>EntryAccessScope</c> enumeration
            which specifies the scope of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.EntryRights,Laserfiche.RepositoryAccess.EntryAccessScope,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="entryRights">The access mask of the new ACE.</param>
            <param name="scope">A member of the <c>EntryAccessScope</c> enumeration
            which specifies the scope of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryType">
            <summary>
            An enumeration representing the types of Laserfiche entries.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryType.Document">
            <summary>
            The entry is a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryType.Shortcut">
            <summary>
            The entry is a shortcut.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryType.Folder">
            <summary>
            The entry is a folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryType.RecordSeries">
            <summary>
            The entry is a record series.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryNameOption">
            <summary>
            Options for entry naming and namespace operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.None">
            <summary>
            No entry naming option enabled.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.AutoRename">
            <summary>
            Automatically rename the entry by appending a suffix on name conflicts.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.Overwrite">
            <summary>
            Overwrite any existing entry with the same name.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.EnableTokenSubstitution">
            <summary>
            Enable token substitution in the entry name.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.IncludeAcls">
            <summary>
            Copy access control lists (ACL).
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.FoldersOnly">
            <summary>
            Only copy folders and record series, skipping shortcuts and documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryNameOption.ForcePurge">
            <summary>
            Immediately purge the entry when deleting, if the recycle bin is enabled.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryDepth">
            <summary>
            An enumeration of tree depths for entry operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryDepth.Zero">
            <summary>
            Operate only on the specified entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryDepth.One">
            <summary>
            Operate on the specificed entry and immediate children.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryDepth.Infinite">
            <summary>
            Operate on all entries in the folder tree with the specified entry as the root.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryGeography">
            <summary>
            Entry geography data object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryGeography.GeoObject">
            <summary>
            Gets or sets the data of an object which describes the geography's geometry,
            in EWKB format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryGeography.Text">
            <summary>
            Gets or sets descriptive text for the geographic object.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryInfo">
            <summary>
            Base type for all types which represent entry objects in a Laserfiche repository.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryInfo.diffedFieldValues">
            <summary>
            The diffed field values - replaces diffFvs which can't be deleted due to backwards compatibility.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Id">
            <summary>
            Gets the ID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.ParentId">
            <summary>
            Gets the ID of the parent entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Uuid">
            <summary>
            Gets the UUID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.EntryType">
            <summary>
            Gets a value of the <c>EntryType</c> enumeration which describes the type
            of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.IsContainer">
            <summary>
            Returns a boolean indicating if this entry is a container object; it can
            have other entries as children.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.IsLeaf">
            <summary>
            Returns a boolean indicating if this entry is a leaf object; it cannot
            have other entries as children.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Path">
            <summary>
            Gets the path in the Laserfiche repository to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Name">
            <summary>
            Gets or sets the base name of the entry.  For non-record series, this is the same
            as the <c>Name</c> property; for record series it does not include any code prefix.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.IsIndexed">
            <summary>
            Gets a boolean indicating if the entry has been indexed by the full-text search
            engine.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.IsNotIndexable">
            <summary>
            Gets or sets boolean indicating that the entry is not indexable by the full-text
            search engine.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.CreationTimeUtc">
            <summary>
            Gets the creation time of the entry in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.CreationTime">
            <summary>
            Gets the creation time of the entry in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.LastModifiedTimeUtc">
            <summary>
            Gets the last modification time of the entry in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.LastModifiedTime">
            <summary>
            Gets the last modification time of the entry in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.TemplateName">
            <summary>
            Gets the name of the template assigned to this entry, or null if no template
            is assigned.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.VolumeName">
            <summary>
            Gets the name of the volume that this entry is associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Creator">
            <summary>
            Gets the name of the user that created this entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Owner">
            <summary>
            Gets the user name of the entry's owner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.OwnerSid">
            <summary>
            Gets or sets the security identifier (SID) of the entry owner.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Comment">
            <summary>
            Gets or sets the comment text for the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.Language">
            <summary>
            Gets or sets the RFC 4646 compliant language code specifying the natural
            language the document is primarily composed in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.ClassificationLevel">
            <summary>
            Gets or sets the security classification level of the represented entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.ETag">
            <summary>
            Gets the HTTP entity tag (ETag) sent by Laserfiche for the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.KeepOldFieldValues">
            <summary>
            Gets or sets a value indicating whether to keep old field values.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new entry in the current Laserfiche repository using the
            settings specified by the current instance.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance representing the
            parent of the new entry.</param>
            <param name="name">A string representing the name of the new entry.</param>
            <param name="options">One or members of the <c>EntryNameOption</c>
            enumeration which specifies the options that control the naming of the
            new entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetFieldValue(System.String)">
            <summary>
            Returns the value of the specified field set on the represented document.
            </summary>
            <param name="fieldName">The name of the field to retrieve the value of.</param>
            <returns>The value of the field set on the represented document.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetFieldValues">
            <summary>
            Returns a collection of all the field values set on the represented entry.
            </summary>
            <returns>A <c>FieldValueCollection</c> instance which represents the
            collection of field values set on the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetBadFieldValues">
            <summary>
            Returns a collection of all field values that could not be set on the
            represented entry, due to constraint violations, values exceeding the
            maximum lengths, etc.
            </summary>
            <returns>A <c>ReadOnlyCollection&lt;BadFieldValue&gt;</c> instance which
            contains all the field values that could not be set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetFieldValues(Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Sets the value of a collection of fields on the represented entry. The
            <c>Save</c> method must be called to persist the change.
            </summary>
            <param name="fieldValues">The collection of field values to set on the
            represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetTemplate(System.String)">
            <summary>
            Assigns a template to the represented entry, relying upon default values
            for all of the fields.   The <c>Save</c> method must be called to persist the change.
            </summary>
            <param name="templateName">The name of the template to assign to the
            represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetTemplate(System.String,System.Boolean)">
            <summary>
            Assigns a template to the represented entry, relying upon default values
            for all of the fields.   The <c>Save</c> method must be called to persist the change.
            </summary>
            <param name="templateName">The name of the template to assign to the represented entry.</param>
            <param name="keepOldFieldValues">Flag indicating if old field values should be kept.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetTemplate(System.String,Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Set a template to the represented entry, optionally specifying values for
            some fields, which are not required to be members of the template.  The
            <c>Save</c> method must be called to persist the change.
            </summary>
            <param name="templateName">The name of the template to assign to the
            represented entry.</param>
            <param name="fieldValues">A collection of field values to assign to the
            represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetTemplate(System.String,Laserfiche.RepositoryAccess.FieldValueCollection,System.Boolean)">
            <summary>
            Set a template to the represented entry, optionally specifying values for
            some fields, which are not required to be members of the template.  The
            <c>Save</c> method must be called to persist the change.
            </summary>
            <param name="templateName">The name of the template to assign to the
            represented entry.</param>
            <param name="fieldValues">A collection of field values to assign to the
            represented entry.</param>
            <param name="keepOldFieldValues">Flag indicating if old field values should be kept.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.RemoveTemplate">
            <summary>
            Removes the current template assignment, if any, from the represented entry.  The
            <c>Save</c> method must be called to persist the change.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Dispose">
            <summary>
            Unlocks the entry if it is locked.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Delete">
            <summary>
            Marks the entry represented by this instance for deletion when pending
            changes are submitted to Laserfiche (i.e., you must then call
            <see cref="M:Laserfiche.RepositoryAccess.EntryInfo.Save"/>).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CopyTo(System.String)">
            <summary>
            Makes a copy of the represented entry.  The operation will occur immediately.
            </summary>
            <param name="newPath">The path in the repository to the new copy of the represented
            entry.</param>
            <returns>The ID of the new entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CopyTo(System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Makes a copy of the represented entry.  The operation will occur immediately.
            </summary>
            <param name="newPath">The path in the repository to the new copy of the represented
            entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the new entry.</param>
            <returns>The ID of the new entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CopyTo(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Makes a copy of the represented entry.  The operation will occur immediately.
            </summary>
            <param name="newPath">The path in the repository to the new copy of the represented
            entry.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the new entry.</param>
            <returns>The ID of the new entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CopyToAsync(System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.Int32@)">
            <summary>
            Makes a copy of the represented entry asynchronously.  The operation will occur
            immediately.
            </summary>
            <param name="newPath">The path in the repository to the new copy of the represented
            entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the new entry.</param>
            <param name="entryId">The entry ID of the newly created copy.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CopyToAsync(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,System.Int32@)">
            <summary>
            Makes a copy of the represented entry asynchronously.  The operation will occur
            immediately.
            </summary>
            <param name="newPath">The path in the repository to the new copy of the represented
            entry.</param>
            <param name="targetVol">The name of the target volume, or null to use the
            default volume.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the new entry.</param>
            <param name="entryId">The entry ID of the newly created copy.</param>
            <returns>A LongOperation class to keep track of the copy progress.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MoveTo(System.String)">
            <summary>
            Moves the represented entry to the specified path.  The operation will occur immediately.
            </summary>
            <param name="newPath">The new path of the represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MoveTo(System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Moves the represented entry to the specified path.  The operation will occur immediately.
            </summary>
            <param name="newPath">The new path of the represented entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MoveTo(Laserfiche.RepositoryAccess.FolderInfo,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Moves the represented entry to the specified path.  The operation will occur immediately.
            </summary>
            <param name="newParent">A <c>FolderInfo</c> instance which represents the
            new parent folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MoveTo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Moves the represented entry to the specified path.  The operation will occur immediately.
            </summary>
            <param name="newParent">A <c>FolderInfo</c> instance which represents the
            new parent folder.</param>
            <param name="newName">The new name of the represented entry, not including
            the path to the parent.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.RenameTo(System.String)">
            <summary>
            Changes the name of the represented entry.  The operation will occur immediately.
            </summary>
            <param name="newName">The new name of the represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.RenameTo(System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Changes the name of the represented entry.  The operation will occur immediately.
            </summary>
            <param name="newName">The new name of the represented entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration which
            control the naming of the entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MigrateTo(System.String)">
            <summary>
            Migrates the represented entry to another volume if the represented
            entry is a document, or sets the default volume for children if the
            represented entry is a folder.  The operation will occur immediately.
            </summary>
            <param name="volumeName">The name of the destination volume.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MigrateTo(System.String,Laserfiche.RepositoryAccess.EntryDepth)">
            <summary>
            Migrates the represented entry to another volume if the represented
            entry is a document, or the specified entries in the folder tree if
            the represented entry is a folder.  The operation will occur immediately.
            </summary>
            <param name="volumeName">The name of the destination volume.</param>
            <param name="depth">The depth of the folder tree to migrate if the
            represented entry is a folder.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.MigrateToAsync(System.String,Laserfiche.RepositoryAccess.EntryDepth)">
            <summary>
            Asynchronously migrates the represented entry to another volume if the
            represented entry is a document, or the specified entries in the folder tree
            if the represented entry is a folder.  The operation will occur immediately.
            </summary>
            <param name="volumeName">The name of the destination volume.</param>
            <param name="depth">The depth of the folder tree to migrate if the
            represented entry is a folder.</param>
            <returns>A <c>LongOperation</c> instance that represents the asynchronous
            volume migration operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetAssignedTags">
            <summary>
            Returns information about all the tags assigned to the represented entry.
            </summary>
            <returns>An <c>EntryTagCollection</c> instance which represents the collection
            of tags assigned to the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.AssignTag(Laserfiche.RepositoryAccess.TagInfo,System.String)">
            <summary>
            Assigns a tag to the represented entry.  The operation occurs immediately.
            </summary>
            <param name="tag">A <c>TagInfo</c> instance which represents the tag to
            assign to the represented entry.</param>
            <param name="comment">A comment for assigned tag.</param>
            <returns>A new <c>EntryTag</c> instance which represents the new tag
            assignment.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.UnassignTag(System.Int32)">
            <summary>
            Removes the specified tag assignment from the represented entry.  The operation
            occurs immediately.
            </summary>
            <param name="tagId">The ID of the tag to unassign from the represented entry.</param>
            <returns>True if the tag was unassigned, false if the tag was not already
            assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetEntryLinks">
            <summary>
            Returns a information about the entry links that the represented entry
            is a part of.
            </summary>
            <returns>An <c>EntryLinkCollection</c> instance which represents the
            collection of entry links that the represented entry is a part of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetEntryLinks(System.Boolean)">
            <summary>
            Gets the entry links.
            </summary>
            <param name="ensurePathsLoaded">If set to <c>true</c> ensures the source and target paths are loaded.
            If set to <c>false</c>, the SourcePath and TargetPath properties will be empty. 
            False will provide better performance if the paths are not used.
            </param>
            <returns>The collection of entry links for this document.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:Laserfiche.RepositoryAccess.NoConnectionException"></exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CreateLinkTo(Laserfiche.RepositoryAccess.EntryInfo,System.Int32,System.String)">
            <summary>
            Creates an entry link with the represented entry as the source and the
            entry specified by the <paramref name="target"/> parameter as the target.  The
            operation occurs immediately.
            </summary>
            <param name="target">An <c>EntryInfo</c> instance which represents the
            target of the new link.</param>
            <param name="linkTypeId">The ID of the entry link type to use for the new link.</param>
            <param name="description">Descriptive text for the new link.</param>
            <returns>A new <c>EntryLinkInfo</c> instance which represents the new entry link.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.RemoveLinkTo(System.Int32,System.Int32)">
            <summary>
            Removes a link from this entry to another specified entry.  The operation
            occurs immediately.
            </summary>
            <param name="targetId">The entry ID of the target entry of the link to remove.</param>
            <param name="entryLinkId">The ID of the entry link type of the link to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetShortcuts">
            <summary>
            Returns a collection of Shortcut for the represented Entry.
            </summary>
            <returns>A <c>ReadOnlyCollection</c> instance which represents the shortcut entry ids 
            for the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetParentFolder">
            <summary>
            Returns a <c>FolderInfo</c> instance which represents the parent folder
            of the entry.
            </summary>
            <returns>A <c>FolderInfo</c> instance which represents the parent folder
            of the entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Index(Laserfiche.RepositoryAccess.EntryInfo.PropertyTypes)">
            <summary>
            Submits a request to (re)index the represented entry in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetAccessControl">
            <summary>
            Returns the access control information for the represented entry.
            </summary>
            <returns>An <c>EntrySecurity</c> instance which represents the access control
            information for the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetAccessControl(Laserfiche.RepositoryAccess.EntrySecurity)">
            <summary>
            Sets the access control information for the represented entry.
            </summary>
            <param name="entrySecurity">An <c>EntrySecurity</c> instance which represents
            the access control information to apply to the represented entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetEffectiveRights">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the represented entry.
            </summary>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            current session's effective access to the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetEffectiveRights(System.Security.Principal.IdentityReference)">
            <summary>
            Calculates and returns the effective access rights of the specified
            trustee to the represented entry.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance referencing
            the trustee to return the effective rights for.</param>
            <returns>An <c>EntryRights value</c> representing the effective access
            rights of the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetEffectiveRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Calculates and returns the effective access rights of the specified
            trustee to the represented entry.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance referencing
            the trustee to return the effective rights for.</param>
            <returns>An <c>EntryRights value</c> representing the effective access
            rights of the represented entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetAclDisplayRights(System.Security.Principal.IdentityReference)">
            <summary>
            Returns the rights granted through the ACL configured on the represented entry
            to the specified trustee.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the represented
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.GetAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Returns the rights granted through the ACL configured on the represented entry
            to the specified trustee.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access
            for.</param>
            <returns>Members of the <c>EntryRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the represented
            entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Cutoff">
            <summary>
            Performs a records management cut-off of the represented entry.  The entry
            must be eligible for cut-off to succeed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.UnCutoff">
            <summary>
            Perform a records management un-cutoff of the represented entry.  The entry
            must be cutoff but not have undergone final disposition to succeed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.ConfirmTransfer(System.Int32)">
            <summary>
            Confirms a records management transfer of the represented entry.
            </summary>
            <param name="transferId">The transfer ID of the transfer operation
            to confirm.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.ConfirmFinalDisposition">
            <summary>
            Confirms a records management final disposition on the represented entry.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateNextReviewDate(System.DateTime)">
            <summary>
            Calculates the next scheduled vital record review date from a specified
            base date.
            </summary>
            <param name="baseDate">The date of last review to base the next review
            calculation off of.</param>
            <returns>A <c>DateTime</c> value representing the next scheduled vital
            record review date from the specified base date.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateDispositionEligibilityDate(System.DateTime)">
            <summary>
            Returns the final disposition eligiblity date for the represented entry
            given a specified cut-off date.
            </summary>
            <param name="cutoffDate">The cutoff date to use when calculating the
            final disposition eligiblity date.</param>
            <returns>A <c>DateTime</c> value representing the final disposition
            eligiblity date for the represented entry given the specified cut-off
            date.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateDispositionEligibilityDate(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.DateTime}})">
            <summary>
            Returns the final disposition eligibility date from the provided set of event dates.
            </summary>
            <param name="eventDates">A collection of event definition IDs and their
            corresponding dates.</param>
            <returns>A <c>DateTime</c> value representing the final disposition
            eligiblity date for the represented entry given the specified
            event dates.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateTransferDates(System.DateTime)">
            <summary>
            Calculate a set of transfer eligibility dates for the represented entry
            given a specified cutoff date.
            </summary>
            <param name="cutoffDate">The cutoff date to assume when calculating transfer
            eligibility dates for the represented entry.</param>
            <returns>An array of <c>TransferDate</c> instances representing the
            calculated set of transfer eligibility dates for the represented entry
            given a specified cutoff date.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateTransferDates(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.DateTime}})">
            <summary>
            Calculates a set of transfer eligibility dates for the represented entry
            given a specified set of event dates.
            </summary>
            <param name="eventDates">A collection of event definition IDs and their
            corresponding dates.</param>
            <returns>An array of <c>TransferDate</c> instances representing the
            calculated set of transfer eligibility dates for the represented entry
            given a specified set of event dates.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.CalculateTransferEligibility(System.Int32)">
            <summary>
            Returns the transfer eligibity date for the specified transfer on the represented
            entry.
            </summary>
            <param name="transferId">The ID of the transfer to return the eligibility date of.</param>
            <returns>A <c>DateTime</c> value representing the transfer eligibity date for the
            specified transfer on the represented entry.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.EntryLock">
            <summary>
            Gets an <c>EntryLock</c> instance which represents the entry lock, if any,
            associated with this <c>EntryInfo</c> instance, or null if no entry lock
            is associated.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.IsLocked">
            <summary>
            Gets a boolean indicating if the represented entry is locked by this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Lock(Laserfiche.RepositoryAccess.LockType,System.Nullable{System.TimeSpan},System.String,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Locks the represented entry so that it cannot be modified except through
            this object instance.
            </summary>
            <param name="type">A member of the <c>LockType</c> enumeration specifying
            the type of lock to create.</param>
            <param name="duration">How long the lock should exist before expiring.</param>
            <param name="comment">A free-form string to store along with the lock.</param>
            <param name="extent">A member of the <c>LockExtent</c> enumeration specifying
            the extent of lock that will cover.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.LockWithCheck(Laserfiche.RepositoryAccess.LockType,System.Nullable{System.TimeSpan},System.String,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Locks the represented entry so that it cannot be modified except through
            this object instance after first checking that the entry has not been
            modified since information about it was last retrieved.
            </summary>
            <param name="type">A member of the <c>LockType</c> enumeration specifying
            the type of lock to create.</param>
            <param name="duration">How long the lock should exist before expiring.</param>
            <param name="comment">A free-form string to store along with the lock.</param>
            <param name="extent">A member of the <c>LockExtent</c> enumeration specifying
            the extent of the lock that will cover.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.Unlock">
            <summary>
            Removes the lock on the represented entry, if the entry was locked with
            this object instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.LockToken">
            <summary>
            For internal use by Laserfiche.RepositoryAccess.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryInfo.LockedExtent">
            <summary>
            Gets or sets a <c>LockExtent</c> value which represents the lock covered extent.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.ImbueLock(System.String,Laserfiche.RepositoryAccess.LockType,Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Imbue a lock to the EntryInfo.
            It is useful when accessing an entry locked by other process.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.ForgetLock">
            <summary>
            Forget the lock linked to this object so that is will not be unlocked during disposal.
            It is only safe to use with locks acquired by ImbueLock().
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryInfo.SetGeographyData(Laserfiche.RepositoryAccess.EntryGeography)">
            <summary>
            Stores geography data associated with the entry in the repository.
            </summary>
            <param name="data">The geography data.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLink">
            <summary>
            Collection of methods for creating and managing entry links.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.Create(Laserfiche.RepositoryAccess.EntryInfo,Laserfiche.RepositoryAccess.EntryInfo,System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new entry link object between two Laserfiche entries.
            </summary>
            <param name="source">An <c>EntryInfo</c> instance which represents the source
            entry of the new link.</param>
            <param name="target">An <c>EntryInfo</c> instance which represents the target
            entry of the new link.</param>
            <param name="linkTypeId">The ID of the link type of the new link.</param>
            <param name="description">Descriptive text for the new link.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryLinkInfo</c> instance which represents the new link object
            in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.Delete(System.Int32,System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing entry link between two Laserfiche entries.
            </summary>
            <param name="sourceId">The entry ID of the source entry of the entry link.</param>
            <param name="targetId">The entry ID of the target entry of the entry link.</param>
            <param name="entryTypeId">The link type ID of the entry link.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.Delete(Laserfiche.RepositoryAccess.EntryLinkInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing entry link between two Laserfiche entries.
            </summary>
            <param name="linkInfo">An <c>EntryLinkInfo</c> instance which represents
            the entry link.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.Update(Laserfiche.RepositoryAccess.EntryLinkInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the data for an existing entry link object.
            </summary>
            <param name="linkInfo">An <c>EntryLinkInfo</c> instance which represents the entry
            link to update.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetEntryLinks(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of <c>EntryLinkInfo</c> instances for an entry
            which describe all the entry links the specified entry is part of.
            </summary>
            <param name="entryId">The ID of the entry to return entry link
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryLinkCollection</c> instance which represents
            the collection of entry links that the specified entry is part of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetEntryLinks(System.Int32,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of <c>EntryLinkInfo</c> instances for an entry
            which describe all the entry links the specified entry is part of.
            </summary>
            <param name="entryId">The ID of the entry to return entry link
            information about.</param>
            <param name="ensurePathsLoaded">If set to <c>true</c>, indicates that the source and target paths
            will be populated with data if they are not already loaded. If is <c>false</c> the paths will
            be empty if they are not returned by the server. False is more efficient if the paths are not
            used.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>
            An <c>EntryLinkCollection</c> instance which represents
            the collection of entry links that the specified entry is part of.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">entryId</exception>
            <exception cref="T:System.ArgumentNullException">session</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetEntryLinks(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of <c>EntryLinkInfo</c> instances for an entry
            which describe all the entry links the specified entry is part of.
            </summary>
            <param name="entryPath">The path to the entry in the repository to return
            entry link information about</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryLinkCollection</c> instance which represents
            the collection of entry links that the specified entry is part of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetEntryLinks(System.String,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of <c>EntryLinkInfo</c> instances for an entry
            which describe all the entry links the specified entry is part of.
            </summary>
            <param name="entryPath">The path to the entry in the repository to return
            entry link information about</param>
            <param name="ensurePathsLoaded">If set to <c>true</c>, indicates that the source and target paths
            will be populated with data if they are not already loaded. If is <c>false</c> the paths will
            be empty if they are not returned by the server. False is more efficient if the paths are not
            used.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryLinkCollection</c> instance which represents
            the collection of entry links that the specified entry is part of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the properties for the specified entry link.
            </summary>
            <param name="entryLinkId">The ID of the entry link.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> containing the properties for the specified
            entry link.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the named properties for the specified entry link.
            </summary>
            <param name="entryLinkId">The ID of the entry link.</param>
            <param name="propertyNames">A list of property names to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> containing the properties for the specified
            entry link.  Missing properties will have null values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLink.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and deletes the specified properties for an entry link.
            </summary>
            <param name="entryLinkId">The ID of the entry link.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
            <remarks>This operation is atomic and throws an exception on failure.
            Attemping to remove a property which does not exist will not cause an error,
            as long as the entry link exists.</remarks>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLinkCollection">
            <summary>
            Represents a read-only collection of <c>EntryLinkInfo</c> instances,
            which represent entry link objects.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkCollection.CopyTo(Laserfiche.RepositoryAccess.EntryLinkInfo[])">
            <summary>
            Copies the entire <c>EntryLinkInfo</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.EntryLinkInfo[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>EntryLinkInfo</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLinkInfo">
            <summary>
            Represents a Laserfiche entry link object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.Id">
            <summary>
            Gets the ID of the entry link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.SourceId">
            <summary>
            Gets the ID of the source entry of the represented link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.SourcePath">
            <summary>
            Gets the path to the source entry of the represented link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.TargetId">
            <summary>
            Gets the ID of the target entry of the represented link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.TargetPath">
            <summary>
            Gets the path to the target entry of the represented link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.EntryLinkTypeId">
            <summary>
            Gets the ID of the entry link type associated with the represented entry link.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkInfo.Description">
            <summary>
            Gets or sets the descriptive text for the represented entry link.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLinkType">
            <summary>
            Collection of static methods for managing entry link types in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.Create(Laserfiche.RepositoryAccess.EntryLinkTypeInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new entry link type from the information specified by a "template"
            <c>EntryLinkTypeInfo</c> instance.
            </summary>
            <param name="info">An <c>EntryLinkTypeInfo</c> instance which specifies the
            settings for the new entry link type.  The instance is not modified.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified entrylinktype name conflicts with an existing
            entrylinktype definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLinkTypeInfo</c> instance which represents the
            new entry link type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.Update(System.Int32,Laserfiche.RepositoryAccess.EntryLinkTypeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings for an entry link type object.
            </summary>
            <param name="linkTypeId">The ID of the entry link type to update.</param>
            <param name="info">An <c>EntryLinkTypeInfo</c> instance which specifies the
            updates settings for the specified entry link type.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing entry link type in a Laserfiche repository.
            </summary>
            <param name="linkTypeId">The ID of the entry link type to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about an entry link type definition in a Laserfiche repository.
            </summary>
            <param name="linkTypeId">The ID of the entry link type to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>EntryLinkTypeInfo</c> instance which represents the
            specified entry link type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>EntryLinkTypeInfoReader</c> instance which can be used to enumerate
            information about all the available entry link types in the current Laserfiche
            repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>EntryLinkTypeInfoReader</c> instance which can be used to enumerate
            information about all the available entry link types in the current Laserfiche
            repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified entry link type.
            </summary>
            <param name="linkTypeId">The ID of the entry link type.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified entry link type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified entry link type.
            </summary>
            <param name="linkTypeId">The ID of the entry link type.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified entry link type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified entry link type.
            </summary>
            <param name="linkTypeId">The ID of the entry link type.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all entry link types.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all entry link types.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkType.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all entry link types.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLinkTypeInfo">
            <summary>
            Represents an entry link type definition in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.Id">
            <summary>
            Gets the ID of the represented entry link type definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.SourceLabel">
            <summary>
            Gets or sets the label for the source entry in the link type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.TargetLabel">
            <summary>
            Gets or sets the label for the target entry in the link type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.Description">
            <summary>
            Gets or sets the description of the link type.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.#ctor">
            <summary>
            Initializes an <c>EntryLinkTypeInfo</c> instance representing a new entry
            link type definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.#ctor(Laserfiche.RepositoryAccess.EntryLinkTypeInfo)">
            <summary>
            Initializes an <c>EntryLinkTypeInfo</c> instance representing a new entry
            link type definition using properties from an existing
            <c>EntryLinkTypeInfo</c> instance.
            </summary>
            <param name="source">A <c>EntryLinkTypeInfo</c> instance to draw property
            settings from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLinkTypeInfo.Delete">
            <summary>
            Marks the entry link type represented by this instance for deletion when pending
            changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLinkTypeInfoReader">
            <summary>
            Provides the ability to enumerate information about the entry link type
            definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingRow">
            <summary>
            Represents the data of a single row in an entry listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingRow.EntryListing">
            <summary>
            Gets the entry listing instance that this row is associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingRow.Length">
            <summary>
            Gets the number of columns in the row.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingRow.Item(System.Int32)">
            <summary>
            Gets a value in one of the columns in this row.
            </summary>
            <param name="index">The index of the column to retrieve the data from.</param>
            <returns>The data in the specified column.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingRow.Item(System.String)">
            <summary>
            Gets a value in one of the columns in this row.
            </summary>
            <param name="fieldName">The name of the template field whose data
            will be returned.</param>
            <returns>The data in the specified column.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingRow.Item(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Gets a value in one of the columns in this row.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration that
            specifies the column whose data shall be returned.</param>
            <returns>The data in the specified column.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingRow.GetDatumAsString(System.Int32)">
            <summary>
            Gets a value in one of the columns in this row, formatted as a string.
            </summary>
            <param name="column">The index of the column to retrieve the data from.</param>
            <returns>The data in the specified column formatted as a string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingRow.GetDatumAsString(System.String)">
            <summary>
            Gets a value in one of the columns in this row, formatted as a string.
            </summary>
            <param name="fieldName">The name of the template field whose data
            will be returned.</param>
            <returns>The data in the specified column formatted as a string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingRow.GetDatumAsString(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Gets a value in one of the columns in this row, formatted as a string.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration that
            specifies the column whose data shall be returned.</param>
            <returns>The data in the specified column formatted as a string.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FolderStatistics">
            <summary>
            Represents a collection of statistics about the entries stored in a folder tree
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.DocumentCount">
            <summary>
            Gets a count of the number of documents in the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.IndexedChildEntryCount">
            <summary>
            Gets a count of the number of indexed entries in the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ChildFolderCount">
            <summary>
            Gets a count of the number of folders in the folder tree, excluding the
            root of the tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ShortcutCount">
            <summary>
            Gets a count of the number of shortcuts in the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.TemplateCount">
            <summary>
            Gets a count of the number of distinct templates assigned to entries in
            the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.PageCount">
            <summary>
            Gets a count of the total number of pages that are stored in documents which
            are stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ElectronicFileCount">
            <summary>
            Gets a count of the total number of electronic document files stored under the
            folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ImagePageCount">
            <summary>
            Gets a count of the total number of pages with images stored in documents which
            are stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.TextPageCount">
            <summary>
            Gets a count of the total number of pages with text stored in documents which
            are stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ImageFileSize">
            <summary>
            Gets the total sum of file sizes, in bytes, of image files associated with documents
            stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.TextFileSize">
            <summary>
            Gets the total sum of file sizes, in bytes, of text files associated with documents
            stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.LocationFileSize">
            <summary>
            Gets the total sum of file sizes, in bytes, of locations data files associated
            with documents stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ThumbnailFileSize">
            <summary>
            Gets the total sum of file sizes, in bytes, of the thumbnail image files
            associated with documents stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.TotalPageFileSize">
            <summary>
            Gets the total sum of all file sizes, in bytes, for all files associated with
            pages stored in documents under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.ElectronicFileSize">
            <summary>
            Gets the total sum of electronic document file sizes, in bytes, for documents
            stored under the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.TotalFileSize">
            <summary>
            Gets the total sum of all files, in bytes, associated with documents stored under
            the folder tree.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderStatistics.AttachmentFileSize">
            <summary>
            Gets the total sum of file sizes, in bytes, of attached files associated
            with documents stored under the folder tree.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.AggregateRewriter">
            <summary>
            Pulls aggregate functions out of subqueries into outer queries.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.AliasesProduced">
            <summary>
            Returns the names of all column aliases used in an <c>Expression</c> tree.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.ColumnProjector">
            <summary>
            Chooses unique names for column expressions in an <c>Expression</c> tree.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.ColumnProjector.Nominator">
            <summary>
            Collection <c>Expression</c> nodes in a set from an <c>Expression</c> tree
            that match a given predicate.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.Evaluator">
            <summary>
            Performs a partial evaluation of <c>Expression</c> trees by
            evaluting constant sub-expressions.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.ExpressionVisitor">
            <summary>
            Base type for classes which visit nodes of an <c>Expression</c> tree.  This
            class knows how to traverse LFQL specific classes which derive from <c>Expression</c>.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.QueryFormatter">
            <summary>
            Converts an <c>Expression</c> tree representing an LFQL query into
            an LFQL query string.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.QueryProvider">
            <summary>
            Given an <c>Expression</c> tree representing a LINQ query, returns a
            function (lambda) that when evaluated generates and submits to Laserfiche
            an equivalent LFQL query and returns an <c>LfDataReader</c> instance
            to iterate over the results.
            </summary>
            <remarks>
            The LINQ framework defines a set of classes which derive from <c>Expression</c>.
            LINQ queries are turned into trees of <c>Expression</c>-derived class nodes.
            The LINQ to LFQL framework augments the LINQ nodes with nodes that are specific
            to LFQL, but also derive from <c>Expression</c>.
            
            An <c>Expression</c> tree representing a LINQ query is transformed into an
            <c>Expression</c> tree representing an equivalent LFQL query by repeated
            transformations of the input tree, with each step bringing the tree to a form
            more closely resembling that of a natural LFQL query.  While the final tree
            can be straightforwardly formatted into a LFQL query string, the intermediate
            results can be hybrid mixtures of LINQ structure and LFQL specific nodes.
            LFQL table and column names are retrieved from special attributes on row types and
            column properties.
            
            The end result is an <c>Expression</c> tree with LFQL specific nodes that
            is formatted into an LFQL query using the <c>QueryFormatter</c> class.  A lambda
            expression is then generated which will execute the query using <c>LfCommand</c>
            and return the resulting <c>LfDataReader</c>.  A <c>ProjectionReader</c> class
            wraps the <c>LfDataReader</c> instance by using a lambda function to read data
            from the LfDataReader, returning the value as the type desired by LINQ.  The
            lambda function to perform the translation between <c>LfDataReader</c> and
            the desired output type is constructed at runtime by <c>ProjectionBuilder</c>.
            
            The <c>RepositoryContext</c> class is used to retrieve references to instances
            of <c>QueryableData</c> for the pre-defined tables.  Each pre-defined table has
            a corresponding class decorated with a <c>TableAttribute</c> attribute instance.
            Each column has a corresponding property decorated with a <c>ColumnAttribute</c>
            instance.  Each LFQL table also has a corresponding IQueryable implementation
            provided by a <c>QueryableData</c> instance managed by <c>RepositoryContext</c>.
            User-defined tables are not supported with this LINQ to LFQL provider.
            </remarks>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.QueryProvider.ProjectionBuilder">
            <summary>
            Generates a lambda function which reads columns from a <c>LfDataReader</c>
            instance and converts the values to the specified type.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.QueryableData`1">
            <summary>
            An implementation of the <c>IQueryable</c> interface which calls upon
            a <c>QueryProvider</c> instance to return a function (lambda) which can
            be evaluated to return an enumerator object.
            </summary>
            <typeparam name="TData">A type that will store each row of the output.</typeparam>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.QueryBinder">
            <summary>
            Transforms an <c>Expression</c> tree representing a LINQ query into a
            form more suitable for LFQL query generation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.RedundantSubqueryRemover">
            <summary>
            Removes redundant subqueries in an <c>Expression</c> tree by merging
            redundant subqueries into their parent queries.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.EntryRow">
            <summary>
            Represents a row of the LF.entry table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.PageRow">
            <summary>
            Represents a row of the LF.page table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.RecycledEntryRow">
            <summary>
            Represents a row of the LF.recycle_bin table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.VolumeRow">
            <summary>
            Represents a row of the LF.volume table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.TemplateRow">
            <summary>
            Represents a row of the LF.pset table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.FieldRow">
            <summary>
            Represents a row of the LF.prop_def table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.FieldValueRow">
            <summary>
            Represents a row of the LF.prop_value table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.EntryLinkTypeRow">
            <summary>
            Represents a row of the LF.link_def table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.EntryLinkRow">
            <summary>
            Represents a row of the LF.entry_link table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.TagRow">
            <summary>
            Represents a row of the LF.tag_def table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.EntryTagRow">
            <summary>
            Represents a row of the LF.entry_tag table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.AnnotationRow">
            <summary>
            Represents a row of the LF.annotation table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.LfAccountRow">
            <summary>
            Represents a row of the LF.trustee table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.TrusteeAttributeRow">
            <summary>
            Represents a row of the LF.trustee_attr table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.LfAccountGroupsRow">
            <summary>
            Represents a row of the LF.trustee_grp_list table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.TrustedGroupsRow">
            <summary>
            Represents a row of the LF.Trusted_Group_List table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.ElecDocTypeRow">
            <summary>
            Represents a row of the LF.elect_type table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.LdapAllowRow">
            <summary>
            Represents a row of the LF.Ldap_Allow table accessible via the LFQL. 
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.LdapDenyRow">
            <summary>
            Represents a row of the LF.Ldap_Deny table accessible via the LFQL. 
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.LdapServerProfileRow">
            <summary>
            Represents a row of the LF.Ldap_Sever_Profiles table accessible via the LFQL.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.RepositoryContext">
            <summary>
            Represents a context to retrieve objects that implement an <c>IQueryable</c>
            interface to generating Laserfiche Query Language (LFQL) queries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Linq.RepositoryContext.Connection">
            <summary>
            Gets the <c>LfConnection</c> instance used to connect to the Laserfiche
            repository to issue LFQL queries.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.RepositoryContext.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes an instance of <c>RepositoryContext</c> using an existing
            <c>Laserfiche.RepositoryAccess.Session</c> instance to connect to the
            Laserfiche repository.  A new <c>LfConnection</c> instance will be constructed.
            </summary>
            <param name="session">An open and ready <c>Laserfiche.RepositoryAccess.Session</c>
            instance.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.RepositoryContext.#ctor(System.String)">
            <summary>
            Initializes an instance of <c>RepositoryContext</c> using a provided
            connection string.  A new Laserfiche session will be created.
            </summary>
            <param name="connectionString">The connection string to be used to control
            how to connect to Laserfiche.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.RepositoryContext.#ctor(Laserfiche.RepositoryAccess.Data.LfConnection)">
            <summary>
            Initializes an instance of <c>RepositoryContext</c> using an existing
            <c>LfConnection</c> instance.
            </summary>
            <param name="connection">The <c>LfConnection</c> instance to use when issuing
            LFQL queries to Laserfiche.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.SubqueryRemover">
            <summary>
            A helper class which removes <c>SelectExpression</c> instances which
            match the given <c>SelectExpression</c> from an <c>Expression</c> tree.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.TypeSystem">
            <summary>
            A collection of utility methods for manipulating .NET types.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.TypeSystem.GetElementType(System.Type)">
            <summary>
            Given a type which implements <c>IEnumerable&lt;T&gt;</c>, return T; otherwise return null.
            </summary>
            <param name="seqType">A <c>Type</c> instance of the potential collection type.</param>
            <returns>The <c>Type</c> instance for elements of the provided collection type,
            or null if no such <c>Type</c> exists.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.TypeSystem.GetSequenceType(System.Type)">
            <summary>
            Given a type T, return a <c>Type</c> instance representing <c>IEnumerable&lt;T&gt;</c>.
            </summary>
            <param name="elementType">An instance of <c>Type</c>.</param>
            <returns>A <c>Type</c> which represents <c>IEnumerable&lt;T&gt;</c>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.TypeSystem.IsNullableType(System.Type)">
            <summary>
            Determines if a type is nullable.
            </summary>
            <param name="type">A <c>Type</c> instance representing a type to check
            for nullability.</param>
            <returns>True if the type that <paramref name="type"/> represents
            derives from <c>Nullable&lt;&gt;</c>, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Linq.TypeSystem.GetNonNullableType(System.Type)">
            <summary>
            Given a type, return its non-nullable counterpart.  Returns the argument for
            non-nullable types.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Linq.UnusedColumnRemover">
            <summary>
            Strips out columns in subqueries which are not referenced by their parents.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ListingBase`1">
            <summary>
            The base type for types which represent non-entry object listings in Laserfiche.
            </summary>
            <typeparam name="T">The type of object that will be listed.</typeparam>
            <remarks>
            Classes which derive from <c>ListingBase</c> implement non-entry object listings
            of Laserfiche objects.  Entry listings, such as folder listings, derive from the
            <c>EntryListingBase</c> class instead.  Listings in the <c>RepositoryAccess</c>
            namespace differ from readers (i.e., classes which derive from
            <c>LaserficheObjectReader</c>) by supporting scrolling forwards and backwards
            through the result set.  For efficiency, listing instances cache some data locally
            and request data from Laserfiche in batches.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.Session">
            <summary>
            Gets the Laserfiche session associated with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.CacheLimit">
            <summary>
            Gets or sets the maximum number of objects to cache.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.RowCount">
            <summary>
            Gets the number of rows/objects in the listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.MarkedRows">
            <summary>
            Gets a collection of row numbers indicating which rows have been marked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.MarkedIds">
            <summary>
            Gets a collection of object IDs indicating which objects have been marked.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ListingBase`1.MarkedRowCount">
            <summary>
            Gets a count of the number of rows which have been marked in this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.ResetMarkedRowIterator">
            <summary>
            Resets the marked row iterator to the start of the marked row collection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.GetNextMarkedRow(System.Int32@,System.Int32@)">
            <summary>
            Gets the next marked row in the marked row sequence.
            </summary>
            <param name="rowIndex">On output, contains the 1-based row index of the next marked
            row.</param>
            <param name="itemId">On output, contains the object ID of the next marked
            object.</param>
            <returns>True if the marked row enumerator was advanced, false if the
            end of the collection was hit.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.MarkRow(System.Int32)">
            <summary>
            Adds the specified row to the instance's marked row set.
            </summary>
            <param name="rowIndex">The 1-based index of the row to mark.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.UnmarkRow(System.Int32)">
            <summary>
            Removes the specified row from the instance's marked row set.
            </summary>
            <param name="rowIndex">The 1-based index of the row to mark.</param>
            <returns>True if the specified row was found previously marked and unmarked,
            false if the row was not already marked.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.MarkAllRows">
            <summary>
            Adds all of the rows in the listing to the marked row set.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.UnmarkAllRows">
            <summary>
            Removes all of the rows in the listing from the marked row set.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.IsRowMarked(System.Int32)">
            <summary>
            Determines if the specified row is marked.
            </summary>
            <param name="rowIndex">The 1-based index of the row to check.</param>
            <returns>True if the specified row is marked, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.GetMarkedIdByRow(System.Int32,System.Int32@)">
            <summary>
            Returns the ID of the object in the specified marked row.
            </summary>
            <param name="rowIndex">The 1-based index of the marked row to return the object ID of.</param>
            <param name="markedId">The object ID of the marked row.</param>
            <returns>True if the specified row was found in the mark list, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.EraseFromCache(System.Int32,System.Int32)">
            <summary>
            Erases a range of rows from the row cache.
            </summary>
            <param name="rowNumber">The starting row of the range to erase.</param>
            <param name="count">The number of rows to remove from the cache.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.ClearCache">
            <summary>
            Clears all the rows from the instance's internal row cache.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.Dispose">
            <summary>
            Closes the listing and frees all resources owned by this listing instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.GenerateRowUri(System.Int32)">
            <summary>
            This method is internal to the library and should not be called.
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.GenerateRowsUri(System.Int32,System.Int32)">
            <summary>
            This method is internal to the library and should not be called.
            </summary>
            <param name="rowIndex"></param>
            <param name="windowSize"></param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ListingBase`1.GetRowData(System.Int32)">
            <summary>
            This method is internal to the library and should not be called.
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PersistentLock">
            <summary>
            Represents a persistent lock on a document in a Laserfiche repository.
            </summary>
            <remarks>
            Persistent locks are similar to entry locks, but unlike them, they can continue to
            exist in the repository after the session has been terminated, and are durable across
            system restarts.  They are even maintained when detaching the repository from a
            Laserfiche instance and attaching it to another.  In other ways, persistent locks
            behave just like standard entry locks and block sessions that do not own the lock from
            writing to the entry.
            
            Persistent locks are limited to documents and are used to implement the check in/out
            feature in the Laserfiche client.  Although some versions of the Laserfiche client
            limits check in/out to documents with an electronic document portion, the Laserfiche
            repository does not enforce this limitation.
            
            Call the <c>DocumentInfo.LockPersistently</c> method to create a persistent lock.  Call
            the <c>DocumentInfo.Unlock</c> method to remove the persistent lock.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.Owner">
            <summary>
            Gets an <c>IdentityReference</c> instance which references the user
            that owns the represented persistent lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.EntryId">
            <summary>
            Gets the ID of the entry that is covered by the represented persistent lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.EntryMimeType">
            <summary>
            Gets the MIME type of the electronic document associated with the document
            that the represented persistent lock covers, if applicable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.EntryExtension">
            <summary>
            Gets the electronic document file extension associated with the document
            that the represented persistent lock covers, if applicable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.CreationTimestampUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents when the persistent lock was
            created in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.CreationTimestamp">
            <summary>
            Gets a <c>DateTime</c> value which represents when the persistent lock was
            created in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.Comment">
            <summary>
            Gets or sets a user-defined text comment for the represented persistent lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.Extent">
            <summary>
            Gets or sets a <c>LockExtent</c> value which represents the plock covered extent.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.IsActive">
            <summary>
            Gets a boolean indicating if this instance represents an active persistent
            lock in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PersistentLock.GetDocumentInfo">
            <summary>
            Returns a <c>DocumentInfo</c> instance which represents the document that the
            represented persistent lock covers.
            </summary>
            <returns>A <c>DocumentInfo</c> instance which represents the document that the
            represented persistent lock covers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PersistentLock.GetEntryListing(Laserfiche.RepositoryAccess.EntryListingSettings)">
            <summary>
            Returns a <c>SingleEntryListing</c> instance which will return information
            about the document that the represented persistent lock covers.
            </summary>
            <param name="listingSettings">An <c>EntryListingSettings</c> instance which
            represents the settings for the returned <c>SingleEntryListing</c> instance.</param>
            <returns>A <c>SingleEntryListing</c> instance which will return information
            about the document that the represented persistent lock covers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PersistentLock.Delete">
            <summary>
            Marks the represented persistent lock for removal when pending changes are
            next saved to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PersistentLock.LockToken">
            <summary>
            Gets the unique lock token of the represented lock.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBin">
            <summary>
            A collection of static methods for managing the recycle bin in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.PurgeAllEntries(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Purges all the entries in the recycle bin in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.PurgeAllEntries(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Purges all the entries in the recycle bin that were moved there (i.e., deleted)
            by the specified user.
            </summary>
            <param name="reference">An <c>IdentityReference</c> instance which represents
            a reference to the user whose entries will be purged from the recycle bin.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.PurgeAllEntries(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Purges all the entries in the recycle bin that were moved there (i.e., deleted)
            by the specified user.
            </summary>
            <param name="account">An <c>AccountReference</c> instance which represents
            a reference to the user whose entries will be purged from the recycle bin.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.PurgeEntry(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Purges a single entry from the recycle bin.  If purging a folder, all of its
            contents are also purged.
            </summary>
            <param name="entryId">The entry ID of the entry to purge.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if the entry was successfully found and purged from the
            recycle bin, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.PurgeEntry(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Purges a single entry from the recycle bin.  If purging a folder, all of its
            contents are also purged.
            </summary>
            <param name="entryUuid">The UUID (a.k.a. a GUID) of the entry to purge.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if the entry was successfully found and purged from the
            recycle bin, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.RestoreEntry(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes an entry from the recycle bin and restores it to the folder tree.
            When a folder is restored, its contents are also restored.
            </summary>
            <param name="entryId">The ID of the recycled entry to restore.</param>
            <param name="newPath">The new path to the restored entry in the folder tree.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.RestoreEntry(System.Guid,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes an entry from the recycle bin and restores it to the folder tree.
            When a folder is restored, its contents are also restored.
            </summary>
            <param name="entryUuid">The UUID (a.k.a. a GUID) of the entry to restore.</param>
            <param name="newPath">The new path to the restored entry in the folder tree.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.GetListing(Laserfiche.RepositoryAccess.RecycleBinColumn,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin.
            </summary>
            <param name="sortColumn">A member of the <c>RecycleBinColumn</c> enumeration
            specifying which column of the recycle bin listing to use as the sort key.</param>
            <param name="sortDirection">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort key column in ascending or descending
            order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.GetListing(Laserfiche.RepositoryAccess.RecycleBinColumn,Laserfiche.RepositoryAccess.SortDirection,System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that were moved there (i.e., deleted) by a specifed
            user.
            </summary>
            <param name="sortColumn">A member of the <c>RecycleBinColumn</c> enumeration
            specifying which column of the recycle bin listing to use as the sort key.</param>
            <param name="sortDirection">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort key column in ascending or descending
            order.</param>
            <param name="sidFilter">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the user account to filter by.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that were moved there (i.e., deleted) by a specifed
            user.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.GetListing(System.Int32,Laserfiche.RepositoryAccess.RecycleBinColumn,Laserfiche.RepositoryAccess.SortDirection,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that share the same parent entry.
            </summary>
            <param name="parentId">The entry ID of the parent entry.</param>
            <param name="sortColumn">A member of the <c>RecycleBinColumn</c> enumeration
            specifying which column of the recycle bin listing to use as the sort key.</param>
            <param name="sortDirection">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort key column in ascending or descending
            order.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that share the same parent entry.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.GetListing(System.Int32,Laserfiche.RepositoryAccess.RecycleBinColumn,Laserfiche.RepositoryAccess.SortDirection,System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that share the same parent entry that were
            moved there (i.e., deleted) by the specified user.
            </summary>
            <param name="parentId">The entry ID of the parent entry.</param>
            <param name="sortColumn">A member of the <c>RecycleBinColumn</c> enumeration
            specifying which column of the recycle bin listing to use as the sort key.</param>
            <param name="sortDirection">A member of the <c>SortDirection</c> enumeration
            specifying whether to sort the sort key column in ascending or descending
            order.</param>
            <param name="sidFilter">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the user account to filter by.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListing</c> instance which represents a listing of all
            the entries in the recycle bin that share the same parent entry that were
            moved there (i.e., deleted) by the specified user.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBin.GetTrustees(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RecycleBinTrusteeCollection</c> instance which represents a
            collection of security identifiers of all the trustees that have moved
            items to the recycle bin.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinTrusteeCollection</c> instance which represents a
            collection of security identifiers of all the trustees that have moved
            items to the recycle bin.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBinListing">
            <summary>
            Represents a listing of entries in the recycle bin of a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListing.GetRecycleBinRow(System.Int32)">
            <summary>
            Returns a <c>RecycleBinListingRow</c> instance which represents the data of a
            single row in the represented recycle bin listing.
            </summary>
            <param name="rowIndex">The 1-based index of the row whose data will be
            returned.</param>
            <returns>A <c>RecycleBinListingRow</c> instance which represents the data of a
            single row in the represented recycle bin listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListing.GetRowsData(System.Int32,System.Int32)">
            <summary>
            Returns an array of <c>RecycleBinListingRow</c> instances which represents a
            contiguous set of rows in the returned recycle bin listing.
            </summary>
            <param name="rowIndex">The 1-based index of the starting row to return the data
            of.</param>
            <param name="windowSize">The maximum and desired number of rows to return the
            data of.</param>
            <returns>An array of <c>RecycleBinListingRow</c> instances which represents a
            contiguous set of rows in the returned recycle bin listing.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBinColumn">
            <summary>
            An enumeration of the available columns in a recycle bin listing in a
            Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageRestoreOption">
            <summary>
            An enumeration of options that control how pages will be restored from the
            recycle bin.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBinObjectType">
            <summary>
            An enumeration that specifies what type of data a row in a recycle bin listing
            represents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RecycleBinObjectType.DeletedEntry">
            <summary>
            The object is a recycled entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RecycleBinObjectType.DeletedPage">
            <summary>
            The object is a recycled page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RecycleBinObjectType.DeletedEdoc">
            <summary>
            The object is a recycled electronic document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBinListingRow">
            <summary>
            Represents the data in a single row in a Laserfiche recycle bin listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.ConstructRow(System.Int32,System.Int64,Laserfiche.RepositoryAccess.RecycleBinObjectType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Constructs and returns a new <c>RecycleBinListingRow</c> instance using
            the specified identifying data.  The instance is not associated with
            any listing.
            </summary>
            <param name="entryId">The entry ID of the object in the bin.</param>
            <param name="storeId">The file ID of the object in the bin.</param>
            <param name="objType">A member of the <c>RecycleBinObjectType</c>
            enumeration specifying the type of object.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListingRow</c> instance with the specified values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.ConstructRow(System.Guid,System.Int64,Laserfiche.RepositoryAccess.RecycleBinObjectType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Constructs and returns a new <c>RecycleBinListingRow</c> instance using
            the specified identifying data.  The instance is not associated with
            any listing.
            </summary>
            <param name="entryUuid">The entry UUID of the object in the bin.</param>
            <param name="storeId">The file ID of the object in the bin.</param>
            <param name="objType">A member of the <c>RecycleBinObjectType</c>
            enumeration specifying the type of object.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListingRow</c> instance with the specified values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.ConstructRow(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Constructs and returns a new <c>RecycleBinListingRow</c> instance using
            the specified identifying data.  The instance is not associated with
            any listing.
            </summary>
            <param name="entryUuid">The entry UUID of the object in the bin.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RecycleBinListingRow</c> instance with the specified values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.ConstructRow(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Constructs and returns a new <c>RecycleBinListingRow</c> instance using
            the specified identifying data.  The instance is not associated with
            any listing.
            </summary>
            <param name="entryId">The entry ID of the object in the bin.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns></returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.Extension">
            <summary>
            Gets the electronic document extension of the recycled document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.DeleterName">
            <summary>
            Gets the name of the trustee that recycled the object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.DeleterSid">
            <summary>
            Gets the security identifier (SID) of the trustee that recycled the object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.DeletedTimeUtc">
            <summary>
            Gets the date and time, in universal time (UTC), when the object was recycled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.DeletedTime">
            <summary>
            Gets the date and time, in local time, when the object was recycled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.DeletedTimeAsString">
            <summary>
            Gets the date and time, in local time, when the object was recycled
            formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.CreatedTimeUtc">
            <summary>
            Gets the date and time, in universal time (UTC), when the object was created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.CreatedTime">
            <summary>
            Gets the date and time, in local time, when the object was created.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.CreatedTimeAsString">
            <summary>
            Gets the date and time, in local time, when the object was created
            formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EntryType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration which identifies what
            kind of entry was recycled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EntryTypeAsString">
            <summary>
            Gets a string representation of the <c>EntryType</c> property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EntryUuid">
            <summary>
            Gets the UUID of the recycled entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.FileSize">
            <summary>
            Gets the size of the recycled electronic document in bytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.FileSizeAsString">
            <summary>
            Gets the <c>FileSize</c> property formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EntryId">
            <summary>
            Gets the ID of the entry that was recycled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EntryIdAsString">
            <summary>
            Gets the <c>EntryId</c> property formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.ParentPath">
            <summary>
            Gets the former path in the repository to the recycled entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.Name">
            <summary>
            Gets the name of the recycled entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.PageNumber">
            <summary>
            Gets the page number of the recycled page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.PageNumberAsString">
            <summary>
            Gets the <c>PageNumber</c> property formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.PageCount">
            <summary>
            Gets the number of pages in the recycled document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.PageCountAsString">
            <summary>
            Gets the <c>PageCount</c> property formatted as a string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.FileId">
            <summary>
            Gets the ID of the file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.ObjectType">
            <summary>
            Gets a member of the <c>RecycleBinRowType</c> enumeration which specifies
            the type of object this row represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecycleBinListingRow.EdocMimeType">
            <summary>
            Gets the MIME type of the recycled electronic document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.Purge">
            <summary>
            Requests that the recycled object be purged so that it cannot be restored.
            </summary>
            <returns>True if the purge operation succeeded, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.Restore">
            <summary>
            Restores the recycled object to the default location.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.Restore(System.String)">
            <summary>
            Restores the recycled object to the entry specified by the provided
            entry path in the current repository.
            </summary>
            <param name="path">The path to the entry in the current repository to
            restore the recycled object to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestorePage(System.String,Laserfiche.RepositoryAccess.PageRestoreOption)">
            <summary>
            Restores the recycled page to the document specified by the provided
            entry path in the current repository.
            </summary>
            <param name="path">The path to the document in the current repository to
            restore the recycled object to.</param>
            <param name="option">A member of the <c>PageRestoreOption</c> specifying
            how the page should be restored.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestorePage(System.String,Laserfiche.RepositoryAccess.PageRestoreOption,System.Int64)">
            <summary>
            Restores the recycled page to the document specified by the provided
            entry path in the current repository, at the specified location in
            the document.
            </summary>
            <param name="path">The path to the document in the current repository to
            restore the recycled object to.</param>
            <param name="option">A member of the <c>PageRestoreOption</c> specifying
            how the page should be restored.</param>
            <param name="location">The page number in the destination document
            specifying where the recycled page should be restored to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestoreAsync">
            <summary>
            Asynchronously restores the recycled object to the default location.
            </summary>
            <returns>A <c>LongOperation</c> instance representing the restore operation
            running in the background.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestoreAsync(System.String)">
            <summary>
            Asynchronously restores the recycled object to the entry specified by the
            provided entry path in the current repository.
            </summary>
            <param name="path">The path to the entry in the current repository to
            restore the recycled object to.</param>
            <returns>A <c>LongOperation</c> instance representing the restore operation
            running in the background.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestorePageAsync(System.String,Laserfiche.RepositoryAccess.PageRestoreOption)">
            <summary>
            Asynchronously restores the recycled page to the document specified by the
            provided entry path in the current repository.
            </summary>
            <param name="path">The path to the document in the current repository to
            restore the recycled object to.</param>
            <param name="option">A member of the <c>PageRestoreOption</c> specifying
            how the page should be restored.</param>
            <returns>A <c>LongOperation</c> instance representing the restore operation
            running in the background.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinListingRow.RestorePageAsync(System.String,Laserfiche.RepositoryAccess.PageRestoreOption,System.Int64)">
            <summary>
            Asynchronously restores the recycled page to the document specified by the
            provided entry path in the current repository, at the specified location in
            the document.
            </summary>
            <param name="path">The path to the document in the current repository to
            restore the recycled object to.</param>
            <param name="option">A member of the <c>PageRestoreOption</c> specifying
            how the page should be restored.</param>
            <param name="location">The page number in the destination document
            specifying where the recycled page should be restored to.</param>
            <returns>A <c>LongOperation</c> instance representing the restore operation
            running in the background.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecycleBinTrusteeCollection">
            <summary>
            Represents a read-only collection of security identifiers (SIDs) for trustees
            who have placed entries in a Laserfiche recycle bin.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecycleBinTrusteeCollection.GetRecycleBin(System.Int32)">
            <summary>
            Returns a <c>RecycleBinListing</c> representing the entries in a recycle bin
            for the user identified by the SID at the specified index.
            </summary>
            <param name="index">The index of the SID in the collection referencing the
            user to filter the listing results on.</param>
            <returns>A <c>RecycleBinListing</c> representing the entries in a recycle bin
            for the user identified by the SID at the specified index.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RepositoryOptions">
            <summary>
            Represents the set of configured options for a Laserfiche repository.  These options
            are used to control the behavior of the recycle bin, watermark formatting, and the
            user account password policy, among other things.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RepositoryOptions.OptionValue">
            <summary>
            Stores a repository/database option value and a boolean indicating
            whether or not the stored value has changed since being saved to or
            read from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.GetOption(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets the value of a named repository option.
            </summary>
            <param name="name">The name of the repository option to get.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The current value of the option.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.SetOption(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the value of a named repository option.
            </summary>
            <param name="name">The name of the repository option to set the value of.</param>
            <param name="newValue">The value to set the repository option to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.Session">
            <summary>
            Gets the <c>Session</c> instance representing the Laserfiche session associated
            with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.IsConnected">
            <summary>
            Gets a boolean indicating if this instance is connected to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.Item(System.String)">
            <summary>
            Gets the string representation of the named option&apos;s value.  The option
            name must correspond to a stored value in this instance.
            </summary>
            <param name="key">The name of the option to return the value of.</param>
            <returns>The string representation of the named option&apos;s value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the string representation of the named option&apos; value, if it exists
            in the current instance.
            </summary>
            <param name="key">The name of the option to return the value of.</param>
            <param name="value">On output, contains the string representation of the
            specified option&apos;s value.</param>
            <returns>True if the option with the specified name was found and its
            value returned, false otherwise.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.ActivityLogMaxRows">
            <summary>
            Gets or sets the maximum number of rows that will be used by the activity log.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.RequireUniqueSeriesCode">
            <summary>
            Gets a sets a boolean which controls whether or not records series must have
            uniqiue codes in a folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.UseLowResolutionThumbnail">
            <summary>
            Gets or sets a boolean which controls whether or not low-resolution thumbnails will be used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.CurrentAuditEventId">
            <summary>
            Gets or sets the current audit event ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.ActivityLogTrimAmount">
            <summary>
            Gets or sets the amount to trim the activity log by when it reaches its maximum
            size.  Can either be a count of rows or a percentage, indicated by a percent sign.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AccountLockoutThreshold">
            <summary>
            Gets or sets the value of the automatic user lockout threshold in terms of
            the number of invalid log on requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.MaximumPasswordAgeDays">
            <summary>
            Gets or sets the maximum age of a user&apos;s password in days.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.PasswordExpirationWarningDays">
            <summary>
            Gets or sets the number of days before a user&apos;s password expires that
            an expiration warning is given.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.MinimumPasswordLength">
            <summary>
            Gets or sets the minimum length of a password in characters.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.PasswordMinimumCharacterSets">
            <summary>
            Gets or sets the minimum number of character classes or sets a password
            must contain.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.CheckForNameInPassword">
            <summary>
            Gets or sets a boolean indicating whether Laserfiche will check for and prevent
            the user name from appearing in the password (true to check).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.PasswordReuseCheckDays">
            <summary>
            Gets or sets the number of days that Laserfiche will check since a password
            was changed for the old password being reused.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.UnusedAccountLockoutDays">
            <summary>
            Gets or sets the number of days that can pass while an account remains unused,
            that is, there are no log in events for that user, before Laserfiche automatically
            locks the user account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.IdleLogoutMinutes">
            <summary>
            Gets or sets the number of minutes a session can remain idle before Laserfiche
            automatically logs out.  Not all Laserfiche clients obey this setting.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.DisplayLastLogin">
            <summary>
            Gets or sets a boolean indicating whether or not clients will display the
            date and time of the last log in event for the user everytime a user logs in.
            Not all Laserfiche clients obey this setting.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.GlobalAuditMask">
            <summary>
            Gets or sets the audit mask for all users in the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.SaveStickyNoteHistory">
            <summary>
            Gets a boolean indicating whether sticky note history will always be saved
            for all sticky notes in the repository (true to always save).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.UseRecycleBin">
            <summary>
            Gets a boolean indicating whether or not the recycle bin will be active (true
            to activate the recycle bin).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.RecycleBinRetentionDays">
            <summary>
            Gets or sets the number of days to retain data in the recycle bin before
            automatically purging it.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.LogRetentionDays">
            <summary>
            Gets or sets the number of days to retain diagnostic log files before automatically
            purging them.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.NumberOfWipePasses">
            <summary>
            Gets or sets the number of passes Laserfiche will make through data files when
            wiping them before deletion.  If set to 0, then files will not be wiped before
            deletion.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkPosition">
            <summary>
            Gets or sets the position of watermarks on a page.  Equivalent to
            <c>WatermarkXPosition</c> and <c>WatermarkYPosition</c> combined.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkXPosition">
            <summary>
            Gets or sets the horizontal position relative to the left edge of images
            in pixels where group watermarks will be drawn.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkYPosition">
            <summary>
            Gets or sets the vertical position relative to the top edge of images
            in pixels where group watermarks will be drawn.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkHeader">
            <summary>
            Gets or sets the string to be used as the watermark header for group
            watermarks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkFooter">
            <summary>
            Gets or sets the string to be used as the watermark footer for group
            watermarks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkHeaderPointSize">
            <summary>
            Gets or sets the size of the watermark header for group watermarks in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkFooterPointSize">
            <summary>
            Gets or sets the size of the watermark footer for group watermarks in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkPointSize">
            <summary>
            Gets or sets the size of the watermark text for group watermarks in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.WatermarkRotationAngle">
            <summary>
            Gets or sets the rotation angle for group watermarks in degrees.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.CounterTokenValue">
            <summary>
            Gets or sets the current value of the %(count) token.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.ConflictNumberWidth">
            <summary>
            Gets or sets the width of the automatic numbering suffix applied to object
            names to resolve name conflicts.  Numbers will be padding with leading zeros
            to meet the configured width.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.ReturnFolderChildCount">
            <summary>
            Gets or sets a boolean indicating if Laserfiche will calculate the number of
            browseable folders that are children of each of the folders in a folder listing.
            Necessary for the plus sign in the folder tree in the Laserfiche client to
            accurately reflect the folder hierarchy but significantly slows down browsing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.DefaultEntryOwnerSid">
            <summary>
            Gets or sets the security identifier (SID) that will be listed as the default
            owner for new entries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AutomaticallyIndex">
            <summary>
            Gets or sets a boolean indicating whether or not new and changed documents
            are automatically indexed by the Laserfiche full-text search engine.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditingEnabled">
            <summary>
            Gets or sets a boolean indicating whether or not auditing is enabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditLogPath">
            <summary>
            Gets or sets the Windows file system path to the audit log for the
            current Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditLogArchivalDirectory">
            <summary>
            Gets or sets the Windows file system path of the audit log archive
            directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.MaximumAuditLogSizeMB">
            <summary>
            Gets or sets the maximum size of an audit log in megabytes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.MaximumAuditLogAgeDays">
            <summary>
            Gets or sets the maximum age of an active audit log file in days before
            Laserfiche archives the log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.CompressAuditLogs">
            <summary>
            Gets or sets a boolean indicating whether or not Laserfiche should compress
            audit logs when archiving them.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AdminLockout">
            <summary>
            Gets or sets whether an administrative lockout of the repository is in effect.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.TransferOrAccessionToNARA">
            <summary>
            Gets or sets the "transfer or accession to NARA" flag for compliance with
            DoD Std 5015.2v3 accession to NARA rules.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditCompressionLevel">
            <summary>
            Gets or sets the compression level of archived audit log files from
            0 (no compression) to 9 (most compression).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.VolumeCompressionLevel">
            <summary>
            Gets or sets the compression level for compressed volumes from
            1 (least compression) to 9 (most compression).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.Language">
            <summary>
            Gets or sets an RFC 5646 compliant IETF language tag which denotes
            the default repository and search catalog language.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.BackgroundThumbnailGenerator">
            <summary>
            Gets or sets a boolean which controls whether or not the server's background
            thumbnail generator will run.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.SearchCollationRule">
            <summary>
            Gets or sets the collation rule used for string comparison when processing
            searches.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.LFQLCollationRule">
            <summary>
            Gets or sets the collation rule used for string comparison when processing
            LFQL queries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.DefaultCollationRule">
            <summary>
            Gets the default collation rule used by Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.LoggedEntryWriteActivities">
            <summary>
            Gets the set of content modification activities that will be logged
            to the activity log, in addition to the standard activities like RELEASE.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.AddLoggedEntryWriteActivity(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Directs Laserfiche to log the specified entry write activity in the activity log.
            This change is not saved to Laserfiche without calling <c>Save</c>.
            </summary>
            <param name="type">A member of the <c>ActivityType</c> enumeration specifying
            the type of activity to log.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.RemoveLoggedEntryWriteActivity(Laserfiche.RepositoryAccess.Activity.ActivityType)">
            <summary>
            Directs Laserfiche to no longer log the specified entry write activity in
            the activity log.  This change is not saved to Laserfiche without calling <c>Save</c>.
            </summary>
            <param name="type">A member of the <c>ActivityType</c> enumeration specifying
            the type of activity to stop logging.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.ResetLoggedEntryWriteActivities">
            <summary>
            Directs the server to no longer log any entry write activities to the activity log.
            This change is not saved to Laserfiche without calling <c>Save</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditorErrorMode">
            <summary>
            Gets or sets the auditor error mode.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.TimestampAuditRecords">
            <summary>
            Gets or sets a boolean which controls whether audit log records are
            digitally timestamped.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AuditDataRetentionPeriod">
            <summary>
            Gets or sets the audit data retention period. -1 indicates preserve all data permanently,
            a positive integer between 1 and 36160 indicates the number of days to retain audit data
            after event generation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.VERSCompliance">
            <summary>
            Gets or sets a boolean indicating if PROV VERS compliance mode is enabled
            for the repository.  Disabling this requires a server restart.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.VersionTrackingDisabled">
            <summary>
            Gets or sets a boolean indicating if version control functionality
            should be disabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AlwaysRedactForWebLink">
            <summary>
            Gets or sets a boolean indicating if redactions should always be applied
            for WebLink sessions, regardless of security.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.RetentionOutsideRecordSeriesDisabled">
            <summary>
            Gets or sets a boolean defining if assigning cutoff criterion or 
            retention rules outside record series is disabled. 
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AllowModifyPageMetadataWhenClosed">
            <summary>
            Gets or sets a boolean indicate if adding/removing/modifying text or image pane annotation,
            adding/removing entry tags, adding/removing entry links or link group memebership, 
            sigining a document, adding/modifying/removing entry location or description, 
            rotating a document page is allowed on a closed/cutoff/hold document. 
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryOptions.AllowModifyPropMetadataWhenClosed">
            <summary>
            Gets or sets a boolean indicate if Modifying field data, 
            including adding new fields, modifying the content of existing fields, 
            and adding, removing, or changing a template
            is allowed on a closed/cutoff/hold document. 
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>RepositoryOptions</c> instance by reading the currently
            configured options for the current repository from Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.Refresh(System.Boolean)">
            <summary>
            Refreshes the values of repository options from Laserfiche, optionally
            preserving local changes.
            </summary>
            <param name="keepChanges">A boolean indicating whether or not to keep
            local changes (true), or to discard them and always use the currently
            configured settings (false).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryOptions.Save">
            <summary>
            Saves all the changed options to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchHitHighlightReader">
            <summary>
            Provides the ability to read search hit highlight information returned
            in the results of a search operation from Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RecordSeriesInfo">
            <summary>
            Represents a Laserfiche record series.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecordSeriesInfo.Code">
            <summary>
            Gets or sets the record series code.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RecordSeriesInfo.ShortName">
            <summary>
            Gets the short name of the record series, without the code prefix.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecordSeriesInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>RecordSeriesInfo</c> instance representing a new record
            series.
            </summary>
            <param name="session">A <c>Session</c> instance representing the Laserfiche
            session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RecordSeriesInfo.GetSeriesProperties">
            <summary>
            Return a <c>RecordSeriesProperties</c> instance which describes most of
            the records management properties of the represented record series.
            </summary>
            <returns>A <c>RecordSeriesProperties</c> instance which describes most of
            the records management properties of the represented record series.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SessionLocale">
            <summary>
            Represents the locale settings that are associated with a Laserfiche session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.Session">
            <summary>
            Gets the <c>Session</c> instance which this <c>SessionLocale</c> instance
            is associated with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.Locale">
            <summary>
            Gets the <c>CultureInfo</c> instance that matches the configured locale
            for the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.TimeZone">
            <summary>
            Gets the <c>TimeZoneInfo</c> instance that represents the configured time
            zone for the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.LocaleName">
            <summary>
            Gets or sets the name of the locale.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.TimeZoneId">
            <summary>
            Gets or sets the time zone ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.CalendarType">
            <summary>
            Gets or sets the calendar type.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.Currency">
            <summary>
            Gets or sets the currency code which controls the rules used for
            formatting currency values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.ShortDatePattern">
            <summary>
            Gets or sets the format pattern for the short date format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.LongDatePattern">
            <summary>
            Gets or sets the format pattern for the long date format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.ShortDateTimePattern">
            <summary>
            Gets or sets the format pattern for the short date/time format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.LongDateTimePattern">
            <summary>
            Gets or sets the format pattern for the long date/time format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.ShortTimePattern">
            <summary>
            Gets or sets the format pattern for the short time format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.LongTimePattern">
            <summary>
            Gets or sets the format pattern for the long time format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.TokenSpelling">
            <summary>
            Gets or sets the name of the token spelling language.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionLocale.DisplayName">
            <summary>
            Gets the friendly display name of the locale.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.GetFormat(Laserfiche.RepositoryAccess.LocaleFormat)">
            <summary>
            Returns the format pattern for the specified <c>LocaleFormat</c> value.
            </summary>
            <param name="formatType">A member of the <c>LocaleFormat</c> enumeration
            specifying which format type to return the corresponding format pattern of.</param>
            <returns>The format pattern for the specified <c>LocaleFormat</c> value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.SetLocale(System.String)">
            <summary>
            Changes the locale used.
            </summary>
            <param name="name">The name of the locale to switch to.</param>
            <remarks>Pending changes to this instance are saved to Laserfiche before the
            method returns, on success.  Customizations and changes to formats may
            be reset.</remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.SetCalendarType(System.String)">
            <summary>
            Changes the active calendar type.
            </summary>
            <param name="name">The name of the calendar type to switch to.</param>
            <remarks>Pending changes to this instance are saved to Laserfiche before the
            method returns, on success.  Customizations and changes to formats may
            be reset.</remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.Refresh">
            <summary>
            Refreshes the locale settings from Laserfiche and updates the instance
            data members.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.Save">
            <summary>
            Saves the session's locale settings configured in this instance to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.Format(System.Object,Laserfiche.RepositoryAccess.LocaleFormat)">
            <summary>
            Formats a value using one of the pre-defined string format patterns.
            </summary>
            <param name="value">The value to format as a string.</param>
            <param name="localeFormat">A member of the <c>LocaleFormat</c> enumeration
            which specifies which pre-defined format pattern to apply.</param>
            <returns>The string representation of the provided value using the
            specified pre-defined format.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.FormatCustom(System.Object,System.String)">
            <summary>
            Formats a value using a custom format pattern.  Dates and times will use
            the date/time pattern syntax and numeric values will use the number
            format pattern syntax.
            </summary>
            <param name="value">The value to format as a string.</param>
            <param name="pattern">The custom pattern to format the value as.</param>
            <returns>The string representation of the provided value using the
            specified custom format pattern.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.FormatCurrency(System.Object,System.String)">
            <summary>
            Formats a number using the currency pattern with the specified currency.
            </summary>
            <param name="value">The value to format.</param>
            <param name="currencyCode">An ISO 4217 currency code denoting the currency.</param>
            <returns>A string containing the value formatted using the currency pattern
            with the specified currency.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.ToLocalTime(System.DateTime)">
            <summary>
            Converts a <c>DateTime</c> value in UTC to local time.
            </summary>
            <param name="dateTime">A <c>DateTime</c> value in UTC to convert to the
            local time zone.</param>
            <returns>The provided <c>DateTime</c> value in the local time zone.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.ToLocalTime(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Converts a <c>TimeOfDay</c> value, assumed to be in UTC, to the local time zone.
            </summary>
            <param name="time">A <c>TimeOfDay</c> value in UTC to convert to the
            local time zone.</param>
            <returns>The provided <c>TimeOfDay</c> value in the local time zone.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a <c>DateTime</c> value in local time to UTC.
            </summary>
            <param name="dateTime">A <c>DateTime</c> value in local time to convert
            to UTC.</param>
            <returns>The provided <c>DateTime</c> value in UTC.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.ToUniversalTime(Laserfiche.RepositoryAccess.Common.TimeOfDay)">
            <summary>
            Converts a <c>TimeOfDay</c> value, assumed to be in local time, to UTC.
            </summary>
            <param name="time">A <c>TimeOfDay</c> value in local time to convert
            to UTC.</param>
            <returns>The provided <c>TimeOfDay</c> value in UTC.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SessionLocale.Parse(System.String,Laserfiche.RepositoryAccess.LocaleFormat)">
            <summary>
            Parses a string representation of date, time, or number and converts it
            into its native representation in memory assuming the specified format pattern.
            </summary>
            <param name="strVal">The string representation of the value to parse and
            convert to its native representation.</param>
            <param name="format">A member of the <c>LocaleFormat</c> enumeration which
            specifies which pre-defined format pattern to assume.</param>
            <returns>The value of the specified string in its native representation
            in memory.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SingleEntryListing">
            <summary>
            Represents an entry listing for a single entry in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SingleEntryListing.Path">
            <summary>
            Gets the path in the repository to the entry in the listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SingleEntryListing.#ctor(System.Int32,Laserfiche.RepositoryAccess.EntryListingSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>SingleEntryListing</c> for the specified entry.
            </summary>
            <param name="entryId">The ID of the entry to include in the represented entry
            listing.</param>
            <param name="setting">An <c>EntryListingSettings</c> instance which specifies
            the settings to use for the single entry listing.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SingleEntryListing.#ctor(System.String,Laserfiche.RepositoryAccess.EntryListingSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>SingleEntryListing</c> for the specified entry.
            </summary>
            <param name="path">The path in the repository to the entry to include
            in the listing.</param>
            <param name="setting">An <c>EntryListingSettings</c> instance which specifies
            the settings to use for the single entry listing.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SingleEntryListing.#ctor(System.Collections.Generic.IEnumerable{System.Int32},Laserfiche.RepositoryAccess.EntryListingSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>SingleEntryListing</c> for the a list of entries.
            </summary>
            <param name="multiTarget">The list of target entries.</param>
            <param name="setting">An <c>EntryListingSettings</c> instance which specifies
            the settings to use for the single entry listing.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingType">
            <summary>
            An enumeration of the available types of listings that are implemented by types
            that derive from <c>EntryListingBase</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryListingType.Folder">
            <summary>
            A listing of folder contents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryListingType.SearchResults">
            <summary>
            A listing of search results.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryListingType.SingleEntry">
            <summary>
            A listing that describes a single entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryListingType.UserArea">
            <summary>
            A listing of the contents of a user area.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryTypeFilter">
            <summary>
            An enumeration that specifies which types of entries to filter out of an entry listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.AllTypes">
            <summary>
            Don't filter any entries by type.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.Folders">
            <summary>
            Show only folders and record series in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.Documents">
            <summary>
            Show only documents in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.Shortcuts">
            <summary>
            Show only shortcuts (to either folders or documents) in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.NotFolders">
            <summary>
            Show everything but folders and record series in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.NotDocuments">
            <summary>
            Show everything but documents in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.FolderShortcuts">
            <summary>
            Show only shortcuts to folders and shortcuts to record series in the listing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.EntryTypeFilter.DocumentShortcuts">
            <summary>
            Show only shortcuts to documents in the listing.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryCounts">
            <summary>
            Information about the number of entries, broken down by entry type, in an entry listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryCounts.FolderCount">
            <summary>
            Gets or sets the number of folders.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryCounts.DocumentCount">
            <summary>
            Gets or sets the number of documents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryCounts.FolderShortcutCount">
            <summary>
            Gets or sets the number of shortcuts to folders.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryCounts.DocumentShortcutCount">
            <summary>
            Gets or sets the number of shortcuts to documents.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingBase">
            <summary>
            Base class for entry listing classes.  Entry listings are scrollable, virtual tables
            of entry data with information about a single entry per row, with a flexible
            column schema.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.Session">
            <summary>
            Gets the <c>Session</c> instance associated with this entry listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.Settings">
            <summary>
            Gets or sets the settings used for this entry listing instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.Close">
            <summary>
            Closes the entry listing and releases the underlying resources used
            by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MaxRowsRequested">
            <summary>
            Gets or sets the maximum number of rows to request from the server
            at a time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MinRowsRequested">
            <summary>
            Gets or sets the minimum number of rows to request from the server
            at a time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.ColumnCount">
            <summary>
            Gets the count of the number of columns in this listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.Columns">
            <summary>
            Gets an <c>IList</c> instance which represents the set of columns
            in this listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.EndOfListing">
            <summary>
            Gets if the end of the listing has been reached with a forward-only listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.CurrentRowNumber">
            <summary>
            Gets the 1-based row number of the current row cursor in a forward-only listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.RowsCount">
            <summary>
            Gets the total number of rows in this listing.
            </summary>
            <remarks>
            This is a synonym of the <c>RowCount</c> property and is identical in meaning.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.RowCount">
            <summary>
            Gets the total number of rows in this listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MarkedRowCount">
            <summary>
            Gets a count of the number of rows which have been marked in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.EntryListingType">
            <summary>
            Gets the type of entry listing that this instance implements.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.CacheLimit">
            <summary>
            Gets or sets the count of the maximum number of rows that can be stored in the row cache.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MarkedRows">
            <summary>
            Gets a list of 1-based row numbers for all marked rows.  The rows
            are returned in order.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MarkedEntryIds">
            <summary>
            Gets a list of entry IDs corresponding to each of the marked rows.  The
            entry IDs are returned in row order.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.EntryCounts">
            <summary>
            Gets the entry counts in the listing, if entry counts were requested.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBase.MultiTargets">
            <summary>
            If the value is set, the entry listing will enter the multi target listing mode. 
            Currently only single entry listing is supported.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.RemoveFromCache(System.Int32,System.Int32)">
            <summary>
            Removes the specified set of rows from the row cache.
            </summary>
            <param name="rowNumber">The row number of the first row to remove from the
            cache.</param>
            <param name="count">The number of rows, starting from the specified row
            to remove from the cache.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.ClearCache">
            <summary>
            Clears the internal row cache.  This will force a request to the server for
            data when trying to read rows.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.IsRowLoaded(System.Int32)">
            <summary>
            Checks if the specified row is loaded in the local row cache.
            </summary>
            <param name="rowNumber">The 1-based row number to check the cache for.</param>
            <returns>True if the specified row is in the cache, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.MarkRow(System.Int32)">
            <summary>
            Marks a specified row for later reference.
            </summary>
            <param name="rowNumber">The 1-based row number to mark.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.UnmarkRow(System.Int32)">
            <summary>
            Removes a row from the marked row set.
            </summary>
            <param name="rowNumber">The 1-based row number to unmark.</param>
            <returns>Returns true if the row was marked and is no longer marked, false if the
            row number did not reference a marked row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.MarkAllRows">
            <summary>
            Marks all the rows in the listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.UnmarkAllRows">
            <summary>
            Removes all rows from the marked row set.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.IsEntryMarked(System.Int32)">
            <summary>
            Determines if a row is marked given the entry ID of the corresponding row to check.
            </summary>
            <param name="entryId">The entry ID of the row to check.</param>
            <returns>Returns true if the row containing data for the specified entry
            is marked, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.IsRowMarked(System.Int32)">
            <summary>
            Determines if a row is marked given a row number to check.
            </summary>
            <param name="rowNumber">The 1-based row number to check.</param>
            <returns>Returns true if the specified row is marked, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetColumn(System.Int32)">
            <summary>
            Returns a <c>ColumnSpecifier</c> instance which describes the specified column.
            </summary>
            <param name="columnNumber">The 1-based column number to return information about.</param>
            <returns>A <c>ColumnSpecifier</c> instance which describes the specified column.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetColumnNumber(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Returns the 1-based column number of the specified system column type.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration that
            specifies the column type to return the index of.</param>
            <returns>The 1-based column number of the specified system column type, or
            -1 if the specified system column is not part of the listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetColumnNumber(System.String)">
            <summary>
            Returns the 1-based column number of the specified template field column.
            </summary>
            <param name="fieldName">The name of the template field whose data is
            contained in the column with the returned index.</param>
            <returns>The 1-based column number of the specified template field column,
            or -1 if the specified field does not have a corresponding column in this
            listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.IsColumnPresent(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Determines if the specified system column is present in the represented listing.
            </summary>
            <param name="columnType">The type of system column to check for the presence
            of.</param>
            <returns>Returns true if the specified system column is present in the
            listing, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetValueCount(System.Int32,System.String)">
            <summary>
            Gets the number of values in the specified field value cell.
            </summary>
            <param name="rowNumber">The row number of the row containing the value.</param>
            <param name="fieldName">The name of the template field column containing the
            value.</param>
            <returns>A count of the number of values in the specified cell.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatum(System.Int32,System.Int32)">
            <summary>
            Returns the data in a single cell in the listing.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the data
            of.</param>
            <param name="columnNumber">The 1-based colum number of the cell to retrieve the
            data of.</param>
            <returns>The data in the specified cell in the listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatum(System.Int32,Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Returns the data in a single cell in a system property column in the listing.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the
            data of.</param>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration which
            specifies the system property whose data is contained in the column of the
            cell whose data is returned.</param>
            <returns>The data in the specified cell in the listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatum(System.Int32,System.String)">
            <summary>
            Returns the data in a single cell in a template field column in the listing.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the
            data of.</param>
            <param name="fieldName">The name of the template field whose data is
            contained in the column of the cell whose data is returned.</param>
            <returns>The data in the specified cell in the listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatumAsString(System.Int32,System.Int32)">
            <summary>
            Returns the data in a single cell in the listing as a string, performing
            locale-sensitive formatting as necessary.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the
            data of.</param>
            <param name="columnNumber">The 1-based colum number of the cell to retrieve the
            data of.</param>
            <returns>The data in the specified cell in the listing as a string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatumAsString(System.Int32,Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Returns the data in a single cell in the listing as a string, performing
            locale-sensitive formatting as necessary.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the
            data of.</param>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration which
            specifies the system property whose data is contained in the column of the
            cell whose data is returned.</param>
            <returns>The data in the specified cell in the listing as a string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetDatumAsString(System.Int32,System.String)">
            <summary>
            Returns the data in a single cell in the listing as a string, performing
            locale-sensitive formatting as necessary.
            </summary>
            <param name="rowNumber">The 1-based row number of the cell to retrieve the
            data of.</param>
            <param name="fieldName">The name of the template field whose data is
            contained in the column of the cell whose data is returned.</param>
            <returns>The data in the specified cell in the listing as a string.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetListing(System.Int32)">
            <summary>
            For internal use by Laserfiche.RepositoryAccess.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetRowNumberForName(System.String,System.Int32)">
            <summary>
            Gets the next row number containing the entry name with the specified prefix,
            starting from the specified row.
            </summary>
            <param name="prefix">The entry name prefix to search for.</param>
            <param name="startRow">The starting row number.</param>
            <returns>The row number of the next row with the specified entry name prefix, or zero.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetRowData(System.Int32)">
            <summary>
            Returns the data for a specified row in the listing.
            </summary>
            <param name="rowNumber">The row number specifying the row to return the data
            for.</param>
            <returns>An <c>EntryListingRow</c> instance which represents the data
            contained in the specified row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetRowsData(System.Int32,System.Int32)">
            <summary>
            Returns the data for the specified contiguous set of rows in the listing.
            The current row cursor is advanced by the number of rows returned in
            forward-only listings.
            </summary>
            <param name="rowNumber">The row number specifying the first row in the
            set to return data for.</param>
            <param name="maxRows">The maximum number of rows to return data for.</param>
            <returns>An array of <c>EntryListingRow</c> instances which represents the
            data containted in the specified set of rows.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetEntryInfo(System.Int32)">
            <summary>
            Returns an <c>EntryInfo</c> derived type instance that describes the entry
            corresponding to the specified row.
            </summary>
            <param name="rowNumber">The row number corresponding to the entry to return
            an <c>EntryInfo</c> derived type instance for.</param>
            <returns>An <c>EntryInfo</c> derived type instance that describes the entry
            corresponding to the specified row.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.MoveNext">
            <summary>
            Advances the current cursor position to the next row in the sequence when
            using a forward-only listing.  Returns true if row data is available or
            false if the end of the listing was hit.
            </summary>
            <returns>True if row data is available or false if the end of the listing
            was hit.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.GetFieldColumnDefinition(System.String)">
            <summary>
            Returns a <c>ColumnDefinition</c> instance that describes the specified field
            column or <c>null</c> if the specified column could not be found.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns>A <c>ColumnDefinition</c> instance that describes the specified field
            column or <c>null</c> if the specified column could not be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBase.CheckRowForListingAdvancement(System.Int32)">
            <summary>
            Checks the row for advancement when using a ForwardOnly listing cursor. 
            This is to make the listing more backwards compatible.
            </summary>
            <param name="requestedRow">The requested row.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingBase.Enumerator">
            <summary>
            For internal use by Laserfiche.RepositoryAccess.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SortDirection">
            <summary>
            An enumeration of sort directions: ascending or descending order.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SortDirection.Ascending">
            <summary>
            Sort elements in ascending order.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SortDirection.Descending">
            <summary>
            Sort elements in descending order.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ListingCursorType">
            <summary>
            An enumeration of listing cursor types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ListingCursorType.Scrollable">
            <summary>
            The caller can "scroll" the listing cursor back and forth in the result set.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ListingCursorType.ForwardOnly">
            <summary>
            The caller can only iterate forward through the results.  This is potentially
            more efficient than a scrollable listing.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ForwardCursorAdvancementRule">
            <summary>
            An enumeration that controls how the 'forward-only' cursor type advances.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ForwardCursorAdvancementRule.MoveNext">
            <summary>
            The row will only increment when <c>MoveNext</c> is called. The row number
            property is ignored in most methods with this option.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ForwardCursorAdvancementRule.StrictlyIncremental">
            <summary>
            <para>
            The strictly incremental option will advance the cursor by 1 if a
            new row 1 higher than the previous is accessed via any method that takes a row number.
            </para>
            <para>
            If a row is requested that is less than the current row or more than 1 higher
            then the previous an exception will be raised.
            </para>
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ForwardCursorAdvancementRule.RequestedRow">
            <summary>
            <para>
            The requested row option will advance the cursor to the new row as
            long as its higher than the current row.
            </para>
            <para>
            If a row is requested that is less than the current row an exception will be raised.
            </para>
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingBaseSettings">
            <summary>
            Base type for types which represent settings for Laserfiche entry
            listing objects.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SortDirection">
            <summary>
            Gets or sets the sort direction for the sort key column.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SortColumn">
            <summary>
            Gets or sets which column will act as the sort key for the listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SortColumnCount">
            <summary>
            Gets a count of the number of columns in the listing acting as a sort key.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.CursorType">
            <summary>
            Gets or sets the behavior and capabilities of listing cursor.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AdvancementRule">
            <summary>
            Gets or sets the advancement rule - defaults to StrictlyIncremental.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.FollowShortcuts">
            <summary>
            Gets or sets whether or not the listing will follow shortcuts.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.OmitOldVersions">
            <summary>
            Gets or sets a boolean which controls whether or not document versions
            which are not the latest in their version group are omitted (they are omitted
            if this property is set to true).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.IncludeShortcuts">
            <summary>
            Gets or sets a boolean which controls whether or not shortcut entries are
            included in the listing (they are included if this property is set to true).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.GroupByEntryType">
            <summary>
            Gets or sets a boolean indicating if rows in the listing will be grouped
            together by entry category (container versus leaf), regardless of sort keys.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.EntryFilter">
            <summary>
            Gets or sets which types of entries will be filtered out from the entry listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.ExemptAutoClose">
            <summary>
            Gets or sets a boolean which controls whether this list will be exempt from 
            being closed automatically by the LFS.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.ReturnEntryCounts">
            <summary>
            Gets or sets a boolean indicating whether or not Laserfiche should return a
            breakdown of the total number of entries by entry type in the results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.Columns">
            <summary>
            Gets a read-only list of <c>ColumnSpecifier</c> instances which describe the
            columns of the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryListingBaseSettings.ColumnCount">
            <summary>
            Gets a count of the number of columns in the listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumn(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Adds a system property column to the end of the column list.
            </summary>
            <param name="columnType">The system property type to add a data column for.</param>
            <returns>Returns true if the column was newly added, false if the column
            already exists in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumn(System.String)">
            <summary>
            Adds a template field column to the end of the column list.
            </summary>
            <param name="fieldName">The name of the template field to add a data
            column for.</param>
            <returns>Returns true if the column was newly added, false if the column
            already exists in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumn(Laserfiche.RepositoryAccess.FieldInfo)">
            <summary>
            Adds a template field column to the end of the column list.
            </summary>
            <param name="fieldInfo">A <c>FieldInfo</c> instance which represents the template
            field to add a data column for.</param>
            <returns>Returns true if the column was newly added, false if the column
            already exists in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumn(Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Adds a new column to the end of the column list.
            </summary>
            <param name="column">A <c>ColumnSpecifier</c> instance which describes the
            column to add.</param>
            <returns>Returns true if the column was newly added, false if the column
            already exists in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumns(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.SystemColumn})">
            <summary>
            Adds a set of columns for system properties to the end of the column list.
            </summary>
            <param name="columnTypes">An enumerable collection of <c>SystemColumn</c>
            enumeration values referencing systemc properties to add columns for.</param>
            <returns>The actual number of columns added to the column list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.AddColumns(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a set of columns for template fields to the end of the column list.
            </summary>
            <param name="fieldNames">An enumerable collection of strings specifying the
            names of template fields to add data columns for.</param>
            <returns>The actual number of columns added to the column list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveColumn(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Removes a system property data column from the column list.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration specifying
            the system property whose data column will be removed.</param>
            <returns>Returns true if the specified column was in the list and was removed,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveColumn(System.String)">
            <summary>
            Removes a template field data column from the column list.
            </summary>
            <param name="fieldName">The name of the template field whose data column
            will be removed.</param>
            <returns>Returns true if the specified column was in the list and was removed,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveColumn(Laserfiche.RepositoryAccess.FieldInfo)">
            <summary>
            Removes a template field data column from the column list.
            </summary>
            <param name="fieldInfo">A <c>FieldInfo</c> instance which represents the
            template field who data column will be removed.</param>
            <returns>Returns true if the specified column was in the list and was removed,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveColumn(Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Removes a column from the listing's column list.
            </summary>
            <param name="column">A <c>ColumnSpecifier</c> instances which specifies
            which column to remove from the column list.</param>
            <returns>Returns true if the specified column was removed from the list,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveColumn(System.Int32)">
            <summary>
            Removes a column from the listing's column list.
            </summary>
            <param name="columnNumber">The 1-based column number specifying which
            column to remove from the list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(Laserfiche.RepositoryAccess.SystemColumn)">
            <summary>
            Sets a system property to be used as the sort key for the listing.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration which
            specifies the system property to use as a sort key.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(Laserfiche.RepositoryAccess.SystemColumn,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Sets a system property to be used as the sort key for the listing.
            </summary>
            <param name="columnType">A member of the <c>SystemColumn</c> enumeration which
            specifies the system property to use as a sort key.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            which specifies the sort direction.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(System.String)">
            <summary>
            Sets a template field to be used as the sort key for the listing.
            </summary>
            <param name="fieldName">The name of the template field to be used as the
            sort key for the listing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(System.String,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Sets a template field to be used as the sort key for the listing.
            </summary>
            <param name="fieldName">The name of the template field to be used as the
            sort key for the listing.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            which specifies the sort direction.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(System.Int32)">
            <summary>
            Sets a column in the listing's column list to be used as a sort key for
            the listing.
            </summary>
            <param name="columnNumber">The 1-based column number in the column list
            to be used as the sort key in the listing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(System.Int32,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Sets a column in the listing's column list to be used as a sort key for
            the listing.
            </summary>
            <param name="columnNumber">The 1-based column number in the column list
            to be used as the sort key in the listing.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            which specifies the sort direction.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(Laserfiche.RepositoryAccess.ColumnSpecifier)">
            <summary>
            Sets a column in the listing's column list to be used as a sort key for
            the listing.
            </summary>
            <param name="column">A <c>ColumnSpecifier</c> instance which represents the
            column to be used as the sort key in the listing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.SetSortColumn(Laserfiche.RepositoryAccess.ColumnSpecifier,Laserfiche.RepositoryAccess.SortDirection)">
            <summary>
            Sets a column in the listing's column list to be used as a sort key for
            the listing.
            </summary>
            <param name="column">A <c>ColumnSpecifier</c> instance which represents the
            column to be used as the sort key in the listing.</param>
            <param name="sortDir">A member of the <c>SortDirection</c> enumeration
            which specifies the sort direction.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.RemoveSortColumn(System.Int32)">
            <summary>
            Removes the specified column from the set of sort key columns.
            </summary>
            <param name="index">The index of the column in the sort key list to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingBaseSettings.ClearSortColumns">
            <summary>
            Removes all columns from the sort key column list.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListingSettings">
            <summary>
            Represents the settings for an entry listing.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryListingSettings.#ctor">
            <summary>
            Initializes an <c>EntryListingSettings</c> instance.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LockType">
            <summary>
            Enumeration of available lock types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockType.Shared">
            <summary>
            A shared lock which is compatible with other shared locks.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockType.Exclusive">
            <summary>
            An exclusive lock which is not compatible with any other locks.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LockExtent">
            <summary>
            Enumeration of available lock extent.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockExtent.Page">
            <summary>
            Lock the page part of a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockExtent.Edoc">
            <summary>
            Lock the edoc and alternative edoc of a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockExtent.Metadata">
            <summary>
            Lock the other part of the document, such as version history, annotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LockExtent.All">
            <summary>
            Lock the whole document.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryLock">
            <summary>
            Represents a lock on an entry in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.EntryId">
            <summary>
            Gets the ID of the entry that the represented lock is on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.LockGuid">
            <summary>
            Gets the UUID of the represented lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Duration">
            <summary>
            Gets the duration of the represented lock.  The lock will expire after
            the specified duration since the last refresh.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.AutoRefresh">
            <summary>
            Gets a boolean indicating if the lock will be refreshed automatically by the
            library.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.IsActive">
            <summary>
            Gets a boolean indicating if the lock represented by this instance is
            currently active.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Type">
            <summary>
            Gets a member of the <c>LockType</c> enumeration indicating the type of
            lock this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Extent">
            <summary>
            Gets a integer which indicates the extent of
            lock this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.LockToken">
            <summary>
            Gets the unique lock token of the represented lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Session">
            <summary>
            Gets the Laserfiche session associated with the represented lock.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Path">
            <summary>
            Gets the repository path to the locked entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryLock.Comment">
            <summary>
            Gets the lock's comment.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLock.Unlock">
            <summary>
            Removes the lock represented by this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLock.Refresh(Laserfiche.RepositoryAccess.LockExtent)">
            <summary>
            Refreshes the lock.
            </summary>
            <param name="expandExtent">The lock extent that you want expend, 
            it will auto include the existing lock extent.</param>
            <returns>True if the lock was refreshed, false if the lock could not be
            refreshed.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryLock.Dispose">
            <summary>
            Removes the lock represented by this instance.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntrySecurity">
            <summary>
            Represents the access control information for an entry in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.#ctor">
            <summary>
            Initializes an <c>EntrySecurity</c> instance with an empty ACL and
            no owner.
            </summary>
            <param name="isContainer"></param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntrySecurity.AccessRightType">
            <summary>
            Returns a <c>Type</c> instance for the <c>EntryRights</c> type,
            representing the access rights supported for entries.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntrySecurity.EffectiveRights">
            <summary>
            Gets the effective access rights for the associated entry granted to the
            current session.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes and returns a new <c>AccessRule</c> instance which represents a
            new entry access control list entry (ACE) based upon the specified parameters.
            </summary>
            <param name="identityReference">An <c>IdentityReference</c> instance which
            specifies the account that the new <c>AccessRule</c> will reference.</param>
            <param name="accessMask">The access mask for the new <c>AccessRule</c>.</param>
            <param name="isInherited">Whether or not the new ACE can be inherited by
            descendant entries.</param>
            <param name="inheritanceFlags">Members of the <c>InheritanceFlags</c>
            enumeration which control which types of entries can inherit the new ACE.</param>
            <param name="propagationFlags">Members of the <c>PropagationFlags</c>
            enumeration which control how the ACE will be propagated down the folder
            tree.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE that the new <c>AccessRule</c> represents.</param>
            <returns>A new <c>AccessRule</c> instance which represents a new entry
            access control list entry (ACE).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.AccessRuleFactory(Laserfiche.RepositoryAccess.AccountReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes and returns a new <c>AccessRule</c> instance which represents a
            new entry access control list entry (ACE) based upon the specified parameters.
            </summary>
            <param name="acctReference">An <c>AccountReference</c> instance which
            specifies the account that the new <c>AccessRule</c> will reference.</param>
            <param name="accessMask">The access mask for the new <c>AccessRule</c>.</param>
            <param name="isInherited">Whether or not the new ACE can be inherited by
            descendant entries.</param>
            <param name="inheritanceFlags">Members of the <c>InheritanceFlags</c>
            enumeration which control which types of entries can inherit the new ACE.</param>
            <param name="propagationFlags">Members of the <c>PropagationFlags</c>
            enumeration which control how the ACE will be propagated down the folder
            tree.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE that the new <c>AccessRule</c> represents.</param>
            <returns>A new <c>AccessRule</c> instance which represents a new entry
            access control list entry (ACE).</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntrySecurity.AccessRuleType">
            <summary>
            Gets a <c>Type</c> instance for the <c>EntryAccessRule</c> class, which
            represents a Laserfiche entry access control list entry (ACE).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.AddAccessRule(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Adds an access control entry (ACE) to the ACL represented by this instance.
            </summary>
            <param name="rule">An <c>EntryAccessRule</c> representing the new ACE to
            add to the entry security configuration.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.RemoveAccessRuleAll(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Removes all the access rules with an account identity that matches the
            one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">An <c>EntryAccessRule</c> instance whose trustee
            identity matches the account identities of all the access rules
            removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.RemoveAccessRule(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Remove the specified access rule from the ACL.
            </summary>
            <param name="rule">An <c>EntryAccessRule</c> instance in the collection
            of <c>EntryAccessRule</c> instances this <c>EntrySecurity</c> manages.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.RemoveAccessRuleSpecific(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Removes all the access rules with an account identity and ACE type that
            match the one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">An <c>EntryAccessRule</c> instance whose trustee
            identity and ACE type match the access rules removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.ResetAccessRule(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Removes all the access rules managed by this instance and resets the ACL
            to consist of the specified access rule.
            </summary>
            <param name="rule">The <c>EntryAccessRule</c> instance which will comprise
            the new ACL.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.SetAccessRule(Laserfiche.RepositoryAccess.EntryAccessRule)">
            <summary>
            Removes all access rules in the existing ACL which match the ACE type
            and trustee identity of the rule specified by the <paramref name="rule"/>
            argument, and adds the argument to the ACL.
            </summary>
            <param name="rule">The <c>EntryAccessRule</c> instance used when removing
            matching access rules from the ACL and to add to the ACL once the removal
            is complete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.SetOwner(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Sets the owner of the entry to the specified Laserfiche account.
            </summary>
            <param name="identity">The Laserfiche account that will be the owner
            of the entry associated with this instance.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntrySecurity.EntryRightsToString(Laserfiche.RepositoryAccess.EntryRights)">
            <summary>
            Converts members of the <c>EntryRights</c> enumeration to the standard
            Laserfiche string representation of entry access rights.
            </summary>
            <param name="rights">Members of the <c>EntryRights</c> enumeration to convert
            to a string.</param>
            <returns>The string representation of the <paramref name="rights"/> argument.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryTag">
            <summary>
            Represents a tag applied to an entry in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryTag.TagId">
            <summary>
            Gets the ID of the tag definition applied to the entry in the entry tag
            represented by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryTag.EntryId">
            <summary>
            Gets the ID of the entry the tag is applied to in the entry tag
            represented by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryTag.IsSecure">
            <summary>
            Gets a boolean indicating if the tag is defined as a security tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryTag.Description">
            <summary>
            Gets a description stored in the tag definition associated with the entry tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryTag.Comment">
            <summary>
            Gets the comment associated with the represented entry tag.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryTagCollection">
            <summary>
            Represents a read-only collection of <c>EntryTag</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryTagCollection.CopyTo(Laserfiche.RepositoryAccess.EntryTag[])">
            <summary>
            Copies the entire <c>EntryTag</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryTagCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.EntryTag[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>EntryTag</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy">
            <summary>
            Enumeration of available field merging strategies to use when merging field data from
            two fields on the same entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy.MakeMultivalue">
            <summary>
            Convert the destination field to a multi-value field containing values
            from all the source fields.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy.UseFirstField">
            <summary>
            Use the value from the first field and discard all others.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy.Fail">
            <summary>
            Abort the merge operation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldMergeOptions">
            <summary>
            Enumeration of options to control how fields are merged.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeOptions.None">
            <summary>
            Use the default behavior.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeOptions.RemoveFromTemplates">
            <summary>
            Remove the source fields from all templates which contain them.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldMergeOptions.AutoRename">
            <summary>
            Automatically choose a new name in case the destination field's name conflicts
            with an existing field.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldCollectionType">
            <summary>
            Enumeration of template field states, for which the corresponding
            type of template field defintions may be enumerated.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldCollectionType.All">
            <summary>
            The collection should contain all types of fields.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldCollectionType.Assigned">
            <summary>
            The collection should only contain fields assigned to a template.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldCollectionType.Unassigned">
            <summary>
            The collection should only contain fields not assigned to template.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Field">
            <summary>
            Collection of static methods for managing template fields in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.Create(Laserfiche.RepositoryAccess.FieldInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new template field definition in a Laserfiche repository.
            </summary>
            <param name="info">A <c>FieldInfo</c> instance which specifies the settings
            for the new template field.  The instance is not modified.</param>
            <param name="autoRename">A boolean indicating whether or not to automatically
            rename the template field if there is a name conflict.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FieldInfo</c> instance which represents the new
            template field definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.Update(System.Int32,Laserfiche.RepositoryAccess.FieldInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the definition for an existing template field in a Laserfiche repository.
            </summary>
            <param name="fieldId">The ID of the template field definition to update.</param>
            <param name="info">A <c>FieldInfo</c> instance which represents the updated settings
            to use for the specified field.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified template field definition from a Laserfiche repository.
            </summary>
            <param name="fieldId">The ID of the template field definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes the specified template field definition from a Laserfiche repository.
            </summary>
            <param name="fieldName">The name of the template field definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about the specified template field definition in a
            Laserfiche repository.
            </summary>
            <param name="fieldId">The ID of the template field definition to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FieldInfo</c> instance which represents the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about the specified template field definition in a
            Laserfiche repository.
            </summary>
            <param name="fieldName">Then name of the template field definition to
            retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FieldInfo</c> instance which represents the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAccessControl(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access control information for an existing template field
            definition in a Laserfiche repository.
            </summary>
            <param name="fieldId">The ID of the template field definition to return
            access control information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FieldSecurity</c> instance which represents the access
            control information for the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAccessControl(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access control information for an existing template field
            definition in a Laserfiche repository.
            </summary>
            <param name="fieldName">The name of the template field definition to return
            access control information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FieldSecurity</c> instance which represents the access
            control information for the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.SetAccessControl(System.Int32,Laserfiche.RepositoryAccess.FieldSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Configures the access control settings for the specified template field
            definition.
            </summary>
            <param name="fieldId">The ID of the template field to configure the access
            control settings for.</param>
            <param name="fieldSecurity">A <c>FieldSecurity</c> instance which represents
            the new access control settings for the specified template field.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.SetAccessControl(System.String,Laserfiche.RepositoryAccess.FieldSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Configures the access control settings for the specified template field
            definition.
            </summary>
            <param name="fieldName">The name of the template field to configure the
            access control settings for.</param>
            <param name="fieldSecurity">A <c>FieldSecurity</c> instance which represents
            the new access control settings for the specified template field.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the specified template field.
            </summary>
            <param name="fieldId">The ID of the template field to return the current
            session's effective access to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            current session's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the specified template field.
            </summary>
            <param name="fieldName">The name of the template field to return the current
            session's effective access to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            current session's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAclDisplayRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified template
            field to the specified trustee.
            </summary>
            <param name="fieldId">The ID of the template field with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculate the rights granted through the ACL configured on the input template
            fields to the input trustees.
            </summary>
            <param name="fieldIds">The IDs of the target template fields.</param>
            <param name="lfAccts">An <c>AccountReference</c> instances of the target trunstees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculate the rights granted through the ACL configured on the input template
            fields to the input trustees.
            </summary>
            <param name="fieldIds">The IDs of the target template fields.</param>
            <param name="sids">An <c>SecurityIdentifier</c> instances of the target trunstees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAclDisplayRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified template
            field to the specified trustee.
            </summary>
            <param name="fieldId">The ID of the template field with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAclDisplayRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified template
            field to the specified trustee.
            </summary>
            <param name="fieldName">The name of the template field with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetAclDisplayRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted through the ACL configured on the specified template
            field to the specified trustee.
            </summary>
            <param name="fieldName">The name of the template field with the ACL to use to
            calculate the granted access for the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the specified
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the specified template field.
            </summary>
            <param name="fieldId">The ID of the template field to return the specified
            user's effective access to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculate the effective access rights of the input trustees to the input template.
            </summary>
            <param name="fieldIds">The IDs of the target template fields.</param>
            <param name="lfAccts">An <c>AccountReference</c> instances of the target trunstees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculate the effective access rights of the input trustees to the input template.
            </summary>
            <param name="fieldIds">The IDs of the target template fields.</param>
            <param name="sids">An <c>SecurityIdentifier</c> instances of the target trunstees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Dictionary</c> mapping IDs of target entires to corresponding rights 
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to <c>EntryRights</c> enumeration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the specified template field.
            </summary>
            <param name="fieldId">The ID of the template field to return the specified
            user's effective access to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the specified template field.
            </summary>
            <param name="fieldName">The name of the template field to return the specified
            user's effective access to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetEffectiveRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the specified template field.
            </summary>
            <param name="fieldName">The name of the template field to return the specified
            user's effective access to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access to the specified template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetDefaultAccessControl(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>FieldSecurity</c> instances representing the
            default ACL for new template fields.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FieldSecurity</c> instances representing the
            default ACL for new template fields.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.SetDefaultAccessControl(Laserfiche.RepositoryAccess.FieldSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the default ACL that will be assigned to new fields.
            </summary>
            <param name="fieldSecurity">A <c>FieldSecurity</c> instance that
            represents the new default ACL assigned to new fields</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetDefaultEffectiveRights(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the effective access rights of the current session assuming a
            template field with the default field ACL.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>FieldRights</c> enumeration representing
            the effective access rights of the current session assuming a
            template field with the default field ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetDefaultAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the ACL display rights for the specified Laserfiche account assuming
            a template field with the default ACL.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the Laserfiche account to calculate ACL display rights for.</param>
            <param name="session"></param>
            <returns>One or more values from the <c>FieldRights</c> enumeration representing
            the ACL display rights for the specified Laserfiche account assuming a
            template field with the default field ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a template field with the default ACL.
            </summary>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>AccountReference</c> of accounts to one or more values 
            from the <c>FieldRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a template field with the default field ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a template field with the default ACL.
            </summary>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>SecurityIdentifier</c> of accounts to one or more values 
            from the <c>FieldRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a template field with the default field ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetDefaultAclDisplayRights(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
             Retrieves the ACL display rights for the specified Windows account assuming
            a template field with the default ACL.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the Windows account to calculate ACL display rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>FieldRights</c> enumeration representing
            the ACL display rights for the specified Windows account assuming a
            template field with the default field ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>FieldInfoReader</c> instance which can be used to enumerate all
            of the template field definitions in the current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FieldInfoReader</c> instance which can be used to enumerate all
            of the template field definitions in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.Enumerate(Laserfiche.RepositoryAccess.FieldCollectionType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>FieldInfoReader</c> instance which can be used to enumerate
            template field definitions in the current repository of the specified type.
            </summary>
            <param name="type">A value of the <c>FieldCollectionType</c> enumeration
            specifying the status of the template fields to enumerate.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FieldInfoReader</c> instance which can be used to enumerate
            template field definitions in the current repository of the specified type.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetContainingTemplates(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of names of the templates that the specified template field
            is a member of.
            </summary>
            <param name="fieldId">The ID of the field to return a collection of containing
            template names for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of names of the templates that the specified template field
            is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetContainingTemplates(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of names of the templates that the specified template field
            is a member of.
            </summary>
            <param name="fieldName">The name of the field to return a collection of containing
            template names for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of names of the templates that the specified template field
            is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.MergeFields(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.FieldInfo},System.String,Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy,Laserfiche.RepositoryAccess.FieldMergeOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Merges the data from the specified collection of template fields (two or more)
            into a new template field.
            </summary>
            <param name="sourceFields">An enumerable collection of <c>FieldInfo</c> instances
            representing the template fields to merge.</param>
            <param name="newFieldName">The name of the new template field.</param>
            <param name="onConflict">A member of the <c>FieldMergeResolutionStrategy</c>
            enumeration specifying which strategy to use when encountering conflicting
            field values on an entry.</param>
            <param name="options">Members of the <c>FieldMergeOptions</c> enumeration
            which control how field merging shall take place.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The ID of the new template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.MergeFields(System.Collections.Generic.IEnumerable{System.String},System.String,Laserfiche.RepositoryAccess.FieldMergeResolutionStrategy,Laserfiche.RepositoryAccess.FieldMergeOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Merges the data from the specified collection of template fields (two or more)
            into a new template field.
            </summary>
            <param name="sourceFields">An enumerable collection of strings representing the
            names of template fields to merge.</param>
            <param name="newFieldName">The name of the new template field.</param>
            <param name="onConflict">A member of the <c>FieldMergeResolutionStrategy</c>
            enumeration specifying which strategy to use when encountering conflicting
            field values on an entry.</param>
            <param name="options">Members of the <c>FieldMergeOptions</c> enumeration
            which control how field merging shall take place.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The ID of the new template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified field.
            </summary>
            <param name="fieldId">The ID of the field.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified field.
            </summary>
            <param name="fieldId">The ID of the field.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified field.
            </summary>
            <param name="fieldId">The ID of the field.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all fields.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all fields.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all fields.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.TypeToString(Laserfiche.RepositoryAccess.FieldType)">
            <summary>
            This method is for internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.ValueToString(System.Object)">
            <summary>
            Returns the value formatted as a string, using the rules of
            the InvariantCulture.
            </summary>
            <param name="value">A value type to format.</param>
            <returns>The value formatted as a string, using the rules of
            the InvariantCulture, or the empty string if null is provided.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetLevel2Uri(System.Int32)">
            <summary>
            Get URI for a field's list of containing templates (information level 2).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetLevel2Uri(System.String)">
            <summary>
            Get URI for a field's list of containing templates (information level 2).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetLevel3Uri(System.Int32)">
            <summary>
            Get URI for a field's list values for type list (information level 3).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Field.GetLevel3Uri(System.String)">
            <summary>
            Get URI for a field's list values for type list (information level 3).
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldRights">
            <summary>
            Access rights for Laserfiche template field objects.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.ReadValue">
            <summary>
            Permission to read the field's values.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.SetValue">
            <summary>
            Permission to set the field's values.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.SetValueOnce">
            <summary>
            Permission to set the field's values upon document creation but
            not thereafter.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.ModifyDefinition">
            <summary>
            Permission to modify the field's definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.Delete">
            <summary>
            Permission to delete the field's definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.ReadPermissions">
            <summary>
            Permission to read the field's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.ChangePermissions">
            <summary>
            Permission to modify the field's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.TakeOwnership">
            <summary>
            Permission to take ownership of the field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.Read">
            <summary>
            Generic read access; permission to read the field's values and
            security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.Write">
            <summary>
            Generic write access; permission to set the field's values.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldRights.FullControl">
            <summary>
            A combination of all template field access rights.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldAccessRule">
            <summary>
            Represents an access control entry (ACE) for a Laserfiche template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldAccessRule.FieldRights">
            <summary>
            Gets the access mask associated with the represented ACE.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.FieldRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>FieldAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche template field.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="fieldRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.FieldRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>FieldAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche template field.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="fieldRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldType">
            <summary>
            Enumeration of Laserfiche template field types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.String">
            <summary>
            A string (character) type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.List">
            <summary>
            A list type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.Blob">
            <summary>
            A BLOB (binary data) type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.Date">
            <summary>
            A date without time type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.DateTime">
            <summary>
            A date with time type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.Time">
            <summary>
            A time of day without date type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.Number">
            <summary>
            A number field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.ShortInteger">
            <summary>
            A short integer (range 0-64999) type field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldType.LongInteger">
            <summary>
            A long integer (range 0-3999999999) type field.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldFormat">
            <summary>
            Enumeration of Laserfiche template field formats.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.None">
            <summary>
            No special format, or format not applicable.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.Custom">
            <summary>
            A custom format specified by the field's format pattern.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.ShortDate">
            <summary>
            The short date format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.LongDate">
            <summary>
            The long date format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.ShortDateTime">
            <summary>
            The short date/time format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.LongDateTime">
            <summary>
            The long date/time format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.ShortTime">
            <summary>
            The short time of day format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.LongTime">
            <summary>
            The long time of day format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.GeneralNumber">
            <summary>
            The general number format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.Currency">
            <summary>
            The currency number format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.Percent">
            <summary>
            The percent number format.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldFormat.Scientific">
            <summary>
            The scientific notation number format.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldInfo">
            <summary>
            Represents a template field definition in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Description">
            <summary>
            Gets or sets the description of the represented template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Id">
            <summary>
            Gets the ID of the represented template field definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Name">
            <summary>
            Gets or sets the name of the template field definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.FieldType">
            <summary>
            Gets or sets the type of values that can be stored in the represented
            template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Length">
            <summary>
            Gets or sets the length of the field for variable length data types.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.DefaultValue">
            <summary>
            Gets or sets the default value of the field for new entries that are assigned
            to a template the represented field is a member of.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Constraint">
            <summary>
            Gets or sets the constraint for values stored in the represented field.  This
            property corresponds to the ILFTemplateField.Regex property in LFSO.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.ConstraintError">
            <summary>
            Gets or sets the error string that will be returned when the field constraint
            is violated when setting a value for this field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.IsRequired">
            <summary>
            Gets or sets a boolean indicating if the represented field must have a value set
            on entries assigned to a template that the field is a member of.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.IsMultiValue">
            <summary>
            Gets or sets a boolean indicating if the represented template field supports
            multiple values (i.e., whether the field is a multi-value field).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.IsIndexed">
            <summary>
            Gets or sets a boolean indicating whether the field will be indexed to speed
            up full-text searches.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.WarnIfBlank">
            <summary>
            Gets or sets a boolean indicating if client programs should warn users if
            they change field values on an entry while leaving this field blank.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.HideListValues">
            <summary>
            Gets or sets a boolean that acts as a hint to clients that list field
            values should not be enumerated or displayed to the user in a drop-down
            list or similar manner, because there may be many values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Format">
            <summary>
            Gets or sets the display format of the represented template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Currency">
            <summary>
            Gets or sets the name of the currency that will be using when formatting
            the represented field when the <c>Format</c> property is set to the
            <c>Currency</c> member of the <c>FieldFormat</c> enumeration.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.FormatPattern">
            <summary>
            Gets or sets the custom format pattern for fields that are configured to
            use a custom format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.Flags">
            <summary>
            Gets implementation defined flag values for the represented template
            field definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.ContainingTemplateCount">
            <summary>
            Gets the number of templates that contain the field represented by this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldInfo.IsExpunged">
            <summary>
            Gets a boolean indicating if the field definition has been deleted in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.#ctor">
            <summary>
            Initializes a <c>FieldInfo</c> instance representing a new string template field
            with an initial length of 20 characters.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.#ctor(Laserfiche.RepositoryAccess.FieldType)">
            <summary>
            Initializes a <c>FieldInfo</c> instance representing a new template field of the
            specified data type.
            </summary>
            <param name="type">A member of the <c>FieldType</c> enumeration specifying the
            data type of the new template field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.#ctor(Laserfiche.RepositoryAccess.FieldInfo)">
            <summary>
            Initializes a <c>FieldInfo</c> instance using an existing <c>FieldInfo</c>
            instance to copy initial field settings from.
            </summary>
            <param name="source">A <c>FieldInfo</c> instance to draw settings from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.ChangeType(Laserfiche.RepositoryAccess.FieldType)">
            <summary>
            Changes the data type of the represented template field definition.  The change
            is submitted to Laserfiche when pending changes for this instance are saved
            to the repository.
            </summary>
            <param name="newType">A member of the <c>FieldType</c> enumeration specifying
            the new data type of the represented field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.SetFlags(System.Int32)">
            <summary>
            A low-level method to directly set the flags word for field definitions.
            </summary>
            <param name="newFlags">The new value of the field flags word.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.Delete">
            <summary>
            Marks the template field definition represented by this instance for deletion
            when changes are submitted to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetContainingTemplates">
            <summary>
            Returns a collection of <c>TemplateInfo</c> instances representing the
            Laserfiche templates the represented field is a member of.
            </summary>
            <returns>A collection of <c>TemplateInfo</c> instances representing the
            Laserfiche templates the represented field is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetAssignedEntryCount">
            <summary>
            Gets a count of the number of entries that have this field assigned.
            </summary>
            <returns>A count of the number of entries that have this field assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetItemList">
            <summary>
            Returns a <c>FieldItemList</c> instance representing the list of items
            assigned to the represented template field.
            </summary>
            <returns>A <c>FieldItemList</c> instance representing the list of items
            assigned to the represented template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.SetItemList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the list of strings to be used for the list items.
            </summary>
            <param name="list">A list of strings to be used for the list items.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.ValueToString(System.Object)">
            <summary>
            Converts a value to a string following the format rules of the
            represented field definition.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A formatted <c>String</c> representation of the specified value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.ValueToString(System.Object,Laserfiche.RepositoryAccess.ILfLocale)">
            <summary>
            Converts a value to a string following the format rules of the
            represented field definition.
            </summary>
            <param name="value">The value to format.</param>
            <param name="locale">An instance of a type that implements the
            <c>ILfLocale</c> interface, specifying the locale specific format
            rules to use.</param>
            <returns>A formatted <c>String</c> representation of the specified value.</returns>
            <remarks>
            If <paramref name="value"/> is null, the empty string is returned.  If
            the represented field is a multi-value field, <paramref name="value"/> can
            reference an array.  Each element of the array will be converted to a string
            separated by newlines.  If the array is empty an empty string shall be returned.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetAccessControl">
            <summary>
            Returns a new <c>FieldSecurity</c> instance which represents the configured
            access control settings for the represented template field.
            </summary>
            <returns>A new <c>FieldSecurity</c> instance which represents the configured
            access control settings for the represented template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.SetAccessControl(Laserfiche.RepositoryAccess.FieldSecurity)">
            <summary>
            Configures the access control settings for the represented template field
            definition.
            </summary>
            <param name="fieldSecurity">A <c>FieldSecurity</c> instance which represents
            the new access control settings for the specified template field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetEffectiveRights">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the represented template field.
            </summary>
            <returns>>Members of the <c>FieldRights</c> enumeration specifying the
            current session's effective access to the represented template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetEffectiveRights(System.Security.Principal.IdentityReference)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the represented template field.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetEffectiveRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Calculates and returns the effective access rights of the specified user
            to the represented template field.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified user's effective access.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Returns the rights granted through the ACL configured on the represented template
            field to the specified trustee.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which specifies the
            Laserfiche account to use as the trustee to calculate the granted access for.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the represented
            template field.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldInfo.GetAclDisplayRights(System.Security.Principal.IdentityReference)">
            <summary>
            Returns the rights granted through the ACL configured on the represented template
            field to the specified trustee.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which specifies the
            trustee to calculate the granted access for.</param>
            <returns>Members of the <c>FieldRights</c> enumeration specifying the
            specified trustee's access granted via the ACL associated with the represented
            template field.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldInfoReader">
            <summary>
            Provides the ability to enumerate information about template field
            definitions in a Laserfiche repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldSecurity">
            <summary>
            Represents the access control information for a template field definition
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.#ctor">
            <summary>
            Initializes a <c>FieldSecurity</c> instance with an empty ACL.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldSecurity.EffectiveRights">
            <summary>
            Gets the effective access rights for the associated field granted to the
            current session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldSecurity.AccessRightType">
            <summary>
            Gets a <c>Type</c> instance for the <c>FieldRights</c> type,
            representing the access rights supported for template field definitions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldSecurity.AccessRuleType">
            <summary>
            Gets a <c>Type</c> instance for the <c>FieldAccessRule</c> type,
            representing the access control entries for template field definitions.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identityReference">Not used.</param>
            <param name="accessMask">Not used.</param>
            <param name="isInherited">Not used.</param>
            <param name="inheritanceFlags">Not used.</param>
            <param name="propagationFlags">Not used.</param>
            <param name="flags">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldSecurity.AuditRuleType">
            <summary>
            This property is not supported.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.AddAccessRule(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Adds an access control entry (ACE) to the ACL represented by this instance.
            </summary>
            <param name="rule">A <c>FieldAccessRule</c> representing the new ACE to
            add to the template field security configuration.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.GetOwner(System.Type)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="targetType">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.RemoveAccessRule(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Removes the specified access control entry from the represented security
            configuration.
            </summary>
            <param name="rule">A <c>FieldAccessRule</c> instance which represents the
            access control entry to remove from the represented security configuration.</param>
            <returns>True if the specified <c>FieldAccessRule</c> instance was found
            and removed, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.RemoveAccessRuleAll(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Removes all the access rules with an account identity that matches the
            one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>FieldAccessRule</c> instance whose trustee
            identity matches the account identities of all the access rules
            removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.RemoveAccessRuleSpecific(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Removes all the access rules with an account identity and ACE type that
            match the one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>FieldAccessRule</c> instance whose trustee
            identity and ACE type match the access rules removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.ResetAccessRule(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Removes all the access rules managed by this instance and resets the ACL
            to consist of only the specified access rule.
            </summary>
            <param name="rule">The <c>FieldAccessRule</c> instance which will comprise
            the new ACL.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.SetAccessRule(Laserfiche.RepositoryAccess.FieldAccessRule)">
            <summary>
            Removes all access rules in the existing ACL which match the ACE type
            and trustee identity of the rule specified by the <paramref name="rule"/>
            argument, and adds the argument to the ACL.
            </summary>
            <param name="rule">The <c>FieldAccessRule</c> instance used when removing
            matching access rules from the ACL and to add to the ACL once the removal
            is complete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.SetOwner(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identity">Not used.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldSecurity.FieldRightsToString(Laserfiche.RepositoryAccess.FieldRights)">
            <summary>
            Returns the standard Laserfiche string representation for the specified set of
            field rights.
            </summary>
            <param name="rights">The set of fields rights to get the string representation
            of.</param>
            <returns>The standard Laserfiche string representation for the specified set of
            field rights.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValueCollection">
            <summary>
            Represents a collection of template field values.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.fieldValueMap">
            <summary>
            This dictionary maps field values to the property object that contains their values.
            </summary>
            <remarks>The field value entry in this map is the same that is in the field value list.</remarks>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.fieldValueList">
            <summary>
            The field value list maintains position information for fields. 
            </summary>
            <remarks>The field value entry in this list is the same that is in the field value map.</remarks>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.template">
            <summary>
            The template this field value collection belongs to.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.FieldValueCollection"/> class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.#ctor(Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.FieldValueCollection" />
            class by creating a deep copy of another instance.
            </summary>
            <param name="toBeCopied">To field value collection be copied.</param>
            <exception cref="T:System.ArgumentNullException">toBeCopied</exception>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValueCollection.ParseState">
            <summary>
            The parsing state when reading xml.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.Count">
            <summary>
            Gets a count of the number of template fields that have values
            in this collection.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldNames">
            <summary>
            Gets a collection of field names representing the fields that have values
            in this collection.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.TemplateName">
            <summary>
            Gets the name of the template - if any - that is assigned to the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.Item(System.String)">
            <summary>
            Gets or sets the value stored in this collection of a field by its name.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="fieldName">The name of the field to retrieve the value of.</param>
            <returns>
            The value of the specified field in this collection, if the
            value exists in this collection.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            fieldName
            </exception>
            <remarks>
            Setting a field will add its value to the current collection
            if the field does not already exist in the collection.  If the field
            value already exists, the value will be overwritten.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value of a field by the 0-based position of the field.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="position">The 0-based position of the field to get or set
            the value of.</param>
            <returns>
            The value of the field at the specified position.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position
            </exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldRowNumbers(System.Int32)">
            <summary>
            Get the array of row numbers for a multivalue field.
            </summary>
            <param name="fieldPos">The 0-based position of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.SetFieldRowNumbers(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Set the array of row numbers for a multivalue field.
            </summary>
            <param name="fieldPos">The 0-based position of the field.</param>
            <param name="newRowNums">The new array of row numbers.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldRowNumbers(System.String)">
            <summary>
            Get the array of row numbers for a multivalue field.
            </summary>
            <param name="fieldName">The name of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.SetFieldRowNumbers(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Set the array of row numbers for a multivalue field.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <param name="newRowNums">The new array of row numbers.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldGroupId(System.Int32)">
            <summary>
            Get the group id for a field in a template.
            </summary>
            <param name="fieldPos">The 0-based position of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldGroupId(System.String)">
            <summary>
            Get the group id for a field in a template.
            </summary>
            <param name="fieldName">The name of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetHighestRowNum(System.Int32)">
            <summary>
            Find out the highest RowNum in fields in a given group. 
            Note that this function will loop through all field values in the collection to get the result.
            Please refrain from calling it frequently.
            </summary>
            <param name="groupId">The id of the target group.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetLocalFlags(System.Int32)">
            <summary>
            Get the local flags for a field in a template.
            </summary>
            <param name="fieldPos">The 0-based position of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetLocalFlags(System.String)">
            <summary>
            Get the local flags for a field in a template.
            </summary>
            <param name="fieldName">The name of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Add(System.String,System.Object)">
            <summary>
            Adds a field value to the current collection.  No change is made if the field
            already exists in the collection.  The field is assumed to be independent of
            any assigned template.
            </summary>
            <param name="fieldName">The name of the field to add the value for.</param>
            <param name="value">The value of the field.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Adds a field value to the current collection.  No change is made if the field
            already exists in the collection.
            </summary>
            <param name="fieldName">The name of the field to add the value for.</param>
            <param name="value">The value of the field.</param>
            <param name="isIndependent">A boolean which indicates if the field is
            part of an assigned template or not (true means it's not).</param>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.AppendValues(System.String,System.Object[])">
            <summary>
            Appends one or more values to a field in the collection, or sets the
            value of the field if the field did not previously exist in the collection.
            </summary>
            <param name="fieldName">The name of the field to append a value to.</param>
            <param name="value">One or more values to append to the stored values
            for the specified field.</param>
            <exception cref="T:System.ArgumentNullException">
            fieldName
            or
            value
            </exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Clear">
            <summary>
            Clears the current collection by removing all fields and values.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Remove(System.String)">
            <summary>
            Removes a field and all corresponding values from the current collection.
            This is an O(fieldCount) operation.
            </summary>
            <param name="fieldName">The name of the field to remove from the
            collection.</param>
            <returns>
            True if the field was removed from the current collection,
            false if the field did not already exist in the collection.
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.ContainsField(System.String)">
            <summary>
            Determines if the collection contains a value for the specified field.
            </summary>
            <param name="fieldName">The name of the field to check for in the
            collection.</param>
            <returns>
            True if any values for the field are contained in the current
            collection, false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.IsMultiValue(System.String)">
            <summary>
            Determines if the value of a specified field consists of multiple
            values or not.
            </summary>
            <param name="fieldName">The name of the field to check the value of
            to determine if it consists of multiple values.</param>
            <returns>
            True if the specified field has multiple values in the collection,
            false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.PositionOfField(System.String)">
            <summary>
            Determines the position of a named field in the current collection.
            </summary>
            <param name="fieldName">The name of the field to determine the position
            for.</param>
            <returns>The 0-based position of the specified field, or -1 if the specified
            field was not found in the collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.PositionOfField(System.String,System.Boolean@)">
            <summary>
            Determines the position of a named field in the current collection.
            </summary>
            <param name="fieldName">The name of the field to return the position of.</param>
            <param name="isIndependent">On output, indicates whether or not the field
            is known to be part of the entry's template or not.</param>
            <returns>
            The 0-based position of the field, or -1 if the field is
            not contained in the collection.
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.PositionToName(System.Int32)">
            <summary>
            Returns the name of the field at the specified position.
            </summary>
            <param name="fieldPosition">The 0-based position of the field in the
            collection to return the name of.</param>
            <returns>
            The name of the field at the specified position.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">fieldPosition</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.IsIndependent(System.String)">
            <summary>
            Determines if a field in the collection is known to be an independent field,
            that is, not a member of the template assigned to the entry.
            </summary>
            <param name="fieldName">The name of the field to check.</param>
            <returns>
            True if the specified field is known to be an independent field,
            false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Key not found exception.</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldType(System.String)">
            <summary>
            Gets the type of the field. The field type is only known when the field values are retrieved from the server. 
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>The field type or null if the field type is not known.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetFieldType(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets the type of the field. The field type is only known when the field values are retrieved from the server. 
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="session">The session. This can be null. If it is provided, it will retrieve the type of the field.</param>
            <returns>
            <returns>The field type or null if the field type is not known or if the field is not assigned.</returns>
            </returns>
            <exception cref="T:System.ArgumentNullException">fieldName</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.TryGetValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the named field in the collection.
            </summary>
            <param name="fieldName">The name of the field to check for membership
            in the collection and to return the value of.</param>
            <param name="value">On output contains the value of the specified field
            if the field exists in the collection.</param>
            <returns>True if the specified field is present in the collection, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to enumerate all of the fields and
            values stored in this collection.
            </summary>
            <returns>An enumerator that can be used to enumerate all of the fields and
            values stored in this collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">item</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the field values to the array.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array to start inserting field values.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
              </returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
              </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex</exception>
            <exception cref="T:System.ArgumentException">Array is too small</exception>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.CreateFromXml(System.Xml.XmlReader)">
            <summary>
            Creates from field value collection from XML.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The new field value collection.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.SetFieldsIsIndependentFlag(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Sets the template fields. Marks the given fields as not
            being independent fields.
            </summary>
            <param name="templateFields">The template fields.</param>
            <param name="areIndependent">If set to <c>true</c> indicates that the fields are independent.</param>
            <exception cref="T:System.ArgumentNullException">templateFields</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.ToXml(System.Xml.XmlWriter)">
            <summary>
            Converts the field value collection to xml.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.InternalAdd(Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry)">
            <summary>
            Adds the specified field value entry.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.VerifyFieldValueRank(System.Object)">
            <summary>
            Verifies that multi-valued fields are one dimensional arrays.
            </summary>
            <param name="value">The value to verify.</param>
            <exception cref="T:System.ArgumentException">Field value arrays must be one dimensional.;value</exception>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator">
            <summary>
            Enumerator for the <c>FieldValueCollection</c> type.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.fieldValues">
            <summary>
            The field values collection the enumerator belongs to.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.internalEnumerator">
            <summary>
            The internal enumerator that actually does the enumeration.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.#ctor(Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator"/> struct.
            </summary>
            <param name="fieldValues">The field values.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.Current">
            <summary>
            Gets the current field value.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection">
            <summary>
            A field value collection that contains the differences between two other
            field value collections - usually server and local.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.serverFields">
            <summary>
            After Calculate diff is called, this will contain the 
            removed field list.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.diffed">
            <summary>
            Flag indicating the collection has been diffed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.#ctor(Laserfiche.RepositoryAccess.FieldValueCollection,Laserfiche.RepositoryAccess.FieldValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.IsModified">
            <summary>
            Gets a value indicating whether this instance is modified.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.CalculateDiff(System.Boolean,System.Boolean)">
            <summary>
            Calculates the diff.
            </summary>
            <param name="hasSameTemplate">If set to <c>true</c> has same template.</param>
            <param name="keepOldFieldValues">if set to <c>true</c> [keep old field values].</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.RemovedToXml(System.Xml.XmlWriter)">
            <summary>
            Converts the removed field values to XML.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.AreFieldValuesEqual(System.Object,System.Object)">
            <summary>
            Determines if the two field values are equal.
            </summary>
            <param name="value1">The 1st value.</param>
            <param name="value2">The 2nd value.</param>
            <returns>True if the two field values are equal.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.ValueEquals(System.Object,System.Object)">
            <summary>
            Equality check for two object values that unboxes values for SCR 152081.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.CompareDataField(Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry,Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry)">
            <summary>
            Compares the data field.
            </summary>
            <param name="left">The left hand value.</param>
            <param name="right">The right hand value.</param>
            <returns>The comparison of the field value entry names.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.DiffedFieldValueCollection.IsNotIndependent(Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry)">
            <summary>
            Determines whether the field is not indepenent.
            </summary>
            <param name="fieldValueEntry">The field value entry.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry">
            <summary>
            An entry in the field value class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry"/> class.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.IsIndependent">
            <summary>
            Gets or sets a value indicating whether this field belongs to a template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.Name">
            <summary>
            Gets or sets the field name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.FieldType">
            <summary>
            Gets or sets the type of the field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.Index">
            <summary>
            Gets or sets the index of the field value in the 
            field value list.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.FieldValue">
            <summary>
            Gets or sets the field value.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.GroupId">
            <summary>
            Gets or sets the groupid if it is a template member
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.LocalFlags">
            <summary>
            Gets or sets the local flags if it is a template member
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.RowNums">
            <summary>
            Gets or sets the row number for a multivalue field
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldValueCollection.FieldValueEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Folder">
            <summary>
            Collection of static methods for managing folders in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new folder in a Laserfiche repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the new folder.</param>
            <param name="name">The name of the new folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify the options used to control the name of the new folder.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.Create(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new folder in a Laserfiche repository.
            </summary>
            <param name="folderPath">The full path to the new folder in the destination
            repository.</param>
            <param name="volumeName">The name of the volume to set as the default volume
            for the new folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify the options used to control the name of the new folder.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.CreateRecordSeries(Laserfiche.RepositoryAccess.FolderInfo,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new record series in a Laserfiche repository.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance which represents
            the parent folder of the new record series.</param>
            <param name="name">The name of the new record series.</param>
            <param name="code">The series code of the new record series.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify the options used to control the name of the new record
            series.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new record series.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.CreateRecordSeries(System.String,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new record series in a Laserfiche repository.
            </summary>
            <param name="recordSeriesPath">The path in the repository to the new
            record series.</param>
            <param name="code">The series code of the new record series.</param>
            <param name="volumeName">The name of the volume to use as the default
            volume for the new record series.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify the options used to control the name of the new folder.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new record series.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetRootFolder(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a new <c>FolderInfo</c> instance which represents the root folder
            in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>FolderInfo</c> instance which represents the root folder
            in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetFolderInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a folder in a Laserfiche repository.  Does not
            work for record series.
            </summary>
            <param name="entryId">The entry ID of the folder to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderInfo</c> instance which represents the specified folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetFolderInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a folder in a Laserfiche repository.  Does not
            work for record series.
            </summary>
            <param name="path">The path to the folder in the repository.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderInfo</c> instance which represents the specified folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetFolderInfo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a folder in a Laserfiche repository.  Does not
            work for record series.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder of the folder to retrieve information about.</param>
            <param name="childName">The name of the folder to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderInfo</c> instance which represents the specified folder.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetRecordSeriesInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a new <c>RecordSeriesInfo</c> instance which represents the
            record series with the specified entry ID.
            </summary>
            <param name="entryId">The entry ID of the record series to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>RecordSeriesInfo</c> instance which represents the
            record series with the specified entry ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetRecordSeriesInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a new <c>RecordSeriesInfo</c> instance which represents the
            record series with the specified entry ID.
            </summary>
            <param name="path">The path in the repository to the record series to
            return information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>RecordSeriesInfo</c> instance which represents the
            record series with the specified entry ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetStatistics(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns statistics about the specified Laserfiche folder, including information
            about all descendents.
            </summary>
            <param name="entryId">The entry ID the folder to return statistics for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics
            for the specified folder in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetStatistics(System.Int32,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns statistics about the specified Laserfiche folder using the specified
            entry depth.
            </summary>
            <param name="entryId">The entry ID the folder to return statistics for.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration indicating
            what entries under the folder to include in the statistics.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics
            for the specified folder in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetStatistics(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns statistics about the specified Laserfiche folder, including information
            about all descendents..
            </summary>
            <param name="path">The path in the Laserfiche repository to the folder to
            return statistics for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics
            for the specified folder in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Folder.GetStatistics(System.String,Laserfiche.RepositoryAccess.EntryDepth,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns statistics about the specified Laserfiche folder using the specified
            entry depth.
            </summary>
            <param name="path">The path in the Laserfiche repository to the folder to
            return statistics for.</param>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration indicating
            what entries under the folder to include in the statistics.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics
            for the specified folder in Laserfiche.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FolderInfo">
            <summary>
            Represents a folder (standard or record folder) in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderInfo.IsRecordFolder">
            <summary>
            Gets whether or not the folder that this instance represents is known
            to be a record folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderInfo.IsUnderRecordSeries">
            <summary>
            Gets whether or not the folder that this instance represents is known
            to directly or indirectly under a record series in the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderInfo.FilterExpression">
            <summary>
            Gets or sets a folder filter expression for the represented folder.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderInfo.InheritFilter">
            <summary>
            Gets or sets a boolean indicating whether the folder filter expression
            should be inherited from its parent.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderInfo.AutoVersionChildren">
            <summary>
            Gets or sets a boolean that indicates if the server will automatically put all
            child documents of the folder under version control.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>FolderInfo</c> instance representing a new Laserfiche folder.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new folder in Laserfiche using the settings specified by this
            <c>FolderInfo</c> instance.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance which represents the parent
            folder to use for the new folder.</param>
            <param name="name">The name of the new folder in the Laserfiche repository.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify options used to control the naming of the new folder.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new folder in Laserfiche using the settings specified by this
            <c>FolderInfo</c> instance.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance which represents the parent
            folder to use for the new folder.</param>
            <param name="name">The name of the new folder in the Laserfiche repository.</param>
            <param name="volumeName">The name of the volume to use as the default volume
            for the new folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify options used to control the naming of the new folder.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.Create(System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new folder in Laserfiche using the settings specified by this
            <c>FolderInfo</c> instance.
            </summary>
            <param name="path">The path in the current repository to the new folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify options used to control the naming of the new folder.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.Create(System.String,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new folder in Laserfiche using the settings specified by this
            <c>FolderInfo</c> instance.
            </summary>
            <param name="path">The path in the current repository to the new folder.</param>
            <param name="volumeName">The name of the volume to use as the default volume
            for the new folder.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which specify options used to control the naming of the new folder.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.OpenFolderListing(Laserfiche.RepositoryAccess.EntryListingSettings)">
            <summary>
            Opens a folder listing for the Laserfiche folder that this instance represents.
            </summary>
            <param name="settings">A <c>EntryListingSettings</c> instance which represents
            the settings to use for the folder listing.</param>
            <returns>A new <c>FolderListing</c> instance which represents an entry listing
            of the contents of the folder that this instance represents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.OpenFolderListing(Laserfiche.RepositoryAccess.EntryListingSettings,System.Int32)">
            <summary>
            Opens a folder listing for the Laserfiche folder that this instance represents.
            </summary>
            <param name="settings">A <c>EntryListingSettings</c> instance which represents
            the settings to use for the folder listing.</param>
            <param name="preload">The number of rows to be preloaded when creating a folder
            listing.</param>
            <returns>A new <c>FolderListing</c> instance which represents an entry listing
            of the contents of the folder that this instance represents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.GetStatistics">
            <summary>
            Returns a <c>FolderStatistics</c> instance which represents the statistics for
            the folder that this instance represents, gathering data for all descendent entries.
            </summary>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics for
            the folder that this instance represents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.GetStatistics(Laserfiche.RepositoryAccess.EntryDepth)">
            <summary>
            Returns a <c>FolderStatistics</c> instance which represents the statistics for
            the folder that this instance represents.
            </summary>
            <param name="depth">A member of the <c>EntryDepth</c> enumeration indicating
            how far to recurse down the folder tree when gathering statistics.</param>
            <returns>A <c>FolderStatistics</c> instance which represents the statistics for
            the folder that this instance represents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.SetRecordFolder">
            <summary>
            Set the folder as a record folder. The operation will occur immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.UnsetRecordFolder">
            <summary>
            Unset the folder as a record folder. The operation will occur immediately.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.GetRFProperties">
            <summary>
            Returns a <c>RecordFolderProperties</c> instance which represents the properties
            that are specific to record folders for this instance.  Only works if the
            <c>IsRecordFolder</c> property returns true.
            </summary>
            <returns>A <c>RecordFolderProperties</c> instance which represents the properties
            that are specific to record folders for this instance.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.CalculateProjectedLocation(System.DateTime)">
            <summary>
            Calculates the records management location that the represented record folder will
            be at on the specified date, if all transfer operations and records management
            dispositions are confirmed on their eligibility dates.
            </summary>
            <param name="date">A <c>DateTime</c> value which specifies the date to calculate
            the projected location of the represented record folder on.</param>
            <returns>The records management location that the represented record folder will
            be at on the specified date.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.ConfirmTransferForRecords(System.Int32)">
            <summary>
            Confirms transfer for all records in the represented record folder that are
            eligible for transfer, using the specified transfer ID.
            </summary>
            <param name="transferId">The ID of the records management transfer to confirm.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.CalculateCutoffEligibility(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.DateTime}})">
            <summary>
            Calculates the cutoff eligibility for the specified folder given a set of
            event dates.
            </summary>
            <param name="eventDates">A collection of event IDs and their corresponding
            event dates to use as the basis for the cutoff eligibility calculation.</param>
            <returns>A <c>DateTime</c> value representing the cutoff eligibility calculated
            given the specified event IDs and dates.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FolderInfo.GetNameSuggestionForChild(System.String)">
            <summary>
            Get a suggestion name of an entry can be created under the folder that this instance represents.
            </summary>
            <param name="name">A <c>String</c> instance which represents an entry name you may want to create
            under the folder.</param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FolderListing">
            <summary>
            Represents a type of entry listing which represents the contents of a folder in
            a Laserfiche repository, i.e., a folder listing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FolderListing.Folder">
            <summary>
            Gets a <c>FolderInfo</c> instance which represents the folder whose contents
            will appear in the folder listing this instance represents.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.HighlightAnnotation">
            <summary>
            Represents a Laserfiche highlight annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.HighlightAnnotation.#ctor">
            <summary>
            Initializes a <c>HighlightAnnotation</c> instance representing a new
            highlight annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.HighlightAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>HighlightAnnotation</c> object representing a new highlight
            annotation on the specific page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LFUtil">
            <summary>
            A collection of constants that denote various system limits of Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LineAnnotation">
            <summary>
            Represents a Laserfiche line segment annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.BeginPosition">
            <summary>
            The position of the beginning of the line segment on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.EndPosition">
            <summary>
            The position of the ending of the line segment on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.BeginStyle">
            <summary>
            The style of the end cap at the beginning of the line segment.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.EndStyle">
            <summary>
            The style of the end cap at the end of the line segment.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.Style">
            <summary>
            The line drawing style of the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.Color">
            <summary>
            The line color.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.EndColor">
            <summary>
            The color of the end caps, if present.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.Thickness">
            <summary>
            The line thickness.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LineAnnotation.Opacity">
            <summary>
            The opacity of the line annotation, from 0 (fully transparent) to 100 (fully opaque).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LineAnnotation.#ctor">
            <summary>
            Initializes a <c>LineAnnotation</c> instance representing a new line annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LineAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>LineAnnotation</c> object which represents a new line
            annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ColumnDefinition">
            <summary>
            Represents an entry listing column definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.Name">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.Format">
            <summary>
            Gets the preferred template field format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.FieldType">
            <summary>
            Gets the type of the corresponding template field.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.FormatPattern">
            <summary>
            Gets the template field's custom format pattern.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.Currency">
            <summary>
            Gets the template field's currency code, applicable when a
            currency format is used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ColumnDefinition.IsMultiValued">
            <summary>
            Gets a boolean indicating if the column may have multiple values.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ColumnValue">
            <summary>
            Represents a single value in an entry listing column (a cell).
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryListReader">
            <summary>
            Reads binary entry list data sent from the server.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.OperationType">
            <summary>
            An enumeration of Laserfiche background operations.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ILongOperation">
            <summary>
            Interface exposing information about Laserfiche long operations, also known
            as background tasks.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILongOperation.Id">
            <summary>
            Gets the unqiue identifier of the operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILongOperation.OperationBegan">
            <summary>
            Gets a <c>DateTime</c> value which represents when the long operation
            began running.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILongOperation.ElapsedTime">
            <summary>
            Gets a <c>TimeSpan</c> value which represents the elapsed time of the
            long operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILongOperation.PercentComplete">
            <summary>
            Gets the current percent complete for the long operation this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ILongOperation.IsCompleted">
            <summary>
            Gets a boolean indicating if the long operation has completed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ILongOperation.Refresh">
            <summary>
            Refreshes the status of the long operation
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LongOperation">
            <summary>
            Represents a long operation in Laserfiche which can run in the background, along
            with the result of the operation when it completes.  Long operations can have
            their current status queried and can be canceled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.Id">
            <summary>
            Gets the ID of the represented long operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.OperationBegan">
            <summary>
            Gets a <c>DateTime</c> value which represents when the long operation
            began running.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.ElapsedTime">
            <summary>
            Gets a <c>TimeSpan</c> value which represents the elapsed time of the
            long operation.  Only valid for completed operations.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.PercentComplete">
            <summary>
            Gets the current percent complete for the long operation this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.TotalSteps">
            <summary>
            Gets the total estimated number of steps for the operation
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.StepsCompleted">
            <summary>
            Gets the total number of steps completed for the operation
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.ErrorCode">
            <summary>
            Gets the Laserfiche error code that was set by the long operation after it
            completed.  Only valid for completed operations.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.IsCanceled">
            <summary>
            Gets a boolean indicating whether the long operation was canceled, or found
            to be already closed when a cancel request was sent.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.IsCanceling">
            <summary>
            Gets a boolean indicating whether a successful long operation cancel request was
            sent by the user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.IsCompleted">
            <summary>
            Gets a boolean indicating if the long operation has completed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.IsOpen">
            <summary>
            Gets a boolean indicating whether or not this instance represents a valid
            long operation.  True indicates a valid long operation, and false indicates
            that the long operation has been closed and is no longer queryable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.Type">
            <summary>
            Gets a member of the <c>OperationType</c> enumeration which indicates the
            type of operation this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.Session">
            <summary>
            Gets a <c>SessionInfo</c> instance which describes some information about
            the session that launched the represented operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.LogFileName">
            <summary>
            Gets the name of the log file associated with the represented operation,
            if one exists.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.HasLog">
            <summary>
            Gets a boolean which indicates if the represented operation has an associated
            server-side log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.WarningCount">
            <summary>
            Gets a count of the number of warnings logged when executing the represented
            operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LongOperation.Uuid">
            <summary>
            Gets the UUID that Laserfiche uses to identify the represented operation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LongOperation.Get(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Gets a LongOperation instance which represents the long operation with the
            specified ID.
            </summary>
            <param name="uuid">The ID of the long operation to retrieve information for.</param>
            <param name="session">The Laserfiche session.</param>
            <returns>A LongOperation instance which represents the long operation with the
            specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LongOperation.GetLogFile">
            <summary>
            Returns a <c>Stream</c> instance representing the contents of the log file
            associated with the long operation, or null if there is no log file.
            </summary>
            <returns>A <c>Stream</c> instance representing the contents of the log file
            associated with the long operation, or null if there is no log file.</returns>
            <remarks>
            The log file should be entirely consumed and closed before issuing any
            further requests to Laserfiche.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LongOperation.Cancel">
            <summary>
            Sends a request to cancel the long operation that this instance represents,
            if it is still running.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LongOperation.Close">
            <summary>
            Closes the long operation that this instance represents.  The long operation
            cannot be canceled or have its status queried after it is closed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LongOperation.Refresh">
            <summary>
            Refreshes the status of the long operation by querying Laserfiche for the
            current status and updating the data in this instance.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.NoteHistoryRecord">
            <summary>
            Represents a single record of a sticky note annotation modification,
            for note annotations that have history tracking enabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteHistoryRecord.Text">
            <summary>
            Gets the text of the note.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteHistoryRecord.User">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance representing the security
            identifier (SID) of the user that was responsible for the represented
            change.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteHistoryRecord.UserName">
            <summary>
            Gets the name of the user that was responsible for the represented change.
            If <c>null</c>, the name is unavailable and the caller must look up the
            user name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteHistoryRecord.ModificationDate">
            <summary>
            Gets the time and date of the modification.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.NoteAnnotation">
            <summary>
            Represents a sticky note annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteAnnotation.Position">
            <summary>
            The position of the sticky note on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteAnnotation.Color">
            <summary>
            The color of the sticky note icon.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteAnnotation.Text">
            <summary>
            The text of the sticky note.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.NoteAnnotation.KeepHistory">
            <summary>
            Whether or not to keep a history of all text edits to the sticky note.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoteAnnotation.#ctor">
            <summary>
            Initializes a <c>NoteAnnotation</c> instance representing a new
            sticky note annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoteAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>NoteAnnotation</c> object which represents a new sitcky
            note annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoteAnnotation.GetHistory">
            <summary>
            Returns a record of all edits to the text of the sticky note since history
            tracking was enabled.
            </summary>
            <returns>A list of sticky note edit records.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageRotation">
            <summary>
            An enumeration of possible page rotation states.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRotation.None">
            <summary>
            No page rotation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRotation.UpsideDown">
            <summary>
            Page image rotated 180 degrees; flipped upside down.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRotation.Counterclockwise">
            <summary>
            Page image rotated 90 degrees counter-clockwise; 270 degrees clockwise.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRotation.Clockwise">
            <summary>
            Page image rotated 90 degrees clockwise; 270 degrees counter-clockwise.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageInfo">
            <summary>
            Represents a page in a document stored in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.EntryId">
            <summary>
            Gets the entry ID of the containing document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.Version">
            <summary>
            Gets the version number of the containing document that the represented
            page belongs to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.IsReadOnly">
            <summary>
            Gets a boolean indicating if the page is part of an archived document version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.HasImage">
            <summary>
            Gets a boolean indicating if the represented page has an image part.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.HasText">
            <summary>
            Gets a boolean indicating if the represented page has a text part.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.HasThumbnail">
            <summary>
            Gets a boolean indicating if the represented page has a pre-generated
            image thumbnail part.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.HasWordLocations">
            <summary>
            Gets a boolean indicating if the represented page has OCR word locations
            data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageRotationAngle">
            <summary>
            Gets or set the image rotation angle, in degrees, interpreted as a clockwise
            rotation.  Must be one of: 0, 90, 180, 270.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.Flags">
            <summary>
            Gets the flags for the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.Language">
            <summary>
            Gets or sets the RFC 4646 compliant language code indicating the natural
            language the represented page's text is composed in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageFilePath">
            <summary>
            Gets the path to the image file for the represented page in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageDepth">
            <summary>
            Gets the pixel depth in bits per pixel for the image associated with
            the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageDataSize">
            <summary>
            Gets the size of the image file, in bytes, associated with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageHeight">
            <summary>
            Gets the height of the image, in pixels, associated with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageRotation">
            <summary>
            Gets or sets the rotation amount for the image associated with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageWidth">
            <summary>
            Gets the width of the image, in pixels, associated with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageXResolution">
            <summary>
            Gets the horizontal resolution of the image, in pixels/dots per inch, associated
            with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageYResolution">
            <summary>
            Gets the vertical resolution of the image, in pixels/dots per inch, associated
            with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ImageETag">
            <summary>
            Gets the image's ETag, which changes whenever the image is modified.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.LocationsDataSize">
            <summary>
            Gets the size of the OCR locations data stream associated with the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.LocationFilePath">
            <summary>
            Gets the path to the data file for the OCR word locations data associated with the
            represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.PageId">
            <summary>
            Gets the repository unique page ID for the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.PageNumber">
            <summary>
            Gets the page number in the current document for the represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.TextDataSize">
            <summary>
            Gets the size of the data file, in bytes, that contains the text for the
            represented page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.TextFilePath">
            <summary>
            Gets the path to the data file that contains the text for the represented
            page in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageInfo.ThumbnailDataSize">
            <summary>
            Gets the size of the data stream containing the image thumbnail for the
            represented page.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.Delete">
            <summary>
            Marks the represented page for deletion.  The page will be deleted from the
            document when pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.GetAnnotation(System.Int32)">
            <summary>
            Returns information about an annotation on the represented page with the
            specified annotation item ID.
            </summary>
            <param name="itemId">The item ID of the annotation to return information
            about.</param>
            <returns>A new <c>AnnotationBase</c> derived type instance which represents
            the specified annotation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.GetAnnotations">
            <summary>
            Returns information about all of the annotations on the represented page.
            </summary>
            <returns>A collection of <c>AnnotationBase</c> derived type instances
            which represented the annotations on the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadLocationsPagePart">
            <summary>
            Returns a <c>WordLocationsReader</c> instance which can be used to read the
            represented page's OCR word locations data.
            </summary>
            <returns>A <c>WordLocationsReader</c> instance which can be used to read the
            represented page's OCR word locations data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadLocationsPagePartAsBytes">
            <summary>
            Returns a byte array containing the OCR word locations data for the represented
            page.
            </summary>
            <returns>A byte array containing the OCR word locations data for the represented
            page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadTextPagePart">
            <summary>
            Returns a <c>StreamReader</c> instance which can be used to read the text
            content of the represented page.
            </summary>
            <returns>A <c>StreamReader</c> instance which can be used to read the text
            content of the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadTextPagePartAsWords">
            <summary>
            Returns a <c>WordsReader</c> instance which can be used to read the text
            contents of the represent page as a sequence of words corresponding to the
            OCR locations data rectangles.
            </summary>
            <returns>A <c>WordsReader</c> instance which can be used to read the text
            contents of the represent page as a sequence of words</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadPagePartAsString">
            <summary>
            Returns a string containing the text content of the represented page.
            </summary>
            <returns>A string containing the text content of the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadThumbnailPagePart">
            <summary>
            Returns a <c>Thumbnail</c> instance which represents the image thumbnail
            associated with the represented page.
            </summary>
            <returns>A <c>Thumbnail</c> instance which represents the image thumbnail
            associated with the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadPagePart(Laserfiche.RepositoryAccess.PagePart)">
            <summary>
            Returns a <c>LaserficheReadStream</c> instance which can be used to read the raw data
            stream for the specified page part of the represented page.
            </summary>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the raw data
            for the specified page part for the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ReadPagePartRange(Laserfiche.RepositoryAccess.PagePart,Laserfiche.RepositoryAccess.StreamRange)">
            <summary>
            Returns a <c>LaserficheReadStream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the represented page.
            </summary>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration which
            specifies which page part to read.</param>
            <param name="byteRange">A <c>StreamRange</c> value which specifies which
            range of bytes in the raw data stream to read.</param>
            <returns>A <c>LaserficheReadStream</c> instance which can be used to read the specified
            byte range of the raw data stream for the specified page part part of
            the represented page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WriteTextPagePart">
            <summary>
            Returns a <c>TextWriter</c> instance which can be used to write data to
            the text part of the represented document page.
            </summary>
            <returns>A <c>TextWriter</c> instance which can be used to write data to
            the text part of the represented document page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WriteTextPagePart(System.String)">
            <summary>
            Writes a string to the text contents of the represented document page.  The
            existing text contents, if any, are first deleted.
            </summary>
            <param name="text">The new text of the represented document page.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WriteTextPagePart(System.Char[])">
            <summary>
            Writes a character array to the text contents of the represented document
            page.  The existing text contents, if any, are first deleted.
            </summary>
            <param name="text">A character array which representes the new text
            of the represented document page.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WriteTextPagePart(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the selection portion of a character array to the text contents of the
            represented document page.  The existing text contents, if any, are first deleted.
            </summary>
            <param name="text">A character array where the specified portion representes the
            new text of the represented document page.</param>
            <param name="index">The starting index of the character array to write.</param>
            <param name="count">The number of elements from the character array to write.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WritePagePart(Laserfiche.RepositoryAccess.PagePart,System.Int32)">
            <summary>
            Returns a <c>Stream</c> instance which can be used to write raw data to the
            specified part of the represented document page.
            </summary>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration to write
            raw data to.</param>
            <param name="size">The total length in bytes of data that will
            be written to the page.</param>
            <returns>A <c>Stream</c> instance which can be used to write raw data to the
            specified part of the represented document page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.WriteLocationsPagePart(System.Int32)">
            <summary>
            Returns a <c>WordLocationsWriter</c> which can be used to write word location
            rectangles to the OCR locations data stream for the represented document
            page.
            <param name="size">The total length in bytes of data that will
            be written to the page.</param>
            </summary>
            <returns>A <c>WordLocationsWriter</c> which can be used to write word location
            rectangles to the OCR locations data stream for the represented document
            page.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.ClearPagePart(Laserfiche.RepositoryAccess.PagePart)">
            <summary>
            Deletes the specified page part from the represented document page.
            </summary>
            <param name="pagePart">A member of the <c>PagePart</c> enumeration that
            specifies the page part to clear.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.AddAnnotation(Laserfiche.RepositoryAccess.AnnotationBase)">
            <summary>
            Adds a new annotation to the represented page.
            </summary>
            <param name="annotation">An <c>AnnotationBase</c> derived class instance
            representing the annotation to add to the represented page.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.AddAnnotations(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AnnotationBase})">
            <summary>
            Adds a collection of annotations to the represented page.
            </summary>
            <param name="annotations">A collection of <c>AnnotationBase</c> derived class
            instances representing the annoations to add to the represented page.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageInfo.DeleteAnnotation(System.Int32)">
            <summary>
            Deletes the specified annotation on the represented page.
            </summary>
            <param name="itemId">The Item ID of the annotation to delete.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageInfoReader">
            <summary>
            Provides the ability to enumerate <c>PageInfo</c> instances
            representing Laserfiche document pages that match the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageRange">
            <summary>
            Represents a contiguous range of page numbers in a single document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRange.MIN_PAGE_NUMBER">
            <summary>
            The minimum valid page number.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.PageRange.MAX_PAGE_NUMBER">
            <summary>
            The maximum valid page number.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <c>PageRange</c> type.
            </summary>
            <param name="start">The inclusive starting page number.</param>
            <param name="end">The inclusive ending page number.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>PageRange</c> type from a string.
            </summary>
            <param name="rangeString">A string which specifies a single page or
            page range to initialize the new instance.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageRange.Start">
            <summary>
            Gets or sets the starting page number of the range.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageRange.End">
            <summary>
            Gets or sets the ending page number of the range.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.ContainsPage(System.Int32)">
            <summary>
            Determines if the specified page number is inside the current range.
            </summary>
            <param name="pageNumber">The page number to check.</param>
            <returns>True if <paramref name="pageNumber"/> is inside the range;
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.ContainsRange(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Determines if the specified range is inside the current range.
            </summary>
            <param name="pageRange">The range to check for inclusiveness.</param>
            <returns>True if <paramref name="pageRange"/> is contained entirely in this range;
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.Equals(Laserfiche.RepositoryAccess.PageRange,Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Determines if two <c>PageRange</c> values are equal.
            </summary>
            <param name="range1">The first <c>PageRange</c> to compare.</param>
            <param name="range2">The second <c>PageRange</c> to compare.</param>
            <returns>True if both arguments are equal; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.Equals(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Determines if the range represented by this value is equal to
            another <c>PageRange</c>.
            </summary>
            <param name="value">The <c>PageRange</c> value to check for equality.</param>
            <returns>True if this value is equal to the argument; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageRange.Equals(System.Object)">
            <summary>
            Determines if an object reference is a <c>PageRange</c> value that is equal
            to this instance's value.
            </summary>
            <param name="obj">The object to test for value equality.</param>
            <returns>True if the object is a <c>PageRange</c> value equal to this instance;
            false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageSet">
            <summary>
            Represents a potentially non-contiguous set of page numbers in a single document.
            </summary>
            <remarks>
            The <c>PageSet</c> class can logically be considered a minimal list of
            non-overlapping <c>PageRange</c> values.  Consumers of <c>PageSet</c> can
            add and remove individual page numbers or ranges from an instance, and
            the class takes care of maintaining a minimal covering of the set by a
            list of <c>PageRange</c> values.  For example, if a consumer wants to
            represent the set of pages 1-10 they can add the even pages followed by
            the odd pages; pages 1-5 followed by 6-10; or pages 1-10 in one call.
            The end result will be the same: a single range of pages 1-10.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.PageSet.RangeCount">
            <summary>
            Gets the number of distinct page ranges in this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.#ctor">
            <summary>
            Initializes a new instance of <c>PageSet</c> with no pages.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.#ctor(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Initializes a new instance of <c>PageSet</c> from a single <c>PageRange</c>
            value.
            </summary>
            <param name="range">The range of pages that the <c>PageSet</c> should
            contain.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.#ctor(System.String)">
            <summary>
            Initializes a new instance of <c>PageSet</c> from a string specification
            of page ranges.
            </summary>
            <param name="rangesString">A string specification of page ranges.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.#ctor(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.PageRange})">
            <summary>
            Initializes a new instance of <c>PageSet</c> from a collection of
            <c>PageRange</c> values.
            </summary>
            <param name="enumerator">The enumerator to read <c>PageRange</c> values from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of <c>PageSet</c> from a collection of page numbers.
            </summary>
            <param name="pageNumberEnum">A collection of page numbers to initialize
            the new <c>PageSet</c> instance from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.AddPage(System.Int32)">
            <summary>
            Adds a page number to the set of page numbers maintained by this instance.
            </summary>
            <param name="pageNumber">The page number to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.AddRange(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Adds a range of page numbers to the set of page numbers maintained by this instance.
            </summary>
            <param name="pageRange">The range of pages to add.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.Clear">
            <summary>
            Removes all pages from this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.RemovePage(System.Int32)">
            <summary>
            Removes a single page number from the set.
            </summary>
            <param name="pageNumber">The page number to remove.</param>
            <returns>True if any page was removed from the set; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.RemoveRange(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Removes a range of page numbers from the set.
            </summary>
            <param name="pageRange">The range of page numbers to remove.</param>
            <returns>True if any page was removed from the set; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.ContainsPage(System.Int32)">
            <summary>
            Determines if a page number is in the set.
            </summary>
            <param name="pageNumber">The page number to check for membership.</param>
            <returns>True if this instance contains the given page number;
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.ContainsRange(Laserfiche.RepositoryAccess.PageRange)">
            <summary>
            Determines if a range of pages is covered by the set.
            </summary>
            <param name="pageRange">The range of pages to check.</param>
            <returns>True if this instance covers the range of pages specified by
            <paramref name="pageRange"/>; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.IsSubsetOf(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Determines if this instance is a subset of a <c>PageSet</c> instance.
            </summary>
            <param name="pgset">The <c>PageSet</c> instance to check.</param>
            <returns>True if this instance represents a subset of the set represented by
            <paramref name="pgset"/>; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.IsSupersetOf(Laserfiche.RepositoryAccess.PageSet)">
            <summary>
            Determines if this instance is a superset of a <c>PageSet</c> instance.
            </summary>
            <param name="pgset">The <c>PageSet</c> instance to check.</param>
            <returns>True if this instance represents a superset of the set represented by
            <paramref name="pgset"/>; false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.GetTotalPageCount">
            <summary>
            Calculates the total number of pages covered by this instance.
            </summary>
            <returns>The number of pages covered by the set of page numbers
            represented by this instance.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PageSet.GetEnumerator">
            <summary>
            Returns an enumerator over the stored page ranges in the set.
            </summary>
            <returns>An enumerator over the stored page ranges in the set.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PageSet.Enumerator">
            <summary>
            A <c>PageRange</c> enumerator for <c>PageSet</c>.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.EntryPath">
            <summary>
            Represents a path to an entry in a Laserfiche repository.  This class also
            provides a variety of utility methods for manipulating entry path strings.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.Normalize(System.String)">
            <summary>
            Takes a valid relative or absolute Laserfiche entry path and returns
            its normalized form.  Normalization entails removing redundant path
            separator characters (i.e., the backslash) path components with names
            '.' and '..', which refer to the current and parent folder, respectively.
            </summary>
            <param name="path">The valid Laserfiche entry path to normalize.</param>
            <returns>The normalized version of the input path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.Split(System.String,System.String@,System.String@)">
            <summary>
            Splits a valid Laserfiche entry path into a path to the parent folder and
            an entry name portion.  The root folder has a parent of '\' and an empty name.
            This method works best on normalized paths.
            </summary>
            <param name="path">A valid Laserfiche entry path to split into a folder path
            and an entry name portion.</param>
            <param name="folderPath">On return, a reference to the parent folder path.</param>
            <param name="entryName">On return, the name of the entry without the folder path.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.GetFolderPath(System.String)">
            <summary>
            Returns the path to the parent folder of the input path.
            </summary>
            <param name="path">The path to return the parent folder path portion of.</param>
            <returns>The path to the parent folder of the input path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.GetEntryName(System.String)">
            <summary>
            Returns the entry name component (i.e., the last component) of the input path.
            </summary>
            <param name="path">The path to return the last component of.</param>
            <returns>The entry name component (i.e., the last component) of the input
            path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.Make(System.String,System.String)">
            <summary>
            Returns the combined Laserfiche entry path of the two arguments by taking the
            <paramref name="folderPath"/> argument as the base folder path and the
            <paramref name="relPath"/> argument as the child entry name.
            </summary>
            <param name="folderPath">The base path of the returned path.</param>
            <param name="relPath">The name of the child entry.</param>
            <returns>The path that is the combined path using the specified folder base
            path and relative path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.Merge(System.String,System.String)">
            <summary>
            Returns the combined Laserfiche entry path of the two arguments by taking the
            <paramref name="folderPath"/> argument as the base folder path and the
            <paramref name="relPath"/> argument as the relative path.
            </summary>
            <param name="folderPath">The base path of the returned path.</param>
            <param name="relPath">The path relative to the base path to build the returned
            path.</param>
            <returns>The path that is the combined path using the specified folder base
            path and relative path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.IsAbsolute(System.String)">
            <summary>
            Determines if the specified Laserfiche entry path is absolute.
            </summary>
            <param name="path">A Laserfiche entry path to check the form of.</param>
            <returns>True if the specified Laserfiche entry path is absolute,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.AreEquivalent(System.String,System.String)">
            <summary>
            Determines if two Laserfiche entry path strings are equivalent to each other,
            in that they refer to the same entry if they are absolute or the same entry
            relative to an arbitrary base path if they are relative.
            </summary>
            <param name="path1">The first path string to check for equivalence.</param>
            <param name="path2">The second path string to check for equivalence.</param>
            <returns>True if the specified Laserfiche entry path strings are
            equivalent, false otherwise.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryPath.Absolute">
            <summary>
            Gets a boolean indicating if the represented Laserfiche entry path is
            an absolute path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryPath.FullPath">
            <summary>
            Gets a string representation of the represented Laserfiche entry path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryPath.BasePath">
            <summary>
            Gets a string representation of the base path portion of the represented
            Laserfiche entry path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.EntryPath.EntryName">
            <summary>
            Gets a string representation of the entry name portion of the represented
            Laserfiche entry path.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.#ctor">
            <summary>
            Initializes a <c>RepositoryPath</c> instance which represents the path to the root
            folder.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.#ctor(System.String)">
            <summary>
            Initializes a <c>RepositoryPath</c> instance from the specified path in string form.
            </summary>
            <param name="strPath">The string representation of the Laserfiche entry path
            that this instance shall represent.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.#ctor(Laserfiche.RepositoryAccess.EntryPath)">
            <summary>
            Initializes a new <c>RepositoryPath</c> instance from an existing instance
            by cloning it.
            </summary>
            <param name="otherPath">The existing <c>RepositoryPath</c> instance to
            clone.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.ToUriString">
            <summary>
            Returns a URI representation of the represented Laserfiche entry path.
            </summary>
            <returns>A URI representation of the represented Laserfiche entry path.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.op_Equality(Laserfiche.RepositoryAccess.EntryPath,Laserfiche.RepositoryAccess.EntryPath)">
            <summary>
            Determines if two <c>RepositoryPath</c> instances are equivalent.
            </summary>
            <param name="p1">The first <c>RepositoryPath</c> instance to check.</param>
            <param name="p2">The second <c>RepositoryPath</c> instance to check.</param>
            <returns>True if the arguments represent equivalent paths, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.op_Inequality(Laserfiche.RepositoryAccess.EntryPath,Laserfiche.RepositoryAccess.EntryPath)">
            <summary>
            Determines if two <c>RepositoryPath</c> instances are not equivalent.
            </summary>
            <param name="p1">The first <c>RepositoryPath</c> instance to check.</param>
            <param name="p2">The second <c>RepositoryPath</c> instance to check.</param>
            <returns>True if the arguments represent paths which are not equivalent, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.EntryPath.EquivalentTo(System.String)">
            <summary>
            Determines if the path represented by this instance is equivalent to the path
            represented by the <paramref name="strPath"/> argument.
            </summary>
            <param name="strPath">The string representation of the Laserfiche entry path
            to check for equivalence.</param>
            <returns>True if the represented path and the argument are equivalent paths,
            false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.PolylineAnnotation">
            <summary>
            Represents a multiple line segment annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PolylineAnnotation.#ctor">
            <summary>
            Initializes a <c>PolylineAnnotation</c> instance representing a new
            multiple line segment annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.PolylineAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>PolylineAnnotation</c> object which represents a new
            multiple line segment annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RectangleAnnotation">
            <summary>
            Represents a graphic shape annotation bounded by a rectangular area
            in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.Coordinates">
            <summary>
            The size and position of the upper-left corner of the graphics object
            on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.FillColor">
            <summary>
            The interior color of the annotation's shape.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.Style">
            <summary>
            The geometric shape of the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.BorderStyle">
            <summary>
            The line drawing style of the annotation's border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.BorderColor">
            <summary>
            The color of the annotation's border line.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.BorderThickness">
            <summary>
            The thickness of the annotation's border line.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RectangleAnnotation.Opacity">
            <summary>
            The opacity of the annotation, from 0 (totally transparent) to
            100 (totally opaque).
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RectangleAnnotation.#ctor">
            <summary>
            Initializes a <c>RectangleAnnotation</c> instance representing a new
            rectangle annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RectangleAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>RectangleAnnotation</c> object which represents a new
            rectangular bound graphical shape annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RedactionAnnotation">
            <summary>
            Represents a redaction annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RedactionAnnotation.IsWhiteout">
            <summary>
            Indicates if the redaction is a blackout or a whiteout of the underlying data.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RedactionAnnotation.#ctor">
            <summary>
            Initializes a <c>RedactionAnnotation</c> instance representing a new
            redaction annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RedactionAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>RedactionAnnotation</c> object which represents a new
            redaction annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DriveType">
            <summary>
            An enumeration of disk drive types which can back a Windows volume.
            </summary>
            <remarks>
            The enumeration's members correspond to the return values of the GetDriveType
            Windows API function.
            </remarks>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.Unknown">
            <summary>
            The drive type is unknown.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.Removable">
            <summary>
            The drive type is a removable disk, such as a floppy disk or removable USB drive.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.Fixed">
            <summary>
            The drive type is a fixed disk, such as a hard drive.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.Remote">
            <summary>
            The drive is a network share.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.CDRom">
            <summary>
            The drive type is an optical media drive, such as a CD-ROM drive.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.RamDisk">
            <summary>
            The drive type is a volatile RAM disk.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DriveType.All">
            <summary>
            A combination of all recognized drive types.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.CatalogStatus">
            <summary>
            Enumeration of Laserfiche full-text search engine catalog status states.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CatalogStatus.Unknown">
            <summary>
            The current catalog status is unknown by the Laserfiche server.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CatalogStatus.NotExist">
            <summary>
            No full-text catalog corresponds to the repository.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CatalogStatus.Ready">
            <summary>
            The full-text catalog is attached and ready to receive index and search commands.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CatalogStatus.LFFTSOffline">
            <summary>
            The Laserfiche full-text search engine server (LFFTS) hosting the catalog is offline.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.CatalogStatus.Stopped">
            <summary>
            The full-text catalog is in the stopped state and LFFTS is not accepting search
            or indexing commands for it.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Repository">
            <summary>
            A collection of static methods for managing Laserfiche repositories.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.IsComplete">
            <summary>
            Gets a boolean indicating if all the properties in this instance
            have been retrieved from Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.RepositoryPath">
            <summary>
            Gets the configured repository path for the represented Laserfiche
            repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.AccessLogPath">
            <summary>
            Gets or sets the configured HTTP access log path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.AccessLogFormat">
            <summary>
            Gets or sets the configured HTTP access log format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.SqlDbmsType">
            <summary>
            Gets a member of the <c>SqlDbmsType</c> enumeration which specifies
            the type of DBMS backing the represented repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.Uuid">
            <summary>
            Gets the UUID of the represented repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.AuditLogDirectory">
            <summary>
            Gets the path to the audit log directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.AuditLogArchiveDirectory">
            <summary>
            Gets the path to the audit log archive directory.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.IsAutoMount">
            <summary>
            Gets a boolean indicating if the repository will be automatically
            mounted as necessary when it is referenced.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Repository.IsTlsPreferred">
            <summary>
            Gets a boolean indicating if clients should connect to the repository
            using connections secured with TLS/SSL.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.Save">
            <summary>
            Saves all pending property changes to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.Refresh">
            <summary>
            Retrieves the latest property values from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>Repository</c> instance from a logged in <c>Session</c> instance.
            </summary>
            <param name="session">A <c>Session</c> instance that has logged in to a Laserfiche
            repository</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.#ctor(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Initializes a <c>Repository</c> instance from a <c>RepositoryRegistration</c>
            instance.
            </summary>
            <param name="repositoryRegistration">A <c>RepositoryRegistration</c> instance
            specifying which repository to connect to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.#ctor(Laserfiche.RepositoryAccess.RepositoryRegistration,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a <c>Repository</c> instance from a <c>RepositoryRegistration</c>
            instance and a repository path.  Use this constructor to connect to Laserfiche
            Plus repositories.
            </summary>
            <param name="repositoryRegistration">A <c>RepositoryRegistration</c> instance
            specifying which repository to connect to.</param>
            <param name="repositoryPath">The path to the repository on the local
            machine.</param>
            <param name="isFromCD">A boolean indicating if the repository is on a CD (should
            be true for Plus repositories).</param>
            <param name="isTlsPreferred">A boolean indicating if TLS/SSL is preferred.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.#ctor(Laserfiche.RepositoryAccess.RepositoryRegistration,Laserfiche.SecurityTokenService.Ticket)">
            <summary>
            Initializes a <c>Repository</c> instance from a <c>RepositoryRegistration</c>
            instance with a ticket.
            </summary>
            <param name="repositoryRegistration">A <c>RepositoryRegistration</c> instance
            specifying which repository to connect to.</param>
            <param name="ticket">A ticket used to connect to the server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.#ctor(Laserfiche.RepositoryAccess.RepositoryRegistration,System.String,System.Boolean,System.Boolean,Laserfiche.SecurityTokenService.Ticket)">
            <summary>
            Initializes a <c>Repository</c> instance from a <c>RepositoryRegistration</c>
            instance and a repository path with a ticket. Use this constructor to connect to Laserfiche
            Plus repositories.
            </summary>
            <param name="repositoryRegistration">A <c>RepositoryRegistration</c> instance
            specifying which repository to connect to.</param>
            <param name="repositoryPath">The path to the repository on the local
            machine.</param>
            <param name="isFromCD">A boolean indicating if the repository is on a CD (should
            be true for Plus repositories).</param>
            <param name="isTlsPreferred">A boolean indicating if TLS/SSL is preferred.</param>
            <param name="ticket">A ticket used to connect to the server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetAllTimeZones(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TimeZoneCollection</c> instance which contains a collection of all the
            time zones recognized by Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ReadOnlyCollection</c> which contains a collection of all the
            time zones recognized by Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetTimeZonesInTerritory(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TimeZoneCollection</c> instance which contains a collection of all the
            time zones in the specified territory that are recognized by Laserfiche.
            </summary>
            <param name="territoryCode">The ISO country code for the territory.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ReadOnlyCollection</c> which contains a collection of all the
            time zones in the specified territory that are recognized by Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetTimeZonesOfSessionLocale(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TimeZoneCollection</c> instance which contains a collection of all the
            time zones in the current locale configured for the session.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ReadOnlyCollection</c> which contains a collection of all the
            time zones in the current locale configured for the session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetTimeZonesWithOffset(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TimeZoneCollection</c> instance which contains a collection of
            all the time zones with the specified raw (i.e., ignoring any DST rules) offset
            from UTC in minutes.
            </summary>
            <param name="rawOffset">The raw (i.e., ignoring any DST rules) offset
            from UTC, in minutes, of the time zones in the returned collection.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ReadOnlyCollection</c> instance which contains a collection of
            all the time zones with the specified raw (i.e., ignoring any DST rules) offset
            from UTC in minutes.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetStopwordConfiguration(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>StopwordConfiguration</c> instance which represents the
            stopword configuration of the default language for the search engine catalog
            associated with the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StopwordConfiguration</c> instance which represents the
            stopword configuration for the search engine catalog associated
            with the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetStopwordConfiguration(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>StopwordConfiguration</c> instance which represents the
            stopword configuration of the specified langauge for the search engine
            catalog associated with the current repository.
            </summary>
            <param name="language">An IETF language code specifying the language of
            the stopword configuration to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StopwordConfiguration</c> instance which represents the
            stopword configuration of the specified langauge for the search engine
            catalog associated with the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetCatalog(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Catalog</c> instance which represents the Laserfiche
            Full-Text Search Engine catalog associated with the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Catalog</c> instance which represents the Laserfiche
            Full-Text Search Engine catalog associated with the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetIndexConfiguration(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>IndexConfiguration</c> instance which represents the
            indexing configuration that is used by the Laserfiche Full-Text Search
            Engine for the catalog associated with the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>IndexConfiguration</c> instance which represents the
            indexing configuration that is used by the Laserfiche Full-Text Search
            Engine for the catalog associated with the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetOptions(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>RepositoryOptions</c> instance which represents the currently
            configured options for the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>RepositoryOptions</c> instance which represents the currently
            configured options for the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.TerminateSession(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sends a request to terminate a session with the specified session ID.
            </summary>
            <param name="sessionId">The ID of the Laserfiche session to terminate.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if the specified session was terminated, false if the session
            was already terminated or could not be found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.EnumLongOperations(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LongOperationReader</c> which can be used to enumerate
            all of the long operations that are open in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperationReader</c> which can be used to enumerate
            all of the long operations that are open in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.EnumLongOperations(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>LongOperationReader</c> which can be used to enumerate
            information about the long operations started by the specified session.
            </summary>
            <param name="sessionID">The ID of the session that started the long operations.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperationReader</c> which can be used to enumerate
            information about the long operations started by the specified session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.EnumSessions(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>SessionInfoReader</c> instance which can be used to enumerate all
            of the active sessions in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SessionInfoReader</c> instance which can be used to enumerate all
            of the active sessions in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.EnumSessions(Laserfiche.RepositoryAccess.SessionInfoFields,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>SessionInfoReader</c> instance which can be used to enumerate all
            of the active sessions in the current repository.
            </summary>
            <param name="fields">Members of the <c>SessionInfoFields</c> enumeration
            which specify what aspects of the sessions to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>SessionInfoReader</c> instance which can be used to enumerate all
            of the active sessions in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GrantLogOnAccess(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Grants log on access to a Windows trustee on the current Laserfiche repository.
            Granting access to a Windows group implies granting access to all of its members.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the Windows trustee to grant log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GrantLogOnAccess(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Grants log on access to a Windows or LDAP trustee on the current Laserfiche
            repository.  Granting access to a Windows group implies granting access to
            all of its members.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance which represents
            a reference to the account to grant log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GrantLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Grants log on access to a collection of Windows trustees to the current Laserfiche
            repository.  Granting access to a Windows group implies granting access to all of
            its members.
            </summary>
            <param name="idents">A collection of <c>IdentityReference</c> instances which
            represents the collection of Windows trustees to grant log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GrantLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Grants log on access to a collection of Windows trustees to the current Laserfiche
            repository.  Granting access to a Windows group implies granting access to all of
            its members.
            </summary>
            <param name="sids">A collection of <c>SecurityIdentifier</c> instances which
            represents the collection of Windows trustees to grant log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GrantLogOnAccess(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Grants log on access to a collection of Windows or LDAP trustee on the current
            Laserfiche repository.  Granting access to a Windows group implies granting
            access to all of its members.
            </summary>
            <param name="acctRefs">A collection of <c>AccountReference</c> instances which
            represent references to Windows and/or LDAP accounts to grant log on access
            to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.DenyLogOnAccess(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Explicitly denies log on access to the current Laserfiche repository for a
            Windows account.  Denying log on access to a Windows group implies denying
            log on access to all of its members.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a Windows account to deny log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.DenyLogOnAccess(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Explicitly denies log on access to the current Laserfiche repository for a
            Windows or LDAP account.  Denying log on access to a Windows group implies denying
            log on access to all of its members.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance which represents a
            reference to a Windows or LDAP account to deny log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.DenyLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Explicity denies log on access to the current Laserfiche repository to a
            collection of Windows accounts.  Denying log on access to a Windows group
            implies denying log on access to all of its members.
            </summary>
            <param name="idents">A collection of <c>IdentityReference</c> instances
            which represents references to Windows trustees that will be denied log on
            access.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.DenyLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Explicity denies log on access to the current Laserfiche repository to a
            collection of Windows accounts.  Denying log on access to a Windows group
            implies denying log on access to all of its members.
            </summary>
            <param name="sids">A collection of <c>SecurityIdentifier</c> instances
            which represents references to Windows trustees that will be denied log on
            access.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.DenyLogOnAccess(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Explicity denies log on access to the current Laserfiche repository for a
            collection of Windows and/or LDAP accounts.  Denying log on access to a Windows
            group implies denying log on access to all of its members.
            </summary>
            <param name="acctRefs">A collection of <c>AccountReference</c> instances
            which represent references to Windows and/or LDAP trustees to deny log on
            access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.RevokeLogOnAccess(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Revokes log on to the current repository access from the specified
            Windows account as well as revoking any explicit denial.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance representing
            the Windows account to revoke log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.RevokeLogOnAccess(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Revokes log on to the current repository access from the specified
            Windows account as well as revoking any explicit denial.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing
            the Windows account to revoke log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.RevokeLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Revokes log on to the current repository access from the specified
            collection of Windows accounts as well as revoking any explicit denial.
            </summary>
            <param name="idents">The collection of Windows accounts to revoke
            log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.RevokeLogOnAccess(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Revokes log on to the current repository access from the specified
            collection of Windows accounts as well as revoking any explicit denial.
            </summary>
            <param name="sids">The collection of Windows accounts to revoke
            log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.RevokeLogOnAccess(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Revokes log on to the current repository access from the specified
            collection of Windows accounts as well as revoking any explicit denial.
            </summary>
            <param name="accountRefs">The collection of Windows accounts to revoke
            log on access to.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetDriveLetters(Laserfiche.RepositoryAccess.DriveType,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Return a collection of all the drive letters for the specified types of
            drives on the host that current Laserfiche server instance is running on.
            </summary>
            <param name="types">One or members of the <c>DriveTypes</c> enumeration
            specifying the types of drives to return letters for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of all the drive letters for the specified types of
            drives on the host that current Laserfiche server instance is running on.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetDirectoryNames(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the child directories of the specified
            parent directory on the host that the current Laserfiche server instance
            is running on.
            </summary>
            <param name="parentPath">The absolute path to the parent directory.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of all the child directories of the specified
            parent directory on the host that the current Laserfiche server instance
            is running on.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetAllExtensions(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all the electronic document extensions
            in use in the current repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of all the electronic document extensions
            in use in the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Repository.GetAllIndexableFileTypes(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a collection of all file types that the Laserfiche full-text search
            engine can index in the represented repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A collection of all file types that the Laserfiche full-text search
            engine can index in the represented repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RepositoryRegistrationCollection">
            <summary>
            Represents a read-only collection of <c>RepositoryRegistration</c> instances.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistrationCollection.Item(System.String)">
            <summary>
            Returns a <c>RepositoryRegistration</c> instance with a repository name
            matching the one provided.
            </summary>
            <param name="name">The name of the repository to return a matching
            <c>RepositoryRegistration</c> instance for.</param>
            <returns>A <c>RepositoryRegistration</c> instance with a repository name
            matching the one provided.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistrationCollection.CopyTo(Laserfiche.RepositoryAccess.RepositoryRegistration[])">
            <summary>
            Copies the entire <c>RepositoryRegistration</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistrationCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.RepositoryRegistration[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>RepositoryRegistration</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchStatus">
            <summary>
            An enumeration of available states describing the status of a Laserfiche
            search operation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.InProgress">
            <summary>
            The search is in progress.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.Done">
            <summary>
            The search is done and results are ready.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.IndexesCorrupt">
            <summary>
            The search was aborted because the search indexes are corrupt.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.Error">
            <summary>
            There was an error in the search command and the search was aborted.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.Canceled">
            <summary>
            The search has been canceled by the user.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchStatus.NoSearch">
            <summary>
            No search command is active yet.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FuzzyType">
            <summary>
            An enumeration of ways to interpret fuzzy factors when running a fuzzy search.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FuzzyType.None">
            <summary>
            Fuzzy search is not being used.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FuzzyType.Percentage">
            <summary>
            The fuzzy limit is specified as a percentage of letters in a word which
            can differ from the search term.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FuzzyType.NumberOfLetters">
            <summary>
            The fuzzy limit is the number of letters in a word which can differ
            from the search term.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchExecutionMode">
            <summary>
            An enumeration of search execution modes, which are strategies that Laserfiche
            uses to process and execute a search command.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchExecutionMode.Materialized">
            <summary>
            Materialize all the results to storage before the search is complete.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SearchExecutionMode.Streaming">
            <summary>
            Stream the results of the search in an incremental fashion.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RankedSearchHitOptions">
            <summary>
            An enumeration of options for controlling the behavior of
            <c>Search.GetRankedSearchHits</c>.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RankedSearchHitOptions.None">
            <summary>
            No options selected.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RankedSearchHitOptions.ReturnFirstContextHit">
            <summary>
            Return the first context hit, if available, for each entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RankedSearchHitOptions.ReturnHitSummary">
            <summary>
            Return a snippet of text known as the "hit summary" which contains
            context for one or more hits in the entry, for each entry.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Search">
            <summary>
            Represents a Laserfiche search operation.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Search.HITS_TO_PRELOAD">
            <summary>
            The default number of hits to pre-load.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.Session">
            <summary>
            Gets the <c>Session</c> instance used to issue the represented search command.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.Command">
            <summary>
            Gets or sets the search command string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.DateFormat">
            <summary>
            Gets or sets the search command date format string.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.FuzzyType">
            <summary>
            Gets or sets the method used to interpret the <c>FuzzyFactor</c> property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.FuzzyFactor">
            <summary>
            Gets or sets the amount of fuzziness to accept when attempting to match words
            in the repository against search terms.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.IsFuzzy">
            <summary>
            Gets a boolean indicating if the represented search is a fuzzy search.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.WillIncludeShortcuts">
            <summary>
            Gets or sets a boolean that indicates whether or not shortcuts to results shall
            be returned as well in the result set.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.Status">
            <summary>
            Gets a member of the <c>SearchStatus</c> enumeration which describes the current
            status of the represented search operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.ContextHitLength">
            <summary>
            Gets or sets the maximum length of a text search hit context line, in characters.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.FullTextSearchResultLimit">
            <summary>
            Gets or sets the maximum number of results to retrieve from the full text
            search engine.  Set to -1 for no limit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.Timeout">
            <summary>
            Gets or sets the number of seconds to wait for search results before canceling
            the search.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.ComparisonCollationRule">
            <summary>
            Gets or sets the collation rule used in database string comparisons when running
            metadata searches.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.SearchUuid">
            <summary>
            Gets the operation UUID of the represented search operation, or the empty string
            if the search has not started.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.IsRefined">
            <summary>
            Gets a boolean indicating if the represented search is a refinement of another
            search.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.Id">
            <summary>
            Gets the operation UUID of the represented search operation, or the empty string
            if the search has not started.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.IsStemmingEnabled">
            <summary>
            Gets or sets a boolean which indicates if stemming is enabled for full-text searches.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.IsSearchInRecycleBin">
            <summary>
            Gets or sets a boolean which indicates if the search is for entries in the recycle bin.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Search.ExecutionMode">
            <summary>
            Gets or sets the search execution mode.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.Get(System.Guid,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>Search</c> instance which represents the search operation with the
            specified operation UUID.
            </summary>
            <param name="id">The UUID of the search operation in Laserfiche.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>Search</c> instance which represents the search operation with the
            specified operation UUID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new <c>Search</c> instance representing a new Laserfiche search
            operation.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.#ctor(Laserfiche.RepositoryAccess.Session,System.String)">
            <summary>
            Initializes a new <c>Search</c> instance representing a new Laserfiche search
            operation with the specified search command.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <param name="command">The search command to issue to Laserfiche.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.Run">
            <summary>
            Requests that Laserfiche begin to run the search.  The method will return
            when the search has finished running.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.Cancel">
            <summary>
            Cancels a running search.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.Close">
            <summary>
            Closes the search results and releases all resources that were allocated
            for the search command.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.BeginRun(System.Boolean)">
            <summary>
            Requests that Laserfiche begin to run the search.  A <c>LongOperation</c>
            instance will be returned that can be used to track the progress of the
            search operation, which can run asynchronously in the background.
            </summary>
            <param name="waitUntilFinished">A boolean indicating whether or not
            to poll the server for the status until the search has completed.</param>
            <returns>A <c>LongOperation</c> instance that can be used to track the
            progress of the search operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.RefineSearch">
            <summary>
            Submits a new search request to the Laserfiche server whose results will
            be a subset of the results that were previously returned using this
            <c>Search</c> instance.
            </summary>
            <returns>A <c>Search</c> instance that represents a refinement of this
            instance's results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.UpdateStatus">
            <summary>
            Requests the current status of the search command from Laserfiche and updates
            the <c>Status</c> property.
            </summary>
            <returns>The new value of the <c>Status</c> property.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetSummaryStats">
            <summary>
            Returns a <c>SearchStatistics</c> instance which represents the statistics
            of the search results.  This method can only be called when the search
            command has completed.
            </summary>
            <returns>A <c>SearchStatistics</c> instance which represents the statistics
            of the search results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetResultListing(Laserfiche.RepositoryAccess.SearchListingSettings)">
            <summary>
            Returns a <c>SearchResultListing</c> instance which represents the results
            of the search command.  This method can only be called when the search
            command has completed.
            </summary>
            <param name="settings">A <c>SearchListingSettings</c> instance which describes
            the settings used for the returned <c>SearchResultListing</c> instance.</param>
            <returns>A <c>SearchResultListing</c> instance which represents the results
            of the search command.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetResultListing(Laserfiche.RepositoryAccess.SearchListingSettings,System.Int32)">
            <summary>
            Returns a <c>SearchResultListing</c> instance which represents the results
            of the search command.  This method can only be called when the search
            command has completed.
            </summary>
            <param name="settings">A <c>SearchListingSettings</c> instance which describes
            the settings used for the returned <c>SearchResultListing</c> instance.</param>
            <param name="preload">The number of rows to be preloaded when creating a search 
            result listing.</param>
            <returns>A <c>SearchResultListing</c> instance which represents the results
            of the search command.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetContextHitListing(System.Int32)">
            <summary>
            Returns a <c>ContextHitListing</c> instance which represents the context
            hits for the specified document in the search results.  This method can only
            be called when the search command has completed.
            </summary>
            <param name="entryId">The entry ID of the document in the search results
            to return context hit information for.</param>
            <returns>A <c>ContextHitListing</c> instance which represents the context
            hits for the specified document in the search results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetContextHitListing(System.Int32,System.Int32)">
            <summary>
            Returns a <c>ContextHitListing</c> instance which represents the context
            hits for the specified document in the search results.  This method can only
            be called when the search command has completed.
            </summary>
            <param name="entryId">The entry ID of the document in the search results
            to return context hit information for.</param>
            <param name="rowsToPreload">The initial number of rows to attempt to load from
            Laserfiche.</param>
            <returns>A <c>ContextHitListing</c> instance which represents the context
            hits for the specified document in the search results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetPreviousContextHitPage(System.Int32,System.Int32)">
            <summary>
            Gets the page number of the last context hit, starting from the specified
            page number.
            </summary>
            <param name="entryId">The ID of the document containing the page to start
            looking back from.</param>
            <param name="pageNumber">The page number of the page to start looking back from.</param>
            <returns>The page number of the last context hit in the document before
            the specified page's context hits.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetNextContextHitPage(System.Int32,System.Int32)">
            <summary>
            Gets the page number of the next context hit, starting from the specified
            page number.
            </summary>
            <param name="entryId">The ID of the document containing the page to start
            looking from.</param>
            <param name="pageNumber">The page number of the page to start looking from.</param>
            <returns>The page number of the next context hit in the document after
            the specified page's context hits.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetHitHighlights(System.Int32)">
            <summary>
            Returns a <c>SearchHitHighlightReader</c> instance which can be used to read
            the search hit highlight information for the specified document in the
            search results.
            </summary>
            <param name="entryId">The entry ID of the document in the search results
            to return search hit hightlight information for.</param>
            <returns>A <c>SearchHitHighlightReader</c> instance which can be used to read
            the search hit highlight information for the specified document in the
            search results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetHitHighlights(System.Int32,System.Int32)">
            <summary>
            Returns a <c>SearchHitHighlightReader</c> instance which can be used to read
            the search hit highlight information for the specified page in the specified
            document in the search results.
            </summary>
            <param name="entryId">The entry ID of the document in the search results
            to return search hit hightlight information for.</param>
            <param name="pageNumber">The page number in the document to return the
            context hit highlight information for.</param>
            <returns>A <c>SearchHitHighlightReader</c> instance which can be used to read
            the search hit highlight information for the specified page in the specified
            document in the search results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetHitCount">
            <summary>
            Gets the number of hits returned by the search.  Only valid when the search
            operation has completed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetFullTextHitCount">
            <summary>
            Gets the number of full text hits returned by the search.  Only valid when the search
            operation has completed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetAllFieldHits(System.Int32)">
            <summary>
            Returns a list of field IDs for the specified entry that contain search
            hits.
            </summary>
            <param name="entryId">The ID of the entry to return field search
            hits for.</param>
            <returns>A list of field IDs for the specified entry that contain search
            hits.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.HasMoreFullTextSearchResults">
            <summary>
            Returns a boolean indicating if there are more search hits from the full text
            search engine in the results.
            </summary>
            <returns>A boolean indicating if there are more search hits from the full text
            search engine in the results.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetRankedSearchHits(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.RankedSearchHit},System.Int32,System.Int32,System.Int32,Laserfiche.RepositoryAccess.RankedSearchHitOptions)">
            <summary>
            Retrieves information about the entries in the search results which have a
            relevancy ranking.
            </summary>
            <param name="hits">An <c>IList</c> that will contain the result data on output.
            Allocate the container on input; existing <c>RankedSearchHit</c> instances will
            be overwritten.</param>
            <param name="listOffset">The zero-based offset in <paramref name="hits"/> to begin
            writing results to.</param>
            <param name="resultsOffset">The zero-based offset in the results to begin
            retrieving data.  Offset 0 corresponds to the most relevant entry.</param>
            <param name="limit">The maximum number of entries to retrieve information on.</param>
            <param name="options">Option flags which control what data to return and other
            selectable behaviors.</param>
            <returns>The number of results retrieved and stored in the <paramref name="hits"/>
            parameter.</returns>
            <remarks>
            Searches that use the full-text search engine will contain results that have a
            relevancy score.  This method retrieves data about these results without the need
            for a search result listing, in the order of relevancy as assigned by the full-text
            search engine, with the first element of the <paramref name="hits"/> list containing
            information about the highest relevancy entry.
            
            The <paramref name="hits"/> parameter must reference a valid array or equivalent
            object of sufficient length to store the requested number of results.  Any
            elements containing a reference to <c>RankedSearchHit</c> instance will not be
            modified, and the instance will be overwritten with updated data.  If the
            corresponding element is null, then this method will allocate a new
            <c>RankedSearchHit</c> instance and store a reference to this instance in the
            corresponding element.
            
            Any open search result listing objects will be ignored by this method.  Both this
            method and search result listings may be used concurrently with the same set
            of search results.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetExecutionPlan">
            <summary>
            Returns the execution plan that was generated for the search.
            </summary>
            <returns>The execution plan that was generated for the search.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Search.GetEstimatedExecutionPlan">
            <summary>
            Returns the execution plan that the server will likely use for the search.
            </summary>
            <returns>The execution plan that the server will likely use for the search.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchListingSettings">
            <summary>
            Represents the settings used to create <c>SearchResultListing</c> instances.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchListingSettings.Refresh">
            <summary>
            Gets or sets a boolean indicating if the search listing should be refreshed
            to show updated values in columns.  The search is not re-run.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchResultListing">
            <summary>
            Represents the entry listing returned from Laserfiche as the results
            of a search operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchResultListing.Search">
            <summary>
            Gets the <c>Search</c> instance representing the search operation where
            the represented results originated from.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchResultListing.GetContextHitListing(System.Int32)">
            <summary>
            Returns a <c>ContextHitListing</c> instance which represents the context hit
            listing for the document at the specified row number in the represented
            search result listing.
            </summary>
            <param name="rowNumber">The row number of the document in the represented
            search result listing to return context hit information for.</param>
            <returns>A <c>ContextHitListing</c> instance which represents the context hit
            listing for the document at the specified row number in the represented
            search result listing.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SearchResultListing.GetContextHitListing(System.Int32,System.Int32)">
            <summary>
            Returns a <c>ContextHitListing</c> instance which represents the context hit
            listing for the document at the specified row number in the represented
            search result listing.
            </summary>
            <param name="rowNumber">The row number of the document in the represented
            search result listing to return context hit information for.</param>
            <param name="rowsToPreload">The number of context hit rows to preload
            from Laserfiche.</param>
            <returns>A <c>ContextHitListing</c> instance which represents the context hit
            listing for the document at the specified row number in the represented
            search result listing.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchStatistics">
            <summary>
            Represents a set of statistics summarizing the results of a Laserfiche
            search operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.PageCount">
            <summary>
            Gets the total number of pages in documents returned in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.ImageFileSize">
            <summary>
            Gets the total sum of image data file sizes stored across the documents returned
            in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.TextFileSize">
            <summary>
            Gets the total sum of text data file sizes stored across the documents returned
            in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.ElectronicFileSize">
            <summary>
            Gets the total sum of electronic document data file sizes stored across documents
            returned in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.DocumentCount">
            <summary>
            Gets the total number of documents returned in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.FolderCount">
            <summary>
            Gets the total number of folders returned in the search results.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchStatistics.ShortcutCount">
            <summary>
            Gets the total number of shortcuts returned in the search results.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SecurityIdentifierCollection">
            <summary>
            Represents a read-only collection of <c>SecurityIdentifier</c>
            instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SecurityIdentifierCollection.CopyTo(System.Security.Principal.SecurityIdentifier[])">
            <summary>
            Copies the entire <c>SecurityIdentifier</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.SecurityIdentifierCollection.CopyTo(System.Int32,System.Security.Principal.SecurityIdentifier[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>SecurityIdentifier</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ServerSessionInfoReader">
            <summary>
            Provides the ability to enumerate <c>SessionInfo</c> instances representing
            information on all the Laserfiche sessions in a repository matching the
            specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SessionInfoFields">
            <summary>
            Enumeration of particular pieces of data about a session
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SessionInfoFields.None">
            <summary>
            No session information.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SessionInfoFields.Tasks">
            <summary>
            Session tasks.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SessionInfo">
            <summary>
            Represents information about a Laserfiche session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.RepositoryName">
            <summary>
            Gets the name of the repository that the session is logged in to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.ApplicationName">
            <summary>
            Gets the name of the application associated with the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.ClientHostName">
            <summary>
            Gets the host name of the client where the session originates from.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.RawHostName">
            <summary>
            Gets the host name of the direct client, ignoring any Remote Desktop sessions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.IsServerSession">
            <summary>
            Gets a boolean indicating if the session is server session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.IsReadOnly">
            <summary>
            Gets a boolean indicating if the session is read-only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.IsSecure">
            <summary>
            Gets a boolean indicating if the connections that the session are using
            are secure.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.CanShareLicense">
            <summary>
            Gets a boolean indicating if the session can share a license with another session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.SessionId">
            <summary>
            Gets the ID of the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.UserName">
            <summary>
            Gets the name of the user account that is the session's primary user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.UserIdentity">
            <summary>
            Gets an <c>IdentityReference</c> instance that represents a reference to
            the identity of the session's primary user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastActivity">
            <summary>
            Gets a <c>DateTime</c> value which represents the time of the session's
            last activity, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastActivityUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents the time of the session's
            last activity, in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LogInTime">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's log in
            time, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LogInTimeUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's log in
            time, in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastLogon">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's last log on
            time, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastLogonUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's last log on
            time, in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastLogOff">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's last log off
            time, in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.LastLogOffUtc">
            <summary>
            Gets a <c>DateTime</c> value which represents the session's last log off
            time, in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.PasswordHasExpired">
            <summary>
            Gets a boolean indicating if the session's password has expired.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.PasswordExpirationWarningDays">
            <summary>
            Gets the number of days before the session's user account will receive a password
            expiration warning.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.Tasks">
            <summary>
            Gets a collection of <c>LongOperation</c> instances representing long operations
            that the session is currently running.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.OSUserName">
            <summary>
            Gets the Windows user name if this session logged on using Windows
            authentication.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionInfo.IntegratedSecurity">
            <summary>
            Gets a boolean indicating if this session used Windows authentication.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SessionInfoReader">
            <summary>
            Provides the ability to enumerate <c>SessionInfo</c> instances
            representing information about the Laserfiche sessions that
            meet the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Shortcut">
            <summary>
            A collection of static methods for creating and retrieving information
            about entry shortcuts in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Shortcut.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryInfo,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a shortcut to an existing entry.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance which represents
            the parent folder that the new shortcut will be created in.</param>
            <param name="name">The name of the new shortcut.</param>
            <param name="entryDst">An <c>EntryInfo</c> instance which represents
            the target entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which control how the new shortcut will be named.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new shortcut.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Shortcut.Create(System.String,System.Int32,Laserfiche.RepositoryAccess.EntryNameOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a shortcut to an existing entry.
            </summary>
            <param name="shortcutPath">The path in the repository to the new shortcut.</param>
            <param name="targetId">The ID of the new shortcut's target entry.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            which control how the new shortcut will be named.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The entry ID of the new shortcut.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Shortcut.GetShortcutInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.
            </summary>
            <param name="entryId">The ID of the shortcut to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Shortcut.GetShortcutInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.
            </summary>
            <param name="path">The path in the current repository to the shortcut
            to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Shortcut.GetShortcutInfo(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.
            </summary>
            <param name="parentFolder">A <c>FolderInfo</c> instance representing the
            parent folder of the shortcut to retrieve information about.</param>
            <param name="childName">The name of the shortcut entry to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>ShortcutInfo</c> instance representing a shortcut entry in
            the current repository.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ShortcutInfo">
            <summary>
            Represents an entry shortcut in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ShortcutInfo.TargetId">
            <summary>
            Gets or sets the entry ID of the shortcut target.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ShortcutInfo.TargetType">
            <summary>
            Gets a member of the <c>EntryType</c> enumeration denoting the entry type
            of the shortcut target.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ShortcutInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>ShortcutInfo</c> instance which represents a new entry shortcut.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ShortcutInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new shortcut entry in Laserfiche using the settings specified
            in this instance.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance which represents the parent
            folder of the new shortcut entry.</param>
            <param name="name">A string specifying the name of the new shortcut.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            specifying options which control what the shortcut will be named.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ShortcutInfo.Create(Laserfiche.RepositoryAccess.FolderInfo,System.String,Laserfiche.RepositoryAccess.EntryInfo,Laserfiche.RepositoryAccess.EntryNameOption)">
            <summary>
            Creates a new shortcut entry in Laserfiche.
            </summary>
            <param name="parent">A <c>FolderInfo</c> instance which represents the parent
            folder of the new shortcut entry.</param>
            <param name="name">A string specifying the name of the new shortcut.</param>
            <param name="target">An <c>EntryInfo</c> instance which represents the target
            of the new shortcut.</param>
            <param name="options">Members of the <c>EntryNameOption</c> enumeration
            specifying options which control what the shortcut will be named.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Stamp">
            <summary>
            A collection of methods for managing personal and public stamp definitions.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.Create(Laserfiche.RepositoryAccess.StampInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new personal or public stamp definition using the settings
            specified in the provided <c>StampInfo</c> instance.
            </summary>
            <param name="info">A <c>StampInfo</c> instance which specifies the settings
            to use to create the new stamp definition.  The instance is not modified.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified stamp name conflicts with an existing
            stamp definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>StampInfo</c> instance which represents the newly created
            stamp definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.Update(System.Int32,Laserfiche.RepositoryAccess.StampInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing public or personal stamp definition.
            </summary>
            <param name="stampId">The ID of the stamp definition to update.</param>
            <param name="info">A <c>StampInfo</c> instance which specifies the
            updated settings for the specified stamp definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing public or personal stamp definition.
            </summary>
            <param name="stampId">The ID of the stamp definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.DeletePublic(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing public stamp definition given the name of the stamp.
            </summary>
            <param name="stampName">The name of the public stamp defintion to
            delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.DeletePersonal(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing personal stamp definition given the name of the stamp.
            </summary>
            <param name="stampName">The name of the personal stamp definition to
            delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a public or personal stamp definition in a
            Laserfiche repository.
            </summary>
            <param name="stampId">The ID of the stamp definition to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StampInfo</c> instance which represents the stamp definition
            with the specified ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.GetInfoPublic(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a public stamp definition in a Laserfiche
            repository.
            </summary>
            <param name="stampName">The name of the public stamp definition to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StampInfo</c> instance which represents the public stamp
            definition with the specified name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.GetInfoPersonal(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information about a personal stamp definition in a Laserfiche
            repository.
            </summary>
            <param name="stampName">The name of the personal stamp definition to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StampInfo</c> instance which represents the personal stamp
            definition with the specified name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.EnumPublicStamps(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>StampInfoReader</c> instance which can be used to enumerate all
            of the public stamp definitions in the repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StampInfoReader</c> instance which can be used to enumerate all
            of the public stamp definitions in the repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Stamp.EnumPersonalStamps(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>StampInfoReader</c> instance which can be used to enumerate all
            of the personal stamps the specified session is authorized for.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>StampInfoReader</c> instance which can be used to enumerate all
            of the personal stamps the specified session is authorized for.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StampAnnotation">
            <summary>
            Represents a stamp annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.StampId">
            <summary>
            The stamp object ID that this annotation uses.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Coordinates">
            <summary>
            The coordinates of the stamp's bounding rectangle on the image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Position">
            <summary>
            The position of the stamp on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Color">
            <summary>
            The color of the stamp.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Rotation">
            <summary>
            The amount of clockwise rotation in degrees of the stamp relative to the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Opacity">
            <summary>
            The opacity of the annotation, from 0 (fully transparent) to 100 (fully opaque).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampAnnotation.Bitmap">
            <summary>
            Gets the raw bitmap data of the underlying stamp.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampAnnotation.#ctor">
            <summary>
            Initializes a <c>StampAnnotation</c> instance representing a new stamp
            annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a new <c>StampAnnotation</c> object representing a new stamp
            annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampAnnotation.#ctor(Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,Laserfiche.RepositoryAccess.StampInfo)">
            <summary>
            Construct a new <c>StampAnnotation</c> object representing a new stamp
            annotation on the specified page.
            </summary>
            <param name="document">A reference to the <c>DocumentInfo</c> object representing
            the Laserfiche document to create the annotation in.</param>
            <param name="pageNumber">The page number in the document to create the
            annotation on.</param>
            <param name="stampInfo">A <c>StampInfo</c> object representing the
            stamp definition to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampAnnotation.#ctor(Laserfiche.RepositoryAccess.DocumentInfo,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Construct a new <c>StampAnnotation</c> object representing a new stamp
            annotation on the specified page.
            </summary>
            <param name="document">A reference to the <c>DocumentInfo</c> object representing
            the Laserfiche document to create the annotation in.</param>
            <param name="pageNumber">The page number in the document to create the
            annotation on.</param>
            <param name="stampInfo">A <c>StampInfo</c> object representing the
            stamp definition to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StampInfo">
            <summary>
            Represents a Laserfiche personal or public stamp definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.OwnerSid">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the security identifier
            (SID) of the owner of the stamp definition that this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.Id">
            <summary>
            Gets the ID of the stamp definition that this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.Name">
            <summary>
            Gets or sets the name of the stamp definition that this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.IsPublic">
            <summary>
            Gets a boolean indicating whether or not the stamp definition
            that this instance represents is a public (true) or personal (false)
            definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.ImageData">
            <summary>
            Gets or sets the image data associated with the represented stamp definition.
            The image data must be an uncompressed, monochrome Windows DIB.  No copy is
            made when setting the property.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StampInfo.ImageSize">
            <summary>
            Gets the size of the stamp image in pixels.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.#ctor">
            <summary>
            Initializes a <c>StampInfo</c> instance representing a new stamp definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>StampInfo</c> instance representing a new stamp definition.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.#ctor(Laserfiche.RepositoryAccess.StampInfo)">
            <summary>
            Initializes a <c>StampInfo</c> instance using data from an existing
            <c>StampInfo</c> instance.
            </summary>
            <param name="source">The <c>StampInfo</c> instance to draw data from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.GetImageSize">
            <summary>
            Gets the size of the bitmap in bytes, without any header.
            </summary>
            <returns>The size of the bitmap in bytes, without any header.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.UpdateImageData">
            <summary>
            Marks the image data as being updated so that it will be sent to
            Laserfiche when pending changes are next saved.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StampInfo.Delete">
            <summary>
            Marks the represented stamp definition for deletion when pending changes
            are next saved to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StampInfoReader">
            <summary>
            Provides the ability to enumerate <c>StampInfo</c> instances that
            represent public and personal stamp definitions in Laserfiche that
            meet the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StrikeoutAnnotation">
            <summary>
            Represents a text strikeout annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StrikeoutAnnotation.Direction">
            <summary>
            The direction of the strikeout.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StrikeoutAnnotation.#ctor">
            <summary>
            Initializes a <c>StrikeoutAnnotation</c> instance representing a new
            strikeout annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StrikeoutAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a new <c>StrikeoutAnnotation</c> object representing a new
            text strikeout annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.StopwordConfiguration">
            <summary>
            Represents the stopword (also called "noise word") configuration for a
            Laserfiche Full-Text Search Engine catalog.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>StopwordConfiguration</c> instance for English using the
            specified <c>Session</c>.
            </summary>
            <param name="session">The Laserfiche session.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.#ctor(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>StopwordConfiguration</c> instance for the specified
            language.
            </summary>
            <param name="language">An IETF language code specifying the language to
            retrieve the stopword configuration for.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StopwordConfiguration.Language">
            <summary>
            Gets the the language the represented stopword configuration applies to,
            specified as an RFC 5646 compliant IETF language tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StopwordConfiguration.Session">
            <summary>
            Gets the <c>Session</c> instance associated with this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StopwordConfiguration.IsConnected">
            <summary>
            Gets a boolean indicating if this instance has a connection to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StopwordConfiguration.Stopwords">
            <summary>
            Gets the collection of configured stopwords.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.StopwordConfiguration.StopwordCount">
            <summary>
            Gets a count of the number of configured stopwords.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.AddStopword(System.String)">
            <summary>
            Adds a new stopword to the stopword list.
            </summary>
            <param name="stopword">A string representing the stopword.</param>
            <returns>True if the stopword was added, false if the stopword already belongs
            to the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.AddStopwords(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a collection of words to the stopword list.
            </summary>
            <param name="stopwords">A collection of strings representing the new
            stopwords to add.</param>
            <returns>A count of the number of stopwords added to the list.  Empty
            strings and words that are already in the list are ignored.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.RemoveStopword(System.String)">
            <summary>
            Removes a word from the stopword list.
            </summary>
            <param name="stopword">A string representing the word to remove from
            the stopword list.</param>
            <returns>True if the specified word was removed from the stopword list,
            false if the word was not found in the list.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.ClearStopwords">
            <summary>
            Clears the stopword list so that it contains no words at all.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.ResetToDefault">
            <summary>
            Resets the stopword list to the default.  This method takes
            effect immediately in Laserfiche without the need to call the <c>Save</c>
            or <c>Refresh</c> methods.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.Refresh">
            <summary>
            Refreshes the stopword list managed by this instance by reading the
            current list from Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.Save">
            <summary>
            Saves the stopword list maintained by this instance to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.StopwordConfiguration.ValidateStopword(System.String)">
            <summary>
            validate if a word is a valid stopword
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Tag">
            <summary>
            A collection of static methods for managing entry tag definitions in
            a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.Create(Laserfiche.RepositoryAccess.TagInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new entry tag definition in a Laserfiche repository using
            the specified settings.
            </summary>
            <param name="info">A <c>TagInfo</c> instance which specifies the settings
            for the new entry tag definition.  The instance is not modified.</param>
            <param name="autoRename">A boolean indicating whether or not to enable
            auto-renaming if the specified tag name conflicts with an existing
            tag definition.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>TagInfo</c> instance that represents the newly created
            entry tag definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.Update(System.Int32,Laserfiche.RepositoryAccess.TagInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing entry tag definition in a Laserfiche repository.
            </summary>
            <param name="tagId">The ID of the entry tag definition to update.</param>
            <param name="info">A <c>TagInfo</c> instance which specifies the new
            settings for the specified entry tag definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing entry tag definition from a Laserfiche repository.
            </summary>
            <param name="tagId">The ID of the entry tag definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing entry tag definition from a Laserfiche repository.
            </summary>
            <param name="tagName">The name of the entry tag definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagInfo</c> instance representing the specified entry tag
            definition.
            </summary>
            <param name="tagId">The ID of the entry tag definition to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagInfo</c> instance representing the specified entry tag
            definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagInfo</c> instance representing the specified entry tag
            definition.
            </summary>
            <param name="tagName">The name of the entry tag definition to retrieve
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagInfo</c> instance representing the specified entry tag
            definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetAccessControl(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagEntrySecurity</c> instance which represents the tag ACL
            configured for the specified tag.
            </summary>
            <param name="tagId">The ID of the tag to retrieve the tag ACL of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagEntrySecurity</c> instance which represents the tag ACL
            configured for the specified tag.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetAccessControl(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagEntrySecurity</c> instance which represents the tag ACL
            configured for the specified tag.
            </summary>
            <param name="tagName">The name of the tag to retrieve the tag ACL of.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagEntrySecurity</c> instance which represents the tag ACL
            configured for the specified tag.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.SetAccessControl(System.Int32,Laserfiche.RepositoryAccess.TagEntrySecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Configures a tag ACL for the specified tag, overwriting any existing tag ACL.
            </summary>
            <param name="tagId">The ID of the tag to configure an ACL for.</param>
            <param name="tagRights">A <c>TagEntrySecurity</c> instance which represents
            the tag ACL to set.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.SetAccessControl(System.String,Laserfiche.RepositoryAccess.TagEntrySecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Configures a tag ACL for the specified tag, overwriting any existing tag ACL.
            </summary>
            <param name="tagName">The name of the tag to configure an ACL for.</param>
            <param name="tagRights">A <c>TagEntrySecurity</c> instance which represents
            the tag ACL to set.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TagInfoReader</c> instance which can be used to enumerate
            <c>TagInfo</c> instances for all of the entry tag definitions in the
            repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TagInfoReader</c> instance which can be used to enumerate
            <c>TagInfo</c> instances for all of the entry tag definitions in the
            repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.EnumAuthorized(Laserfiche.RepositoryAccess.Session)">
            <summary>
            A synonym for Session.EnumAuthorizedTags.
            </summary>
            <param name="session">The Laserfiche session to use</param>
            <returns>A <c>TagInfoReader</c> to enumerate the authorized tags.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified tag.
            </summary>
            <param name="tagId">The ID of the tag.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified tag.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified tag.
            </summary>
            <param name="tagId">The ID of the tag.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified tag.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified tag.
            </summary>
            <param name="tagId">The ID of the tag.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all tags.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all tags.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Tag.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all tags.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AssignedTag">
            <summary>
            Represents an entry tag that is assigned to a particular trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AssignedTag.TagId">
            <summary>
            Gets the ID of the tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AssignedTag.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AssignedTag.IsSecure">
            <summary>
            Gets a booleanthat indicates if the tag is a security tag.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTag.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new <c>AssignedTag value.</c>
            </summary>
            <param name="tagId">The ID of the entry tag.</param>
            <param name="tagName">The name of the entry tag.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTag.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new <c>AssignedTag value.</c>
            </summary>
            <param name="tagId">The ID of the entry tag.</param>
            <param name="tagName">The name of the entry tag.</param>
            <param name="isSecure">A boolean indicating if the tag is a security tag.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTag.op_Equality(Laserfiche.RepositoryAccess.AssignedTag,Laserfiche.RepositoryAccess.AssignedTag)">
            <summary>
            Determines if two <c>AssignedTag</c> values are equal.
            </summary>
            <param name="tag1">The first <c>AssignedTag</c> value to check.</param>
            <param name="tag2">The second <c>AssignedTag</c> value to check.</param>
            <returns>True if the specified <c>AssignedTag</c> values are equal,
            false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTag.op_Inequality(Laserfiche.RepositoryAccess.AssignedTag,Laserfiche.RepositoryAccess.AssignedTag)">
            <summary>
            Determines if two <c>AssignedTag</c> values are not equal.
            </summary>
            <param name="tag1">The first <c>AssignedTag</c> value to check.</param>
            <param name="tag2">The second <c>AssignedTag</c> value to check.</param>
            <returns>True if the specified <c>AssignedTag</c> values are not equal,
            false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AssignedTagCollection">
            <summary>
            Represents a read-only collection of <c>AssignedTag</c> values, representing
            the entry tags that a trustee is authorized to use.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTagCollection.CopyTo(Laserfiche.RepositoryAccess.AssignedTag[])">
            <summary>
            Copies the entire <c>AssignedTag</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AssignedTagCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.AssignedTag[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>AssignedTag</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagInfo">
            <summary>
            Represents an entry tag definition in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.Id">
            <summary>
            Gets the ID of the represented entry tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.Name">
            <summary>
            Gets or sets the name of the represented entry tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.Description">
            <summary>
            Gets or sets the description of the represented entry tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.IsSecure">
            <summary>
            Gets or sets a boolean indicating whether or not the represented entry tag
            is classified as a security tag (true) or an informational tag (false).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.WatermarkText">
            <summary>
            Gets or sets the watermark text associated with the represented entry tag
            definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.WatermarkPosition">
            <summary>
            Gets or sets the position of the watermark on the page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.WatermarkRotationAngle">
            <summary>
            Gets or sets the rotation angle, in degrees, of the watermark associated
            with the represented entry tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.WatermarkIntensity">
            <summary>
            Gets or sets the intensity. Valid value ranges from 0 to 100, -1 for using default values.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.WatermarkTextSize">
            <summary>
            Gets or sets the size of the watermark text, in points, associated
            with the represented entry tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagInfo.IsWatermarkMandatory">
            <summary>
            Gets or sets a boolean indicating whether or not the watermark associated
            with the represented entry tag is mandatory.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.#ctor">
            <summary>
            Initializes a <c>TagInfo</c> instance representing a new entry tag definition.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>TagInfo</c> instance representing a new entry tag definition.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.#ctor(Laserfiche.RepositoryAccess.TagInfo)">
            <summary>
            Initializes a <c>TagInfo</c> instance from an existing <c>TagInfo</c>
            to copy settings from.
            </summary>
            <param name="source">A <c>TagInfo</c> instance to draw data from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.Delete">
            <summary>
            Marks the entry tag definition represented by this instance for deletion
            next time pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.GetAccessControl">
            <summary>
            Returns a <c>TagEntrySecurity</c> instance representing the ACL assigned to the
            represented tag.
            </summary>
            <returns>A <c>TagEntrySecurity</c> instance representing the ACL assigned to the
            represented tag.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagInfo.SetAccessControl(Laserfiche.RepositoryAccess.TagEntrySecurity)">
            <summary>
            Sets the tag ACL for the represented tag.
            </summary>
            <param name="newRights">A <c>TagEntrySecurity</c> instance representing the
            tag ACL to configure.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagInfoReader">
            <summary>
            Provides the ability to enumerate <c>TagInfo</c> instances representing entry tag
            definitions in a Laserfiche repository that match the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagWatermarkCollection">
            <summary>
            Represents a read-only collection of <c>TagWatermark</c> instances.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagWatermarkCollection.CopyTo(Laserfiche.RepositoryAccess.TagWatermark[])">
            <summary>
            Copies the entire <c>TagWatermark</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TagWatermarkCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.TagWatermark[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>TagWatermark</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WatermarkPosition">
            <summary>
            An enumeration of possible positions on a page for watermarks.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.TopLeft">
            <summary>
            The upper left corner of the page
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.TopCenter">
            <summary>
            Centered at the top of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.TopRight">
            <summary>
            The upper right corner of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.MiddleLeft">
            <summary>
            Centered vertically on the left side of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.DeadCenter">
            <summary>
            The exact center of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.MiddleRight">
            <summary>
            Centered vertically on the right side of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.BottomLeft">
            <summary>
            The lower left corner of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.BottomCenter">
            <summary>
            Centered at the bottom of the page.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.WatermarkPosition.BottomRight">
            <summary>
            The lower right corner of the page.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TagWatermark">
            <summary>
            Represents watermark information assigned to a Laserfiche tag definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.TagId">
            <summary>
            Gets the ID of the referenced tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.TagName">
            <summary>
            Gets the name of the referenced tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.TagDescription">
            <summary>
            Gets the description of the referenced tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.Comment">
            <summary>
            Gets the comment text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.IsSecureTag">
            <summary>
            Gets a boolean indicating if the referenced tag is a secure tag.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkText">
            <summary>
            Gets a string which represents the text of the watermark.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkPosition">
            <summary>
            Gets the position of the watermark on images.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkRotation">
            <summary>
            Gets the degree of clockwise rotation of the watermark with
            respect to images.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkTextSize">
            <summary>
            Gets the size of the watermark text when rendered on images, in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkIsRequired">
            <summary>
            Gets a boolean indicating whether this watermark is mandatory when the
            associated tag is applied to a document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TagWatermark.WatermarkIntensity">
            <summary>
            Gets the intensity of the watermark.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Template">
            <summary>
            A collection of static methods for managing template definitions in a
            Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.Create(Laserfiche.RepositoryAccess.TemplateInfo,System.Boolean,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new template definition using the specified settings in the
            current Laserfiche repository.
            </summary>
            <param name="info">A <c>TemplateInfo</c> instance which specifies the settings
            to use for the new template definition.  The instance is not modified.</param>
            <param name="autoRename">A boolean indicating whether or not to automatically
            rename the new template definition if there is a naming conflict.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>TemplateInfo</c> instance which represents the newly
            created template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.Update(System.Int32,Laserfiche.RepositoryAccess.TemplateInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates an existing template definition in the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the template definition to update.</param>
            <param name="info">A <c>TemplateInfo</c> instance which specifies the new
            settings for the specified template definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing template definition from the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the template definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing template definition from the current Laserfiche repository.
            </summary>
            <param name="templateName">The name of the template definition to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateInfo</c> instance which represents the specified
            template definition in the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the template definition to retreive
            information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateInfo</c> instance which represents the specified
            template definition in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateInfo</c> instance which represents the specified
            template definition in the current Laserfiche repository.
            </summary>
            <param name="templateName">The name of the template definition to
            retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateInfo</c> instance which represents the specified
            template definition in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAccessControl(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateSecurity</c> instance which represents the access control
            information for the specified template definition in the current Laserfiche
            repository.
            </summary>
            <param name="templateId">The ID of the template definition to return
            access control information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateSecurity</c> instance which represents the access control
            information for the specified template definition in the current Laserfiche
            repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAccessControl(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateSecurity</c> instance which represents the access control
            information for the specified template definition in the current Laserfiche
            repository.
            </summary>
            <param name="templateName">The name of the template definition to return
            access control information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateSecurity</c> instance which represents the access control
            information for the specified template definition in the current Laserfiche
            repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.SetAccessControl(System.Int32,Laserfiche.RepositoryAccess.TemplateSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the access control information for the specified template definition in
            the current Laserfiche repository.
            </summary>
            <param name="templateId">The ID of the template definition to set access control
            information for.</param>
            <param name="templateSecurity">A <c>TemplateSecurity</c> instance which represents
            the new access control settings for the specified template definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.SetAccessControl(System.String,Laserfiche.RepositoryAccess.TemplateSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the access control information for the specified template definition in
            the current Laserfiche repository.
            </summary>
            <param name="templateName">The name of the template definition to set access
            control information for.</param>
            <param name="templateSecurity">A <c>TemplateSecurity</c> instance which represents
            the new access control settings for the specified template definition.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the current session has to the specified template definition.
            </summary>
            <param name="templateId">The ID of the template definition to retrieve
            effective rights to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the current session has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the current session has to the specified template definition.
            </summary>
            <param name="templateName">The name of the template definition to retrieve
            effective rights to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the current session has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAclDisplayRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateId">The ID of the template whose ACL will be examined to
            determine which rights have been granted to the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to the Laserfiche trustee used to determine which rights are granted
            via the template's ACL.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the rights granted to the referenced trustees for the target templates
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateIds">The IDs of the target templates.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target template to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the rights granted to the referenced trustees for the target templates
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateIds">The IDs of the target templates.</param>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target template to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAclDisplayRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateId">The ID of the template whose ACL will be examined to
            determine which rights have been granted to the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the trustee used to determine which rights are granted
            via the template's ACL.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAclDisplayRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateName">The nanme of the template whose ACL will be examined to
            determine which rights have been granted to the specified trustee.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to the Laserfiche trustee used to determine which rights are granted
            via the template's ACL.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetAclDisplayRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).
            </summary>
            <param name="templateName">The nanme of the template whose ACL will be examined to
            determine which rights have been granted to the specified trustee.</param>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the trustee used to determine which rights are granted
            via the template's ACL.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The rights granted to the referenced trustee for the specified template
            definition via the template's access control list (ACL).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the specified user has to the specified template definition.
            </summary>
            <param name="templateId">The ID of the template definition to retrieve
            effective rights to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the effective rights of the target trustees for the target templates.
            </summary>
            <param name="templateIds">The IDs of the target templates.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target template to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the effective rights of the target trustees for the target templates.
            </summary>
            <param name="templateIds">The IDs of the target templates.</param>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target template to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the specified user has to the specified template definition.
            </summary>
            <param name="templateId">The ID of the template definition to retrieve
            effective rights to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the specified user has to the specified template definition.
            </summary>
            <param name="templateName">The name of the template definition to retrieve
            effective rights to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetEffectiveRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns values from the <c>TemplateRights</c> enumeration specifying which
            access rights the specified user has to the specified template definition.
            </summary>
            <param name="templateName">The name of the template definition to retrieve
            effective rights to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has on the specified
            template definition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetDefaultAccessControl(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateSecurity</c> instances representing the
            default ACL for new templates.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateSecurity</c> instances representing the
            default ACL for new templates.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.SetDefaultAccessControl(Laserfiche.RepositoryAccess.TemplateSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the default ACL that new templates will have.
            </summary>
            <param name="templateSecurity">A <c>TemplateSecurity</c> instance which
            represents the new default template ACL.</param>
            <param name="session">The Laserfiche session to use</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetDefaultEffectiveRights(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the effective access rights of the current session assuming a
            template with the default template ACL.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>TemplateRights</c> enumeration
            representing the effective access rights of the current session assuming a
            template with the default template ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetDefaultAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the ACL display rights for the specified Laserfiche account assuming
            a template with the default ACL.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the Laserfiche account to calculate ACL display rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>TemplateRights</c> enumeration representing
            the ACL display rights for the specified Laserfiche account assuming a
            template with the default template ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a template with the default ACL.
            </summary>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>AccountReference</c> of accounts to one or more values 
            from the <c>TemplateRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a template with the default ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a template with the default ACL.
            </summary>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>SecurityIdentifier</c> of accounts to one or more values 
            from the <c>TemplateRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a template with the default ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetDefaultAclDisplayRights(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the ACL display rights for the specified Laserfiche account assuming
            a template with the default ACL.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the Windows account to calculate ACL display rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>TemplateRights</c> enumeration representing
            the ACL display rights for the specified Windows account assuming a
            template with the default template ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TemplateInfoReader</c> instance which can be used to enumerate
            information about all of the template definitions in the current Laserfiche
            repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TemplateInfoReader</c> instance which can be used to enumerate
            information about all of the template definitions in the current Laserfiche
            repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified template.
            </summary>
            <param name="templateId">The ID of the template.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified template.
            </summary>
            <param name="templateId">The ID of the template.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified template.
            </summary>
            <param name="templateId">The ID of the template.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all templates.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all templates.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Template.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all templates.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateRights">
            <summary>
            An enumeration of available Laserfiche template access rights.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.ReadDefinition">
            <summary>
            Permission to read the template definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.Modify">
            <summary>
            Permission to modify the template definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.Delete">
            <summary>
            Permission to delete the template definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.ReadPermissions">
            <summary>
            Permission to read the template's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.ChangePermissions">
            <summary>
            Permission to modify the template's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.TakeOwnership">
            <summary>
            Permission to take ownership of the template.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.Read">
            <summary>
            Generic read access; permission to read the template's definition
            and security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.Write">
            <summary>
            Generic write access; permission to modify the template's definition.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TemplateRights.FullControl">
            <summary>
            A combination of all template access rights.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateAccessRule">
            <summary>
            Represents an access control entry (ACE) for a Laserfiche template definition.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateAccessRule.TemplateRights">
            <summary>
            Gets the access mask associated with the represented ACE.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.TemplateRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>TemplateAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche template.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="templateRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.TemplateRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes a <c>TemplateAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche template.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="templateRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateInfo">
            <summary>
            Represents a template definition in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.Id">
            <summary>
            Gets the ID of the represented template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.Name">
            <summary>
            Gets or sets the name of the represented template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.Description">
            <summary>
            Gets or sets the text of the description for the represented template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.Fields">
            <summary>
            Gets a list of <c>FieldInfo</c> instances which represent a read-only
            collection of the template fields which are assigned to the
            represented template.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFieldGroupId(System.String)">
            <summary>
            Gets the group id of the field in this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFieldGroupId(System.Int32)">
            <summary>
            Gets the group id of the field in this template given the field position.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldGroupId(System.String,System.Int32)">
            <summary>
            Sets the group id of the field in this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldGroupId(System.Int32,System.Int32)">
            <summary>
            Sets the group id of the field in this template given the field position.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFieldGroupNameById(System.Int32)">
            <summary>
            Returns the name for the specified field group, or <c>null</c> if no name was set.
            </summary>
            <param name="groupId">The ID of the field group.</param>
            <returns>The name for the specified field group, or <c>null</c> if no name was set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldGroupNameById(System.Int32,System.String)">
            <summary>
            Sets the name for the specified field group.
            </summary>
            <param name="groupId">The ID of the group to set the name for.</param>
            <param name="name">A string containing the group name, or <c>null</c> to remove
            the group name from the set.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFieldLocalFlags(System.String)">
            <summary>
            Gets the local flags of the field in this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFieldLocalFlags(System.Int32)">
            <summary>
            Gets the local flags of the field in this template given the field position.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldLocalFlags(System.String,System.Int32)">
            <summary>
            Sets the local flags of the field in this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldLocalFlags(System.Int32,System.Int32)">
            <summary>
            Sets the local flags of the field in this template given the field position.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.IsFieldRequiredForTemplate(System.String)">
            <summary>
            Check if the field is required for this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.IsFieldRequiredForTemplate(System.Int32)">
            <summary>
            Check if the field is required for this template given the field position.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldRequiredForTemplate(System.String,System.Boolean)">
            <summary>
            Mark the field as required for this template given the field name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetFieldRequiredForTemplate(System.Int32,System.Boolean)">
            <summary>
            Mark the field as required for this template given the field position.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.FieldCount">
            <summary>
            Gets a count of the number of fields assigned to the represented template.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateInfo.Color">
            <summary>
            Gets or sets the color assigned to the represented template.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.#ctor">
            <summary>
            Initializes a <c>TemplateInfo</c> instance which represents a new Laserfiche
            template.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>TemplateInfo</c> instance which represents a new Laserfiche
            template.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.InsertField(System.Int32,System.String)">
            <summary>
            Assigns a field to the represented template with the specified postion.  The
            field must not already be assigned to the template.  The change will be
            finalized 
            </summary>
            <param name="position">The 1-based index indicating the position of the
            specified field.</param>
            <param name="fieldName">The name of the template field to assign to
            the represented template.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.AddField(System.String)">
            <summary>
            Assigns a template field to the represented template, appending the
            field to the end of the template's field list.  The field must not already
            be assigned to the template.  The change will be finalized when pending
            changes are next saved to Laserfiche.
            </summary>
            <param name="fieldName">The name of the template field to append to the
            represented template's field list.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.RemoveField(System.String)">
            <summary>
            Attempts to remove a template field from the represented template's set of
            fields.  The change will be finalized when pending changes are next saved to
            Laserfiche.
            </summary>
            <param name="fieldName">The name of the field to remove from the represented
            template's set of fields.</param>
            <returns>True if the field was found and removed, false if the specified
            field name was not found in the template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.RemoveFieldAt(System.Int32)">
            <summary>
            Removes a field from the template at the specified position.  The change
            will be finalized when pending changes are next saved to Laserfiche.
            </summary>
            <param name="position">The index (base 1) of the field to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.MoveField(System.String,System.Int32)">
            <summary>
            Changes the position of a field in the template.  The change will be finalized
            when pending changes are next saved to Laserfiche.
            </summary>
            <param name="fieldName">The name of the field to move.</param>
            <param name="newPosition">The index (base 1) of the new position.</param>
            <returns>The index of the field's new position in the template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.MoveFieldAt(System.Int32,System.Int32)">
            <summary>
            Changes the position of a field in the template.  The changes will
            be finalized when pending changes are next saved to Laserfiche.
            </summary>
            <param name="oldPosition">The index (base 1) of the original position
            of the field.</param>
            <param name="newPosition">The index (base 1) of the new position.</param>
            <returns>The index of the field's new position in the template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.ContainsField(System.String)">
            <summary>
            Determines if the represented template contains a field with the
            specified name.
            </summary>
            <param name="fieldName">The name of the template field to check the
            assigned field set for.</param>
            <returns>True if a template field with the specified name was found
            among the assigned fields.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.PositionOfField(System.String)">
            <summary>
            Attempts to determines the position of the specified field in the
            represented template.
            </summary>
            <param name="fieldName">The name of the template field to return
            the position of in the represented template.</param>
            <returns>The 1-based index indicating the position of the specified
            field if the field was found, 0 if the field was not found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.ClearFields">
            <summary>
            Removes all fields assigned to the represented template definition next time
            pending changes are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.Delete">
            <summary>
            Marks the represented template for deletion next time pending changes
            are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.HasFormLogicRules">
            <summary>
            Returns a boolean indicating if the represented template has form logic
            (i.e., dynamic fields) rules assigned.
            </summary>
            <returns>A boolean indicating if the represented template has form logic
            (i.e., dynamic fields) rules assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetAssignedEntryCount">
            <summary>
            Gets a count of the number of entries that have this template assigned.
            </summary>
            <returns>A count of the number of entries that have this template assigned.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetFormLogicRules">
            <summary>
            Returns a list of the form logic rules configured on the represented template.
            </summary>
            <returns>A list of the form logic rules configured on the represented
            template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetAccessControl">
            <summary>
            Returns a <c>TemplateSecurity</c> instance which represents the access control
            information for the represented template.
            </summary>
            <returns>A <c>TemplateSecurity</c> instance which represents the access control
            information for the represented template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.SetAccessControl(Laserfiche.RepositoryAccess.TemplateSecurity)">
            <summary>
            Sets the access control information for the represented template.
            </summary>
            <param name="templateSecurity">A <c>TemplateSecurity</c> instance which represents
            the new access control settings for the represented template.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetEffectiveRights">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the represented template.
            </summary>
            <returns>>Members of the <c>TemplateRights</c> enumeration specifying the
            current session's effective access to the represented template.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetEffectiveRights(System.Security.Principal.IdentityReference)">
            <summary>
            Calculates and returns the effective rights the specified user has to the
            represented template.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the user to check access rights for.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetEffectiveRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Calculates and returns the effective rights the specified user has to the
            represented template.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to the user to check access rights for.</param>
            <returns>Zero or more values from the <c>TemplateRights</c> enumeration
            specifying which access rights the specified user has.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Returns the rights granted to the specified trustee via the represented
            template's access control list (ACL).
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to the Laserfiche trustee used to determine which rights are granted
            via the template's ACL.</param>
            <returns>The rights granted to the specified trustee via the represented
            template's access control list (ACL).</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateInfo.GetAclDisplayRights(System.Security.Principal.IdentityReference)">
            <summary>
            Returns the rights granted to the specified trustee via the represented
            template's access control list (ACL).
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the trustee used to determine which rights are granted
            via the template's ACL.</param>
            <returns>The rights granted to the specified trustee via the represented
            template's access control list (ACL).</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateInfoReader">
            <summary>
            Provides the ability to enumerate <c>TemplateInfo</c> instances
            which represent the templates in a Laserfiche repository that match
            the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateSecurity">
            <summary>
            Represents the access control information for a template
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.#ctor">
            <summary>
            Initializes a <c>TemplateSecurity</c> instance with an empty ACL.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateSecurity.AccessRightType">
            <summary>
            Gets a <c>Type</c> instance for the <c>TemplateRights</c> type,
            representing the access rights supported for templates.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateSecurity.AccessRuleType">
            <summary>
            Gets a <c>Type</c> instance for the <c>TemplateAccessRule</c> type,
            representing the access control entries for templates.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identityReference">Not used.</param>
            <param name="accessMask">Not used.</param>
            <param name="isInherited">Not used.</param>
            <param name="inheritanceFlags">Not used.</param>
            <param name="propagationFlags">Not used.</param>
            <param name="flags">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateSecurity.AuditRuleType">
            <summary>
            This property is not supported.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.AddAccessRule(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Adds an access control entry (ACE) to the ACL represented by this instance.
            </summary>
            <param name="rule">A <c>TemplateAccessRule</c> representing the new ACE to
            add to the template security configuration.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.GetOwner(System.Type)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="targetType">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.RemoveAccessRule(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Removes the specified access control entry from the represented security
            configuration.
            </summary>
            <param name="rule">A <c>TemplateAccessRule</c> instance which represents the
            access control entry to remove from the represented security configuration.</param>
            <returns>True if the specified <c>TemplateAccessRule</c> instance was found
            and removed, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.RemoveAccessRuleAll(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Removes all the access rules with an account identity that matches the
            one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>TemplateAccessRule</c> instance whose trustee
            identity matches the account identities of all the access rules
            removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.RemoveAccessRuleSpecific(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Removes all the access rules with an account identity and ACE type that
            match the one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>TemplateAccessRule</c> instance whose trustee
            identity and ACE type match the access rules removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.ResetAccessRule(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Removes all the access rules managed by this instance and resets the ACL
            to consist of only the specified access rule.
            </summary>
            <param name="rule">The <c>TemplateAccessRule</c> instance which will comprise
            the new ACL.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.SetAccessRule(Laserfiche.RepositoryAccess.TemplateAccessRule)">
            <summary>
            Removes all access rules in the existing ACL which match the ACE type
            and trustee identity of the rule specified by the <paramref name="rule"/>
            argument, and adds the argument to the ACL.
            </summary>
            <param name="rule">The <c>TemplateAccessRule</c> instance used when removing
            matching access rules from the ACL and to add to the ACL once the removal
            is complete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.SetOwner(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identity">Not used.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateSecurity.TemplateRightsToString(Laserfiche.RepositoryAccess.TemplateRights)">
            <summary>
            Returns the standard Laserfiche string representation for the specified set of
            template rights.
            </summary>
            <param name="rights">The set of template rights to get the string representation
            of.</param>
            <returns>The standard Laserfiche string representation for the specified set of
            template rights.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TextAnnotation">
            <summary>
            The base class for Laserfiche annotations which can be applied to a span of text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextAnnotation.Color">
            <summary>
            The color of the annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextAnnotation.TextStart">
            <summary>
            The index of the starting character position of this annotation in the page text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextAnnotation.TextEnd">
            <summary>
            The index of the ending character position of this annotation in the page text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextAnnotation.ImageRectangles">
            <summary>
            A list of rectangle coordinates on the page image which correspond to the
            span of text that this annotation covers.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextAnnotation.IsLinked">
            <summary>
            Gets a boolean indicating if the annotation has a linked text and
            image portion.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextAnnotation.LinkTextToImage(Laserfiche.RepositoryAccess.TextLinker)">
            <summary>
            Adds the image portion of the represented annotation based off the
            configured text range.
            </summary>
            <param name="info">A <c>TextLinker</c> instance corresponding to the
            page that the represented annotation resides on.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextAnnotation.LinkImageToText(Laserfiche.RepositoryAccess.TextLinker)">
            <summary>
            Adds the text portion of the represented annotation based off the
            configured image rectangle or rectangles.
            </summary>
            <param name="info">A <c>TextLinker</c> instance corresponding to the
            page that the represented annotation resides on.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TextBoxAnnotation">
            <summary>
            Represents a text box annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.Coordinates">
            <summary>
            The coordinates of the text box on the page image.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.FillColor">
            <summary>
            The fill color of the text box interior.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.BorderColor">
            <summary>
            The line color of the text box border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.BorderStyle">
            <summary>
            The line style of the text box border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.BorderThickness">
            <summary>
            The line style of the text box border.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.Opacity">
            <summary>
            The opacity of the text box annotation, from 0 (totally transparent) to
            100 (totally opaque).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.Text">
            <summary>
            The value of the text inside the text box.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.TextSize">
            <summary>
            The size of the text inside the text box in points.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextBoxAnnotation.Direction">
            <summary>
            The direction of the text in the annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextBoxAnnotation.#ctor">
            <summary>
            Initializes a <c>TextBoxAnnotation</c> representing a new text box
            annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextBoxAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Constructs a <c>TextBoxAnnotation</c> object representing a new text box
            annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The ID of the page in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Thumbnail">
            <summary>
            Represents the data for a page image thumbnail stored in a Laserfiche
            document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.DocumentId">
            <summary>
            Gets the document id , which contains the thumbnail page.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.PageId">
            <summary>
            Gets the page id from which the thumbnail is generated.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.Version">
            <summary>
            Gets the thumbnail format version, which is normally 1.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.Flags">
            <summary>
            Gets the thumbnail's flags byte.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.Rotation">
            <summary>
            Gets the thumbnail's degree of rotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.ItemId">
            <summary>
            Gets the item ID of this thumbnail in multiple thumbnail request
            responses.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.ApproximateWidth">
            <summary>
            Gets the approximate horizontal image resolution of the thumbnail in pixels/dots per inch.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.ApproximateHeight">
            <summary>
            Gets the approximate vertical image resolution of the thumbnail in pixels/dots per inch.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.Data">
            <summary>
            Gets the raw data bytes of the thumbnail image.  This does not include
            the Laserfiche specific thumbnail header.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Thumbnail.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the thumbnail has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Thumbnail.#ctor(System.Int32,System.Int64,System.IO.Stream)">
            <summary>
            Initializes a <c>Thumbnail</c> instance from a data stream containing the
            raw Laserfiche thumbnail data.  The stream will be closed once the data
            for a single thumbnail has been read.
            </summary>
            <param name="documentId"> The document id which contain this Thumbnail page.</param>
            <param name="pageId"> The page id from which the thumbnail is generated.</param>
            <param name="input">A <c>Stream</c> instance from which the Laserfiche
            thumbnail data shall be read.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Thumbnail.#ctor(System.IO.Stream)">
            <summary>
            Initializes a <c>Thumbnail</c> instance from a data stream containing the
            raw Laserfiche thumbnail data.  The stream will be closed once the data
            for a single thumbnail has been read.
            </summary>
            <param name="input">A <c>Stream</c> instance from which the Laserfiche
            thumbnail data shall be read.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Thumbnail.#ctor(System.Int32,System.Int64,System.IO.BinaryReader)">
            <summary>
            Initializes a <c>Thumbnail</c> instance from a <c>BinaryReader</c>
            which will return the raw Laserfiche thumbnail data.  The <c>BinaryReader</c>
            will be positioned immediately after the end of the thumbnail.
            </summary>
            <param name="documentId"> The document id which contain this Thumbnail page.</param>
            <param name="pageId"> The ID of the page from which the thumbnail is generated.</param>
            <param name="reader">A <c>BinaryReader</c> instance</param> that will
            be used to read the thumbnail data.
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Thumbnail.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a <c>Thumbnail</c> instance from a <c>BinaryReader</c>
            which will return the raw Laserfiche thumbnail data.  The <c>BinaryReader</c>
            will be positioned immediately after the end of the thumbnail.
            </summary>
            <param name="reader">A <c>BinaryReader</c> instance</param> that will
            be used to read the thumbnail data.
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Thumbnail.#ctor(System.Byte[])">
            <summary>
            Initializes a <c>Thumbnail</c> instance from an array of bytes containing
            the raw data of a Laserfiche thumbnail.
            </summary>
            <param name="thumbnailData">An array of bytes containing the raw data of a
            Laserfiche thumbnail.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SystemProperty">
            <summary>
            An enumeration of system properties that tokens can draw their values from.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.Date">
            <summary>
            The current date without a time portion.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.Time">
            <summary>
            The current time without a date portion.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.DateTime">
            <summary>
            The current date and time.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.GCount">
            <summary>
            The value of the %(gcount) token.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.EntryId">
            <summary>
            The entry ID of the set entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.EntryName">
            <summary>
            The name of the set entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.EntryUuid">
            <summary>
            The UUID of the set entry.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.ParentId">
            <summary>
            The entry ID of the set entry's parent folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.ParentName">
            <summary>
            The name of the set entry's parent folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.ParentUuid">
            <summary>
            The UUID of the set entry's parent folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.UserName">
            <summary>
            The name of the current user.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SystemProperty.UserSid">
            <summary>
            The security identifier (SID) of the current user.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TokenFormat">
            <summary>
            An enumeration of token formats.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenFormat.DollarSign">
            <summary>
            The legacy token format which uses dollar signs, e.g., $token$.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenFormat.PercentSign">
            <summary>
            The standard token format which uses a percent sign followed by
            parenthesis, e.g., %(token).
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TokenSource">
            <summary>
            An enumeration of sources from where to draw values for custom tokens
            during substitution.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenSource.FixedString">
            <summary>
            A pre-defined string value.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenSource.SystemProperty">
            <summary>
            A Laserfiche system property; one of the <c>SystemProperty</c> enumeration members.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenSource.FixedTemplateField">
            <summary>
            A pre-defined field.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenSource.VariableTemplateField">
            <summary>
            A field which can vary based upon a parameter.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TokenSource.Delegate">
            <summary>
            A value returned by a delegate.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TokenDefinition">
            <summary>
            Represents the definition of a token which specifies the name(s) of the token
            and how it is processed by the <c>TokenSubstituter</c> class.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.GetSupportedObjectTypes">
            <summary>
            Gets a list of supported object types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.AddName(System.String)">
            <summary>
            Adds a universal alias for the token to the token name collection.
            </summary>
            <param name="name">The new universal alias for the token.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.AddName(System.String,System.String)">
            <summary>
            Adds a locale specific alias for the token to the token name collection.
            </summary>
            <param name="name">The new locale specific alias for the token.</param>
            <param name="localeName">The name of the locale that the alias
            will be valid under.  If <paramref name="localeName"/> is a null
            reference or an empty string then a universal alias is added.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.ClearNames">
            <summary>
            Removes all aliases for all locales from the token name collection.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.ClearNames(System.String)">
            <summary>
            Removes all aliases for the specified locale from the token name collection.
            Specify a null reference or an empty string for the locale name to remove
            all universal aliases.
            </summary>
            <param name="localeName">The name of the locale for which all aliases
            will be cleared.  If <paramref name="localeName"/> is a null
            reference or an empty string then all universal aliases are removed.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.Locales">
            <summary>
            Returns a collection of all locale names that have corresponding
            token aliases.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenDefinition.GetNames(System.String)">
            <summary>
            Returns all of the aliases for the specified locale.  Pass in a null
            reference or the empty string to retrieve universal aliases.
            </summary>
            <param name="localeName">The name of the locale to return token aliases
            for.</param>
            <returns>An array of strings specifying all of the aliases for the specified
            locale.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.Format">
            <summary>
            Gets or sets the token formatting styles that will be recognized.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.SourceLocation">
            <summary>
            Gets or sets the source of values during token substitution.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.SourceValue">
            <summary>
            Gets or sets the value that will be substituted in for the token.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.ObjectType">
            <summary>
            Gets or sets the value of the object type prefix.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TokenDefinition.GetTokenValue">
            <summary>
            The type of the delegate that will be invoked when substituting token values
            when <c>SourceLocation</c> is set to <c>Delegate</c>.
            </summary>
            <param name="tokenName">The name of the token that was used.</param>
            <param name="argument">The argument, if one was provided.</param>
            <returns>The value to be substituted into the string.  If the return
            value is not a string an attempt will be made to convert it to a
            string.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenDefinition.CustomCallback">
            <summary>
            Gets or sets the delegate that will be invoked when substituting
            token values when <c>SourceLocation</c> is set to <c>Delegate</c>.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldValue">
            <summary>
            Represents the value of a field along with a member of the <c>FieldType</c>
            enumeration specifying its Laserfiche field type.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ITokenSubstitutionContext">
            <summary>
            An interface that is implemented by token substitution contexts.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ITokenSubstitutionContext.GetSystemProperty(Laserfiche.RepositoryAccess.SystemProperty)">
            <summary>
            Returns the value of the specified system property using the configured
            context.
            </summary>
            <param name="systemProperty">A member of the <c>SystemProperty</c> enumeration
            specifying the system property.</param>
            <returns>The value of the specified system property using the configured
            context.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ITokenSubstitutionContext.GetFieldValue(System.String,System.String)">
            <summary>
            Returns the value of the specified user-defined property (field) using the
            configured context.
            </summary>
            <param name="objectType">The name of the object type whose property shall
            be returned.</param>
            <param name="fieldName">The name of the property to return.</param>
            <returns>A <c>FieldValue</c> value containing the value of the field.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TokenSubstituter">
            <summary>
            Implements replacing tokens in an input string with their corresponding
            values, following the standard rules for Laserfiche tokens.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TokenSubstituter.WillEscapeOutput">
            <summary>
            Gets or sets a boolean indicating whether or not the output of any substitution
            will be escaped.  This will prevent recursive token substitution if the output of
            the token substitution is also processed.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>TokenSubstituer</c> instance with no token definitions.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.#ctor(Laserfiche.RepositoryAccess.TokenSubstituter)">
            <summary>
            Initializes a new <c>TokenSubstituter</c> from an existing
            <c>TokenSubstituter</c> instance, cloning all settings from the source instance.
            </summary>
            <param name="source">An existing <c>TokenSubstituter</c> instance to clone.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.GetDefaultContext(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Returns a default token substitution context implementation that behaves
            similarly to the standard context implemented by the Laserfiche content server.
            </summary>
            <param name="entryInfo">An <c>EntryInfo</c> instance representing the
            Laserfiche entry to draw entry-specific property values from.</param>
            <returns>A default token substitution context implementation that behaves
            similarly to the standard context implemented by the Laserfiche content
            server.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.SubstituteTokens(System.String,Laserfiche.RepositoryAccess.ITokenSubstitutionContext,Laserfiche.RepositoryAccess.ILfLocale)">
            <summary>
            Processes a string, searching for tokens that have been previously
            registered, replacing any tokens found with their associated values.
            </summary>
            <param name="input">The input string to process.</param>
            <param name="context">An instance of a type that implements the
            <c>ITokenSubstitutionContext</c> interface which represents the token
            substitution context to use.</param>
            <param name="locale"></param>
            <returns>The processed string with all registered tokens present
            in the string replaced with their values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.RegisterToken(Laserfiche.RepositoryAccess.TokenDefinition)">
            <summary>
            Registers a token definition with the token substitution engine so that
            it can be recognized in input strings and processed.
            </summary>
            <param name="tokenDef">A <c>TokenDefinition</c> instance which specifies
            the settings for the token definition.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.RegisterTokens(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.TokenDefinition})">
            <summary>
            Registers a collection of token definitions with the token substitution
            engine so that they can be recognized in input strings and processed.
            </summary>
            <param name="tokenDefs">A collection of <c>TokenDefinition</c> instances
            which specify the settings for the token definitions.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.SubstituteTokens(System.String,Laserfiche.RepositoryAccess.ITokenSubstitutionContext,Laserfiche.RepositoryAccess.ILfLocale,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}@)">
            <summary>
            Processes a string, searching for tokens that have been previously
            registered, replacing any tokens found with their associated values.
            </summary>
            <param name="input">The input string to process.</param>
            <param name="context">An instance of a type that implements the
            <c>ITokenSubstitutionContext</c> interface which represents the token
            substitution context to use.</param>
            <param name="locale"></param>
            <param name="replacedTokens">The list of replaced tokens and their original
            corresponding positions in the input string.</param>
            <returns>The processed string with all registered tokens present
            in the string replaced with their values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TokenSubstituter.RegisterSystemTokens">
            <summary>
            Registers the standard tokens used by Laserfiche with the token substituter.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Trustee">
            <summary>
            A collection of static methods for managing aspects of trustees in
            a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information stored in the current Laserfiche repository about
            the specified trustee that is common to all Laserfiche trustees.
            </summary>
            <param name="trusteeId">The ID of the Laserfiche account to retrieve
            Laserfiche trustee information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance which represents the common
            Laserfiche trustee information for the specified account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information stored in the current Laserfiche repository about
            the specified trustee that is common to all Laserfiche trustees.
            </summary>
            <param name="trusteeName">The name of the Laserfiche account to retrieve
            Laserfiche trustee information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance which represents the common
            Laserfiche trustee information for the specified account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetInfo(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information stored in the current Laserfiche repository about
            the specified trustee that is common to all Laserfiche trustees.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a trustee to retrieve Laserfiche trustee information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance which represents the common
            Laserfiche trustee information for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetInfo(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information stored in the current Laserfiche repository about
            the specified trustee that is common to all Laserfiche trustees.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance that represents
            the security identifier (SID) of the trustee to retrieve information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance which represents the common
            Laserfiche trustee information for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetInfo(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves information stored in the current Laserfiche repository about
            the specified trustee that is common to all Laserfiche trustees.
            </summary>
            <param name="lfIdent">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche account to retrieve Laserfiche trustee
            information for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance which represents the common
            Laserfiche trustee information for the specified account.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetEffectiveSecurity(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeInfo</c> instance that contains information about the effective
            security settings that will apply when the referenced trustee logs in to the current
            repository, if the trustee is a user.
            </summary>
            <param name="lfIdent">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche account to retrieve effective account security for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance that contains information about the effective
            security settings that will apply when the referenced trustee logs in to the current
            repository, if the trustee is a user.</returns>
            <remarks>The most accurate way to retrieve effective account security is to
            log in with that user account and then to query the security-related properties
            of the <c>Session</c> instance.  The <c>GetEffectiveSecurity</c> method can
            sometimes give incorrect results in rare cases.</remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetEffectiveSecurity(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeInfo</c> instance that contains information about the effective
            security settings that will apply when the referenced trustee logs in to the current
            repository, if the trustee is a user.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance that represents the
            security identifier (SID) of the Laserfiche account to retrieve effective
            account security for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeInfo</c> instance that contains information about the effective
            security settings that will apply when the referenced trustee logs in to the current
            repository, if the trustee is a user.</returns>
            <remarks>The most accurate way to retrieve effective account security is to
            log in with that user account and then to query the security-related properties
            of the <c>Session</c> instance.  The <c>GetEffectiveSecurity</c> method can
            sometimes give incorrect results in rare cases.</remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.SetInfo(System.Int32,Laserfiche.RepositoryAccess.TrusteeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets common Laserfiche trustee information for the specified Laserfiche
            account in the current Laserfiche repository.
            </summary>
            <param name="trusteeId">The ID of the Laserfiche account to set the
            trustee information for.</param>
            <param name="info">A <c>TrusteeInfo</c> instance that specifies the new
            Laserfiche trustee settings for the trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.SetInfo(System.String,Laserfiche.RepositoryAccess.TrusteeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets common Laserfiche trustee information for the specified Laserfiche
            account in the current Laserfiche repository.
            </summary>
            <param name="trusteeName">The name of the Laserfiche account to set the
            trustee information for.</param>
            <param name="info">A <c>TrusteeInfo</c> instance that specifies the new
            Laserfiche trustee settings for the trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.SetInfo(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.TrusteeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets common Laserfiche trustee information for the specified Laserfiche
            account in the current Laserfiche repository.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance which represents
            a reference to the Laserfiche account to set common Laserfiche trustee
            information for.</param>
            <param name="info">A <c>TrusteeInfo</c> instance that specifies the new
            Laserfiche trustee settings for the trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.DeleteSecurity(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes all Laserfiche specific trustee information for the specified
            Windows account.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to the Windows account to delete the Laserfiche specific
            trustee information for.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.DeleteSecurity(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes all Laserfiche specific trustee information for the specified trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance that represents the
            security identifier (SID) of the trustee to delete the Laserfiche specific
            trustee information for.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.DeleteSecurity(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes all Laserfiche specific trustee information for the specified trustee.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance that represents
            a reference to a trustee to delete the Laserfiche specific trustee information
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetAttributes(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes for the specified trustee.
            </summary>
            <param name="ident">An <c>IdentityReference</c> which represents a reference
            to the trustee to retrieve the attribute collection for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetAttributes(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes for the specified trustee.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche trustee to retrieve the attribute collection
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetAttributes(System.Security.Principal.IdentityReference,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes with a name that begins with a specified prefix,
            for the specified trustee.
            </summary>
            <param name="ident">An <c>IdentityReference</c> which represents a reference
            to the trustee to retrieve the attribute collection for.</param>
            <param name="filter">A string prefix filter for the trustee attribute names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes with a name that begins with a specified prefix,
            for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetAttributes(Laserfiche.RepositoryAccess.AccountReference,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes with a name that begins with a specified prefix,
            for the specified trustee.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche trustee to retrieve the attribute collection
            for.</param>
            <param name="filter">A string prefix filter for the trustee attribute names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            set of trustee attributes with a name that begins with a specified prefix,
            for the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetLinkedAccounts(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances for trustees linked to the specified
            trustee.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance specifying the
            trustee to return linked accounts to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances for trustees linked to the specified
            trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetLinkedAccounts(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing all the trustees linked
            to the specified trustee.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance specifying the
            trustee to return linked accounts to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances for trustees linked to the specified
            trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumInheritedGroups(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing all the groups the specified
            trustee is a member of.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance specifying the
            trustee to return groups for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the groups the specified
            trustee is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumInheritedGroups(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing all the groups the specified
            trustee is a member of.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance specifying the
            trustee to return groups for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the groups the specified
            trustee is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumGroups(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the lf groups the 
            specified trustee is a direct member of.
            </summary>
            <param name="acct">An <c>AccountReference</c> instance specifying the
            trustee to return groups for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the groups the specified
            trustee is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumGroups(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the lf groups the
            specified trustee is a direct member of.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance specifying the
            trustee to return groups for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceCollection</c> instance containing
            <c>AccountReference</c> instances representing the groups the specified
            trustee is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumAllWindowsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns a <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have trustee settings or log in authorization
            settings configured in the current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have trustee settings or log in authorization
            settings configured in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumGrantedWindowsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns a <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have been explicitly granted log on access to the
            current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have been explicitly granted log on access to the
            current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumDeniedWindowsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns a <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have been explicitly denied log on access to the
            current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WindowsAccountReader</c> instance which can be used to enumerate
            the Windows accounts which have been explicitly denied log on access to the
            current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumSecuredLdapAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have a security configuration.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have a security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumDeniedLdapAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have been denied access to log in to Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have been denied access to log in to Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumGrantedLdapAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have been granted access to log in to Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LDAP accounts that have been granted access to log in to Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumSecuredLfdsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have a security configuration.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have a security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumDeniedLfdsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have been denied access to log in to Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have been denied access to log in to Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.EnumGrantedLfdsAccounts(Laserfiche.RepositoryAccess.Session,System.Int32,System.Int32)">
            <summary>
            Returns an <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have been granted access to log in to Laserfiche.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AccountReferenceReader</c> instance which can be used to enumerate
            all LFDS accounts that have been granted access to log in to Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetWatermarks(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>WatermarkCollection</c> instance which contains information about
            the watermarks assigned to the specified trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance specifying the trustee
            to return assigned watermarks to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>WatermarkCollection</c> instance which contains information about
            the watermarks assigned to the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.AddWatermark(System.Security.Principal.SecurityIdentifier,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Associates a group watermark string with the specified trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance specifying the trustee
            to add a group watermark string to.</param>
            <param name="newWatermark">The watermark string to add.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.RemoveWatermark(System.Security.Principal.SecurityIdentifier,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Disassociates a group watermark string from the specified trustee.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance specifying the trustee
            to remove the group watermark string from.</param>
            <param name="oldWatermark">The watermark string to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetAssignedTags(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns an <c>AssignedTagCollection</c> instance which contains information about
            the tags that are assigned to the specified trustee.
            </summary>
            <param name="sid">>A <c>SecurityIdentifier</c> instance specifying the trustee
            to return the assigned tags for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>An <c>AssignedTagCollection</c> instance which contains information about
            the tags that are assigned to the specified trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.AssignTag(Laserfiche.RepositoryAccess.AccountReference,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Assigns an entry tag to the specified trustee.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance specifying the account
            to assign the tag to.</param>
            <param name="tagId">A tag ID specifying the tag to assign.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.UnassignTag(Laserfiche.RepositoryAccess.AccountReference,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Removes a tag assignment from the specified trustee.
            </summary>
            <param name="acctRef">An <c>AccountReference</c> instance specifying the account
            to remove the tag assignment from.</param>
            <param name="tagId">A tag ID specifying the tag to unassign.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.GetEffectiveAccessTokenInfo(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieve the information stored in the access token for a trustee as if the trustee logs in.
            The retrieved information maybe different from what will actually be generated but LFS will try to
            make them as close as possible.
            </summary>
            <param name="sid">The <c>SecurityIdentifier</c> of the target trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Trustee.BatchGetEffectiveAccessTokenInfo(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieve the information stored in the access tokens for some trustees as if the trustees log in.
            The retrieved information maybe different from what will actually be generated but LFS will try to
            make them as close as possible.
            </summary>
            <param name="sids">A collection of <c>SecurityIdentifier</c> of the target trustees.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TrusteeAttributeCollection">
            <summary>
            Represents a collection of trustee attribute values configured for
            a trustee in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeAttributeCollection.Filter">
            <summary>
            Gets or sets the name filter used for this collection.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeAttributeCollection.TrusteeIdentifier">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the
            security identifier (SID) of the trustee whose attributes this instance
            represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeAttributeCollection.Count">
            <summary>
            Gets a count of the number of attributes that have been set on the associated
            trustee.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TrusteeType">
            <summary>
            An enumeration of available trustee types for use with Laserfiche.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TrusteeType.LaserficheUser">
            <summary>
            A Laserfiche user account.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TrusteeType.LaserficheGroup">
            <summary>
            A Laserfiche group account.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TrusteeType.WindowsAccount">
            <summary>
            A Windows account authenticated via Windows authentication.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TrusteeType.LdapAccount">
            <summary>
            An account in an LDAP server.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.TrusteeType.LfdsAccount">
            <summary>
            An account in an LFDS server.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Privileges">
            <summary>
            An enumeration of Laserfiche trustee privilege types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.None">
            <summary>
            No privileges
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Trustee">
            <summary>
            Administer users and groups
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Volume">
            <summary>
            Administer volumes
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Metadata">
            <summary>
            Administer template, field, and certain other metadata definitions
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.EntryAccess">
            <summary>
            Assign entry access rights/see any entry in the recycle bin
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ReadAccess">
            <summary>
            Bypass security checks to have the ability to read any object
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.RecordManager">
            <summary>
            Administer record series and cutoff/uncutoff record folders
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Connection">
            <summary>
            View and disconnect active connections
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ViewAudit">
            <summary>
            Retrieve audit logs from the repository
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.BypassPropertyPasswords">
            <summary>
            Bypass passwords set on an application property
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ConfigureAudit">
            <summary>
            Change auditor settings
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ConfigureSettings">
            <summary>
            Configure various repository-wide settings
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ConfigureSearch">
            <summary>
            Administer indexing options
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.SetPrivileges">
            <summary>
            Assign privileges to a user or group
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ViewActivityLog">
            <summary>
            View the activity log for objects in the repository
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.PurgeEntries">
            <summary>
            Purge entries in the recycle bin
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.BypassFilters">
            <summary>
            Bypass folder filter expression checking when browsing
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ExternalTable">
            <summary>
            Create and delete external table definitions
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.BypassBrowse">
            <summary>
            Bypass browse entry access checking when browsing
            (performance enhancement)
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.SeeAllUserAreas">
            <summary>
            See the user areas of other users
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ClassificationLevels">
            <summary>
            Create, modify and delete security classification levels.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.ModifyAllUserAreas">
            <summary>
            Modify the user areas of other users
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Stamp">
            <summary>
            Create and modify all stamps
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.FilterExpressions">
            <summary>
            Create and modify filter expressions
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Tag">
            <summary>
            Create and modify all tags
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.CreateField">
            <summary>
            Create templates and fields
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.EntryLink">
            <summary>
            Create and modify all entry links
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.RepositoryProperties">
            <summary>
            Create and modify all repository properties
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.Certificates">
            <summary>
            Upload and delete certificates in the repository
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.SetEntryComment">
            <summary>
            Set comments on entries
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.DeleteVersion">
            <summary>
            Permanently destroy a version in a version-controlled document
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.Privileges.All">
            <summary>
            All privileges
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FeatureRights">
            <summary>
            An enumeration of Laserfiche feature rights.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.None">
            <summary>
            No rights.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Scan">
            <summary>
            The right to scan documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Export">
            <summary>
            The right to export documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Print">
            <summary>
            The right to print documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Search">
            <summary>
            The right to perform searches.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Delete">
            <summary>
            The right to delete entries.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Import">
            <summary>
            The right to import new entries.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.AddTemplate">
            <summary>
            The right to create new templates.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.AddVolume">
            <summary>
            The right to create new volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Move">
            <summary>
            The right to move entries and pages within a repository.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Process">
            <summary>
            The right to OCR, Snapshot, index, and extract text from
            an electronic file.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Edit">
            <summary>
            The right to modify the text associated with a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.AssignTemplate">
            <summary>
            The right to assign templates to entries.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.Migrate">
            <summary>
            The right to migrate entries between volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.GetInformation">
            <summary>
            The right to view extended property information.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.ApplyWatermarks">
            <summary>
            The right to apply watermarks to documents during export.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.AllTagFeatureRights">
            <summary>
            The right to manage entry tags.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FeatureRights.All">
            <summary>
            All feature rights.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AuditClasses">
            <summary>
            An enumeration of Laserfiche audit classes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.None">
            <summary>
            No audit events
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Session">
            <summary>
            Events related to sessions, e.g., logging in, out, terminating sessions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.AuditConfiguration">
            <summary>
            Events involving changing the configuration of the auditing subsystem.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Account">
            <summary>
            Events related to modifying the account database, or changing authentication
            or log on authorization.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Volume">
            <summary>
            Events related to the management of volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.PrivilegedOperation">
            <summary>
            Events for a variety of privileged operations.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Entry">
            <summary>
            Events involving entries, such as moving, copying and deleting.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Metadata">
            <summary>
            Events involving the management of metadata definitions, such as
            templates, fields and tags.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.RecordsManagement">
            <summary>
            Events related to records management.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Search">
            <summary>
            Events related to searching.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Annotation">
            <summary>
            Events involving annotations in documents.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Page">
            <summary>
            Events involving operations on document pages.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.View">
            <summary>
            Events related to viewing the contents of a document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Export">
            <summary>
            Events involving printing or exporting data from Laserfiche.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.FilePlan">
            <summary>
            Events related to the management of the records management file plan.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.Custom">
            <summary>
            Custom audit events.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.EntryListing">
            <summary>
            Events logged when entries appear in an entry listing, such as a folder
            listing or search results.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.AuditClasses.All">
            <summary>
            All audit events.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TrusteeInfo">
            <summary>
            Represents the properties that are common to all trustees in a Laserfiche
            repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.AuditMaskAssigned">
            <summary>
            Gets a boolean indicating if an audit mask was assigned to the trustee
            this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.Sid">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the security
            identifier (SID) of the trustee this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.TrusteeType">
            <summary>
            Gets a member of the <c>TrusteeType</c> enumeration which specifies the
            type of represented trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LdapDistinguishedName">
            <summary>
            Gets the distinguished name (DN) of the LDAP account, if the represented
            trustee is an LDAP account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LdapFriendlyName">
            <summary>
            Gets the friendly name of the LDAP account, if the represented trustee is an
            LDAP account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.IsLdapUser">
            <summary>
            Gets a boolean indicating if the account is an LDAP user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.IsSecured">
            <summary>
            Gets a boolean indicating if the represented trustee is explicitly authorized
            or denied log on access.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LfdsName">
            <summary>
            Gets the name of the LFDS account, if the represented
            trustee is an LFDS account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.IsLfdsUser">
            <summary>
            Gets a boolean indicating if the account is an LFDS user or LFDS group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LfdsOrganization">
            <summary>
            Gets the organization of the LFDS account, if the represented
            trustee is an LFDS account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.IsLaserficheAccount">
            <summary>
            Gets a boolean which indicates whether this instance represents a Laserfiche
            account (true if it does).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.Privileges">
            <summary>
            Gets or sets members of the <c>Privileges</c> enumeration which specifies
            the Laserfiche privileges that are assigned directly to this trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.FeatureRights">
            <summary>
            Gets or sets members of the <c>FeatureRights</c> enumeration which specifies
            the Laserfiche feature rights (aka user interface flags) that are assigned
            directly to this trustee.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.SuccessAuditMask">
            <summary>
            Gets or sets members of the <c>AuditClasses</c> enumeration which specifies
            which audit event classes we wish to audit for the trustee when a success
            event in one of specified the classes occurs.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.FailureAuditMask">
            <summary>
            Gets or sets members of the <c>AuditClasses</c> enumeration which specifies
            which audit event classes we wish to audit for the trustee when a failure
            event in one of specified the classes occurs.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.ReadOnlyAccess">
            <summary>
            Gets or sets a boolean indicating if this trustee will have read-only
            access to the current repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LastLogOnUtc">
            <summary>
            Gets the date and time of the last log on for the represented account
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LastLogOn">
            <summary>
            Gets the date and time of the last log on for the represented account
            in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LastLogOutUtc">
            <summary>
            Gets the date and time of the last log out for the represented account
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LastLogOut">
            <summary>
            Gets the date and time of the last log out for the represented account
            in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.LinkedAccounts">
            <summary>
            Gets an <c>AccountReferenceCollection</c> instance containing <c>AccountReference</c>
            instances that reference the accounts linked to the represented trustee.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.#ctor">
            <summary>
            Initializes a <c>TrusteeInfo</c> instance which has default values for
            all properties and does not represent any specific trustee.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.GetAttributes">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            collection of all stored trustee attributes and their values on the
            represented trustee.
            </summary>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            collection of all stored trustee attributes and their values on the
            represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.GetAttributes(System.String)">
            <summary>
            Returns a <c>TrusteeAttributeCollection</c> instance which represents the
            collection of stored trustee attributes and values with the specified name prefix.
            </summary>
            <param name="filter">A name prefix filter to use when retrieving the
            attributes.</param>
            <returns>A <c>TrusteeAttributeCollection</c> instance which represents the
            collection of stored trustee attributes and values with the specified name
            prefix.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TrusteeInfo.Tags">
            <summary>
            Gets an <c>AssignedTagCollection</c> instance which represents the tags
            assigned to the represented trustee.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.GetWatermarks">
            <summary>
            Returns a <c>WatermarkCollection</c> instance which represents the collection
            of all group watermarks assigned to the represented trustee.
            </summary>
            <returns>A <c>WatermarkCollection</c> instance which represents the collection
            of all group watermarks assigned to the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasFailureAuditMask(Laserfiche.RepositoryAccess.AuditClasses)">
            <summary>
            Returns a boolean indicating if the requested audit classes are configured
            to be audited on failed operations for the represented trustee.
            </summary>
            <param name="auditmask">An audit mask specifying which audit classes to
            check.</param>
            <returns>A boolean indicating if the requested audit classes are configured
            to be audited on failed operations for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasSuccessAuditMask(Laserfiche.RepositoryAccess.AuditClasses)">
            <summary>
            Returns a boolean indicating if the requested audit classes are configured
            to be audited on successful operations for the represented trustee.
            </summary>
            <param name="auditmask">An audit mask specifying which audit classes to
            check.</param>
            <returns>A boolean indicating if the requested audit classes are configured
            to be audited on successful operations for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasAllPrivileges(Laserfiche.RepositoryAccess.Privileges)">
            <summary>
            Returns a boolean indicating if all of the requested privileges are enabled
            for the represented trustee.
            </summary>
            <param name="pr">The privileges to check.</param>
            <returns>A boolean indicating if all of the requested privileges are enabled
            for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasAnyPrivileges(Laserfiche.RepositoryAccess.Privileges)">
            <summary>
            Returns a boolean indicating if any of the requested privileges are enabled
            for the represented trustee.
            </summary>
            <param name="pr">The privileges to check.</param>
            <returns>A boolean indicating if any of the requested privileges are enabled
            for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasAllFeatureRights(Laserfiche.RepositoryAccess.FeatureRights)">
            <summary>
            Returns a boolean indicating if all of the requested feature rights are enabled
            for the represented trustee.
            </summary>
            <param name="fr">The feature rights to check.</param>
            <returns>A boolean indicating if all of the requested feature rights are enabled
            for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.HasAnyFeatureRights(Laserfiche.RepositoryAccess.FeatureRights)">
            <summary>
            Returns a boolean indicating if any of the requested feature rights are enabled
            for the represented trustee.
            </summary>
            <param name="fr">The feature rights to check.</param>
            <returns>A boolean indicating if any of the requested feature rights are enabled
            for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.AssignTag(Laserfiche.RepositoryAccess.TagInfo)">
            <summary>
            Assigns an entry tag to the represented trustee.  The change will be sent
            to Laserfiche during the next save of pending changes.
            </summary>
            <param name="tagInfo">A <c>TagInfo</c> instance representing the entry
            tag to assign to the represented trustee.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.AssignTag(Laserfiche.RepositoryAccess.AssignedTag)">
            <summary>
            Assigns an entry tag to the represented trustee.  The change will be sent
            to Laserfiche during the next save of pending changes.
            </summary>
            <param name="tagReference">An <c>AssignedTag</c> value representing
            a reference to the entry tag to assign to the represented trustee.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.UnassignTag(Laserfiche.RepositoryAccess.TagInfo)">
            <summary>
            Removes an entry tag assignment from the represented truste.  The change
            will be sent to Laserfiche during the next save of pending changes.
            </summary>
            <param name="tagInfo">A <c>TagInfo</c> instance representing the entry
            tag to unassign from the represented trustee.</param>
            <returns>True if the specified tag is known to be already assigned and will be
            unassigned, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.UnassignTag(Laserfiche.RepositoryAccess.AssignedTag)">
            <summary>
            Removes an entry tag assignment from the represented truste.  The change
            will be sent to Laserfiche during the next save of pending changes.
            </summary>
            <param name="tagReference">An <c>AssignedTag</c> value representing
            a reference to the entry tag to unassign from the represented trustee.</param>
            <returns>True if the specified tag is known to be already assigned and will be
            unassigned, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.AddWatermark(System.String)">
            <summary>
            Adds a watermark string to the set directly assigned to the represented
            trustee.  The change will be sent to Laserfiche during the next save of
            pending changes.
            </summary>
            <param name="watermark">The watermark string to assign to the represented
            trustee.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.RemoveWatermark(System.String)">
            <summary>
            Removes a watermark string that was directly assigned to the represented
            trustee.  The change will be sent to Laserfiche during the next save of
            pending changes.
            </summary>
            <param name="watermark">The watermark string to remove from the represented
            trustee's set of watermark strings.</param>
            <returns>True if the watermark string was found in the set associated
            with the represented trustee and removed, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TrusteeInfo.Delete">
            <summary>
            Marks the represented Laserfiche trustee information for deletion.
            The information will be deleted next time pending changes are sent
            to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ConstraintViolationException">
            <summary>
            Represents a constraint violation error in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ConstraintViolationException.#ctor">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ConstraintViolationException.#ctor(System.Int32)">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance with the specified
            error code.
            </summary>
            <param name="code">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ConstraintViolationException.#ctor(System.String)">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ConstraintViolationException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance with the specified error
            code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ConstraintViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DuplicateObjectException">
            <summary>
            Represents a duplicate object error in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DuplicateObjectException.#ctor">
            <summary>
            Initializes a <c>DuplicateObjectException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DuplicateObjectException.#ctor(System.Int32)">
            <summary>
            Initializes a <c>DuplicateObjectException</c> instance with the specified
            error code.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DuplicateObjectException.#ctor(System.String)">
            <summary>
            Initializes a <c>DuplicateObjectException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DuplicateObjectException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a <c>DuplicateObjectException</c> instance with the specified error
            code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.DuplicateObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>DuplicateObjectException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.GroupInfo">
            <summary>
            Represents a Laserfiche group account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.GroupInfo.TrusteeType">
            <summary>
            Gets the trustee type of the account, which is <c>TrusteeType.LaserficheGroup</c>.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.GroupInfo.Members">
            <summary>
            Gets a collection of <c>AccountReference</c> instances representing the members of the group.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.#ctor">
            <summary>
            Initializes a <c>GroupInfo</c> instance representing a new Laserfiche group account.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.#ctor(Laserfiche.RepositoryAccess.GroupInfo)">
            <summary>
            Initializes a <c>GroupInfo</c> instance initially containing the members of
            the specified <c>GroupInfo</c> instance.
            </summary>
            <param name="source">A <c>GroupInfo</c> instance to copy the member list from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.AddMember(Laserfiche.RepositoryAccess.GroupInfo)">
            <summary>
            Add a member to the Laserfiche group.
            </summary>
            <param name="newMember">A <c>GroupInfo</c> instance which represents a Laserfiche
            group account to add as a member of the represented group.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.AddMember(Laserfiche.RepositoryAccess.UserInfo)">
            <summary>
            Add a member to the Laserfiche group.
            </summary>
            <param name="newMember">A <c>UserInfo</c> instance which represents a Laserfiche
            user account to add as a member of the represented group.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.AddMember(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Adds a member to the Laserfiche group.
            </summary>
            <param name="newMember">An <c>AccountReference</c> instance which represents a
            reference to the account to add as a member of the represented group.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.RemoveMember(System.String)">
            <summary>
            Removes a member from the Laserfiche group.
            </summary>
            <param name="acctName">The name of the account to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.GroupInfo.ClearMembers">
            <summary>
            Removes all the members from the Laserfiche group.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheObjectReader`1">
            <summary>
            Base class for Laserfiche object reader classes.
            </summary>
            <typeparam name="T">A Laserfiche object type.</typeparam>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObjectReader`1.Item">
            <summary>
            Gets a reference to the current object instance in the sequence the
            reader is enumerating.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheRepositoryException">
            <summary>
            Represents errors that originate from Laserfiche.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LaserficheRepositoryException.message_">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheRepositoryException.ErrorCode">
            <summary>
            Gets or sets the Laserfiche error code for this instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.LookupLaserficheErrorMessage(System.Int32)">
            <summary>
            Looks up the localized error message for a Laserfiche error code.
            </summary>
            <param name="errorCode">The Laserfiche error code to return the corresponding
            error message for.</param>
            <returns>The localized error message corresponding to the specified Laserfiche error
            code.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.LookupLaserficheErrorMessage(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Looks up the localized error message for a Laserfiche error code.
            </summary>
            <param name="errorCode">The Laserfiche error code to return the corresponding
            error message for.</param>
            <param name="cultureInfo">The culture info to use for localizing the error message.</param>
            <returns>The localized error message corresponding to the specified Laserfiche error
            code.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor(System.Int32)">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance from the specified
            Laserfiche error code.
            </summary>
            <param name="errorCode">The error code of the Laserfiche error to represent.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor(System.String)">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance with the specified
            message string.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance with the specified
            Laserfiche error code and message.
            </summary>
            <param name="errorCode">The error code of the Laserfiche error to represent.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance with the specified
            message string and a reference to the inner exception that is the cause of the error.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">An <c>Exception</c> instance which is the inner
            exception that represents the cause of the error.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheRepositoryException.#ctor(System.Int32,System.Exception)">
            <summary>
            Initializes a new <c>LaserficheRepositoryException</c> instance with the specified
            Laserfiche error code and a reference to the inner exception that is the cause
            of the error.
            </summary>
            <param name="errorCode">The error code of the Laserfiche error to represent.</param>
            <param name="innerException">An <c>Exception</c> instance which is the inner
            exception that represents the cause of the error.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LaserficheObject">
            <summary>
            Base class for classes representing objects in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObject.IsConnected">
            <summary>
            Gets whether this instance is associated with a <c>Session</c> object.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObject.IsPending">
            <summary>
            Gets whether this instance has pending changes to be saved to a
            Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObject.IsModified">
            <summary>
            Gets whether this instance has been modified since its underlying data
            was retrieved from Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObject.IsNew">
            <summary>
            Gets whether this instance represents a new object in a Laserfiche repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LaserficheObject.Session">
            <summary>
            Gets or sets the associated Session object reference.
            </summary>
            <remarks>
            An object's <c>Session</c> property may only be set when the <c>IsNew</c>
            property is true.  Setting a new object's <c>Session</c> property to null
            removes the object from the Session's pending object save list.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheObject.Refresh(System.Boolean)">
             <summary>
             Sets the state of this instance to the state of the corresponding
             object in a Laserfiche repository.
             </summary>
             <param name="keepChanges">If true, changes to this instance are preserved;
             otherwise they are discarded.</param>
             <remarks>
             <c>Refresh</c> reads data about a Laserfiche object from a repository and
             updates the state of this instance to match the state of the object in
             the repository.  This method is not valid when the <c>IsNew</c> property
             is true, or if the <c>IsConnected</c> property is false.
            
             If <paramref name="keepChanges"/> is true, a best effort will
             be made to avoid overwriting changes made to this instance.  The details
             of what is preserved and under which conditions varies from object type
             to object type.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LaserficheObject.Save">
            <summary>
            Saves the state of this instance to the corresponding object in a
            Laserfiche repository.
            </summary>
            <remarks>
            This method requires the <c>IsConnected</c> property must to be true.  If
            this instance represents a new object, an object creation request will be
            sent.  If this instance represents an existing object in a repository, the
            state of the repository object will be updated to reflect the state of this
            instance.
            </remarks>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LockedObjectException">
            <summary>
            Represents a locked object error in Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LockedObjectException.#ctor">
            <summary>
            Initializes a <c>LockedObjectException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LockedObjectException.#ctor(System.Int32)">
            <summary>
            Initializes a <c>ConstraintViolationException</c> instance with the specified
            error code.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LockedObjectException.#ctor(System.String)">
            <summary>
            Initializes a <c>LockedObjectException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LockedObjectException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a <c>LockedObjectException</c> instance with the specified error
            code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LockedObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>LockedObjectException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.MalformedDataException">
            <summary>
            Represents an error indicating malformed data was received from Laserfiche.
            Try restarting the request and verifying network connectivity.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MalformedDataException.#ctor">
            <summary>
            Initializes a <c>MalformedDataException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MalformedDataException.#ctor(System.String)">
            <summary>
            Initializes a <c>MalformedDataException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MalformedDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>MalformedDataException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.NoConnectionException">
            <summary>
            Represents an error indicating that an operation could not be executed because
            there is no connection to Laserfiche.  Ensure that a valid <c>Session</c> instance
            is available to the object or method.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoConnectionException.#ctor">
            <summary>
            Initializes a <c>NoConnectionException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoConnectionException.#ctor(System.String)">
            <summary>
            Initializes a <c>NoConnectionException</c> instance with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.NoConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a <c>NoConnectionException</c> instance with the specified message
            and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ObjectNotFoundException">
            <summary>
            Represents a Laserfiche error indicating that the requested object could
            not be found.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ObjectNotFoundException.#ctor">
            <summary>
            Initializes an <c>ObjectNotFoundException</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ObjectNotFoundException.#ctor(System.Int32)">
            <summary>
            Initializes an <c>ObjectNotFoundException</c> instance with the specified
            error code.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ObjectNotFoundException.#ctor(System.String)">
            <summary>
            Initializes an <c>ObjectNotFoundException</c> instance with the
            specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ObjectNotFoundException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an <c>ObjectNotFoundException</c> instance with the specified
            error code and message.
            </summary>
            <param name="errorCode">The Laserfiche error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ObjectNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an <c>ObjectNotFoundException</c> instance with the specified
            message and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The inner exception instance.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ProtocolUtil">
            <summary>
            A collection of utility functions and constants useful in communicating
            with the Laserfiche server over HTTP and LRNP.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ProtocolUtil.DecodeMultiStatusVolumeMigrateError(Laserfiche.HttpClient.HttpResponse)">
            <summary>
            Multi-status volume migration for folders returns a different format than field value updates.
            </summary>
            <param name="response">The response.</param>
            <returns>The multi-status exception.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SqlDbmsType">
            <summary>
            Enumeration of available SQL database management systems (DBMS).
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.Pervasive">
            <summary>
            A Pervasive/Btrieve database.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.SqlServer">
            <summary>
            A Microsoft SQL Server database.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.SqlServerDesktop">
            <summary>
            A Microsoft SQL Server Desktop Edition, Personal Edition or Express Edition database.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.Oracle">
            <summary>
            An Oracle database.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.SQLite">
            <summary>
            An SQLite database.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.SqlDbmsType.PostgreSQL">
            <summary>
            Aa PostgreSQL database.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LicenseRegime">
            <summary>
            Enumeration of Laserfiche license regimes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LicenseRegime.Classic">
            <summary>
            Classic Laserfiche licensing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LicenseRegime.Rio">
            <summary>
            Laserfiche Rio license manager based licensing.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.LicenseRegime.Avante">
            <summary>
            Laserfiche Avante based licensing.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ChangeDatabaseOption">
            <summary>
            Options that control how changing a repository's database connection
            information should proceed.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ChangeDatabaseOption.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ChangeDatabaseOption.ForceUnmount">
            <summary>
            Forcibly unmount the repository, terminating all sessions logged
            in to it.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.ChangeDatabaseOption.Validate">
            <summary>
            Validate that the new database connection information appears to
            be valid before updating the configuration.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Server">
             <summary>
             Contains information needed to connect to a Laserfiche server instance.
             </summary>
             <remarks>
             When the <c>Server</c> class is first initialized, it contains a server name
             but the server's properties are not retrieved until <c>Refresh</c> is called.
             A valid port does not have to be specified to successfully invoke <c>Refresh</c>,
             but setting the correct port before calling <c>Refresh</c> can improve
             performance.
            
             The <c>Server</c> class is not thread-safe.  Multiple threads must synchronize
             access to instances of the class.  One exception to the previous rule is that
             multiple threads may concurrently read properties, if no methods are being
             invoked.
             </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Name">
            <summary>
            Gets the host name of the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Port">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            HTTP requests.  Changing this property does not change the port that this
            instance uses to connect to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.SecurePort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            HTTP over TLS/SSL requests.  Changing this property does not change the port that this
            instance uses to connect to Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.NotificationsPort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            LRNP requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.LfapiPort">
            <summary>
            Gets or sets the TCP port the Laserfiche server is listening on for incoming
            LFAPI requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Version">
            <summary>
            Gets a string containing the Laserfiche server version number.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.VersionNumber">
            <summary>
            The Laserfiche server version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Features">
            <summary>
            Gets the set of features that the Laserfiche server is licensed to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Company">
            <summary>
            Gets the name of the company that the Laserfiche server is licensed to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Serial">
            <summary>
            Gets the license serial number of the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.User">
            <summary>
            Gets the name of the user that the Laserfiche server is licensed to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.ProductId">
            <summary>
            Gets the licensed product ID of the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalFullFeaturedLicenses">
            <summary>
            Gets the number of full user licenses available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.FullFeaturedLicensesInUse">
            <summary>
            Gets the number of full user licenses currently in use by the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalRetrievalLicenses">
            <summary>
            Gets the number of retrieval user licenses available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.RetrievalLicensesInUse">
            <summary>
            Gets the number of retrieval user licenses currently in use by the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalNamedUserLicenses">
            <summary>
            Gets the number of named user license slots available for assignment in the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalLfNamedUserLicenses">
            <summary>
            Gets the number of named user license slots assigned to Laserfiche users.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalRetrievalLfNamedUserLicenses">
            <summary>
            Gets the number of named user license slots assigned to read-only Laserfiche users.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalRetrievalNamedUserLicenses">
            <summary>
            Gets the total number of named retrieval user license slots available for assignment
            in the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.NamedUserLicensesAssigned">
            <summary>
            Gets the number of named user licenses that have been assigned.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.FullFeaturedSessionCount">
            <summary>
            Gets the current number of active full-featured sessions in the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.RetrievalSessionCount">
            <summary>
            Gets the current number of active retrieval sessions in the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalPublicPortalProcessors">
            <summary>
            Gets the number of CPUs licenses for unlimited read-only public portal users.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.ReadOnlyPublicPortalLicensesInUse">
            <summary>
            Gets the current number of read-only public portal user licenses in use.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TotalReadOnlyPublicPortalLicenses">
            <summary>
            Gets the total number of read-only public portal user licenses available.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.FallBackToWmi">
            <summary>
            Gets or sets whether to fall back to WMI if HTTP requests to Laserfiche fail.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.MaximumRepositoriesAllowed">
            <summary>
            Gets the maximum number of repositories that can be attached to the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.FlexibleLicensing">
            <summary>
            Gets or sets a boolean indicating whether or not flexibile licensing is enabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.DefaultRepository">
            <summary>
            Gets or sets the name of the configured default repository
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.LicenseRegime">
            <summary>
            Gets a value of the <c>LicenseRegime</c> enumeration which specifies
            the license regime enforced by the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.AccessLogPath">
            <summary>
            Gets or sets the configured path to the HTTP access log file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.TSAPath">
            <summary>
            Gets or sets the path to the digital timestamp authority (TSA) module the
            server will use for communicating with a digital timestamp authority.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.LfdsAddress">
            <summary>
            Gets the address of the lfds server
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.LfdsRealm">
            <summary>
            Gets the address of the lfds realm
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.Support">
            <summary>
            Gets the value of the support field in the server's license file.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.LicenseExpirationDate">
            <summary>
            Gets the expiration date of the licence.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.IsComplete">
            <summary>
            Gets a boolean indicating if all the data for the server  has
            been retrieved from Laserfiche and is stored in this instance.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.AccessLogFormat">
            <summary>
            Gets or sets the configured HTTP access log format.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.IsConnectionSecure">
            <summary>
            Gets or sets a value indicating whether the connection to the 
            Laserfiche server is secured using TLS/SSL.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Server.ApplicationName">
            <summary>
            Gets or sets the application name to use when sending requests to the
            Laserfiche server using a server-level session.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the local machine listening on the default
            TCP port.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, representing the
            Laserfiche instance the specified <c>Session</c> is currently connected to.
            </summary>
            <param name="session">An active <c>Session</c> which has authenticated
            to a Laserfiche server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the specified server.  The listening TCP port
            is assumed to be the default unless the port is specified in the name.
            </summary>
            <param name="serverName">The name of the server, optionally including a TCP
            port number.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the specified server listening at the specified TCP port.
            </summary>
            <param name="serverName">The server's host name.</param>
            <param name="port">The server's HTTP listening TCP port.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the specified server listening at the specified
            TCP port and indicates if the givne port is the secured port.
            </summary>
            <param name="serverName">The server's host name.</param>
            <param name="port">The server's HTTP listening TCP port.</param>
            <param name="isSecurePort">Indicates if the specified port is the secure port
            (typically 443) or the regular listening port (80 or 5050).</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the specified server listening at the specified
            TCP port and indicates if the givne port is the secured port.
            </summary>
            <param name="serverName">The server's host name.</param>
            <param name="port">The server's HTTP listening TCP port.</param>
            <param name="securePort">The server's HTTPS listening TCP port.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String,System.Int32,Laserfiche.SecurityTokenService.Ticket)">
            <summary>
            Initializes a new instance of the <c>Server</c> class, which represents a
            Laserfiche instance running on the specified server listening at the specified TCP port.
            In addition, use the ticket instead of windows token to login to the server instance.
            </summary>
            <param name="serverName">The server's host name.</param>
            <param name="port">The server's HTTP listening TCP port.</param>
            <param name="ticket">The ticket used to connect to the server.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.#ctor(System.String,Laserfiche.RepositoryAccess.CloudTicket)">
            <summary>
            This constructor is for internal Laserfiche use.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.Refresh">
            <summary>
            Retrieves information about the Laserfiche server.
            </summary>
            <remarks>
            The <c>Refresh</c> method first attempts to contact the server using HTTP, and
            if that fails, Windows Management Instrumentation (WMI) queries are used to
            retrieve server information.  Because WMI usually uses DCOM, attempts Windows
            authentication, and may require security configuration, retrieving data using
            HTTP is usually more efficient and robust, especially over wide area networks
            and across firewalls.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.Save">
            <summary>
            Saves changes to the Laserfiche server's settings.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.CheckHasAdministratorAccess">
            <summary>
            Determines if the current Windows user has server administrator (also called
            server manager) access to the Laserfiche server.
            </summary>
            <returns>True if the current user has server administrator access to the
            Laserfiche server, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.TerminateSession(System.Int32)">
            <summary>
            Sends a request to terminate a Laserfiche server session.
            </summary>
            <param name="sessionId">The ID of the session to be terminated.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetSessionInfo(System.Int32)">
            <summary>
            Returns a <c>SessionInfo</c> instance which represents information about
            the specified Laserfiche session.
            </summary>
            <param name="sessionId">The ID of the active Laserfiche session to return
            information about.</param>
            <returns>A <c>SessionInfo</c> instance which represents information about
            the specified Laserfiche session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.EnumSessions">
            <summary>
            Enumerates the active sessions in the Laserfiche server.
            </summary>
            <returns>A <c>ServerSessionInfoReader</c> instance which can be used to
            enumerate Laserfiche sessions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.EnumSessions(System.Int32)">
            <summary>
            Enumerates the active sessions in a specific tenant.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <returns>A <c>ServerSessionInfoReader</c> instance which can be used to
            enumerate Laserfiche sessions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.EnumSessions(Laserfiche.RepositoryAccess.SessionInfoFields)">
            <summary>
            Enumerates the active sessions in the Laserfiche server, while
            retrieving only the specified data about each session.
            </summary>
            <param name="fields">Members of the <c>SessionInfoFields</c> enumeration
            specifying the data about each session to retrieve.</param>
            <returns>A <c>ServerSessionInfoReader</c> instance which can be used to
            enumerate Laserfiche sessions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.EnumSessions(System.Int32,Laserfiche.RepositoryAccess.SessionInfoFields)">
            <summary>
            Enumerates the active sessions in specific tenant, while
            retrieving only the specified data about each session.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <param name="fields">Members of the <c>SessionInfoFields</c> enumeration
            specifying the data about each session to retrieve.</param>
            <returns>A <c>ServerSessionInfoReader</c> instance which can be used to
            enumerate Laserfiche sessions.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetDatabaseInfo(System.String)">
            <summary>
            Returns a <c>DatabaseInfo</c> instance which contains information about the
            database backing the specified repository attached to the Laserfiche instance.
            </summary>
            <param name="repositoryName">The name of a repository attached to the
            Laserfiche instance to retrieve database information about.</param>
            <returns>A <c>DatabaseInfo</c> instance which contains information about the
            database backing the specified repository attached to the Laserfiche
            instance.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.CreateRepository(System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new repository in the specified Laserfiche instance.
            </summary>
            <param name="repositoryName">The name of the new repository.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS to use.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
            <param name="volumeName">The name of the initial Laserfiche volume.</param>
            <param name="volumePath">The fixed path to the initial volume.</param>
            <param name="createDatabase">A boolean indicating whether to create the
            database automatically or to use an existing database.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.CreateRepositoryForTenant(System.Int32,System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new repository in the specified tenant.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <param name="repositoryName">The name of the new repository.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS to use.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
            <param name="volumeName">The name of the initial Laserfiche volume.</param>
            <param name="volumePath">The fixed path to the initial volume.</param>
            <param name="createDatabase">A boolean indicating whether to create the
            database automatically or to use an existing database.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.CreateRepository(Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Creates a new repository in the specified Laserfiche instance.
            </summary>
            <param name="data">A <c>RepositoryProperties</c> instance which specifies the
            settings to use when creating the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.CreateRepositoryForTenant(System.Int32,Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Creates a new repository in the specified tenant.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <param name="data">A <c>RepositoryProperties</c> instance which specifies the
            settings to use when creating the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.AttachRepository(System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Attaches an existing repository to a Laserfiche instance.
            </summary>
            <param name="repositoryName">The name of the repository after it is
            attached.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS the repository uses.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.AttachRepositoryToTenant(System.Int32,System.String,Laserfiche.RepositoryAccess.SqlDbmsType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Attaches an existing repository to a specific tenant.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <param name="repositoryName">The name of the repository after it is
            attached.</param>
            <param name="dbmsType">A member of the <c>SqlDbmsType</c> enumeration specifying
            which type of DBMS the repository uses.</param>
            <param name="dataSource">The name of the SQL DBMS data source (server/instance name).</param>
            <param name="sqlDatabaseName">The name of the SQL DBMS database/schema.</param>
            <param name="sqlUserId">The user name to use when logging in to the database
            server.</param>
            <param name="sqlPassword">The password to use when logging in to the database
            server.</param>
            <param name="repositoryPath">The path to the repository directory.</param>
            <param name="oracleDriver">The name of the Oracle ODBC driver to use.</param>
            <param name="searchUrl">The URL for the search engine.</param>
            <param name="searchPort">The port number the search engine is listening on.</param>
            <param name="searchDir">The directory to store the search catalog files in.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.AttachRepository(Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Attaches an existing repository to a Laserfiche instance.
            </summary>
            <param name="data">A <c>RepositoryProperties</c> instance which specifies the
            settings to use when attaching the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.AttachRepositoryToTenant(System.Int32,Laserfiche.RepositoryAccess.RepositoryProperties)">
            <summary>
            Attaches an existing repository to a specific tenant.
            </summary>
            <param name="tenantID">The tenant ID of the target tenant.</param>
            <param name="data">A <c>RepositoryProperties</c> instance which specifies the
            settings to use when attaching the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.DetachRepository(System.String,Laserfiche.RepositoryAccess.Admin.DetachRepositoryOptions)">
            <summary>
            Detaches the specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to detach from
            Laserfiche.</param>
            <param name="options">Members of the <c>DetachRepositoryOptions</c> enumeration
            which specifies options for the deatch operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.DeleteRepository(System.String,Laserfiche.RepositoryAccess.Admin.DeleteRepositoryOptions)">
            <summary>
            Deletes the specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
            <param name="options">Members of the <c>DeleteRepositoryOptions</c>
            enumeration which specifies options for the repository deletion operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.MountRepository(System.String)">
            <summary>
            Mount an specified repository to the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.UnmountRepository(System.String,Laserfiche.RepositoryAccess.Admin.UnmountRepositoryOptions)">
            <summary>
            Unmount an specified repository from the current instance of Laserfiche.
            </summary>
            <param name="repositoryName">The name of the repository to delete.</param>
            <param name="options">The options for the unmount operation.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.ChangeDatabase(System.String,System.String,Laserfiche.RepositoryAccess.ChangeDatabaseOption)">
            <summary>
            Changes the database connection string used by the current Laserfiche instance
            to connect to the database backing the specified repository.
            </summary>
            <param name="repositoryName">The name of the repository attached to the current
            Laserfiche instance to change the database connection string of.</param>
            <param name="connString">The new ODBC connection string for the repository.</param>
            <param name="options">The options for changing the database.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetRepositories">
            <summary>
            Returns information about all the repositories attached
            to the Laserfiche server.
            </summary>
            <returns>A <c>RepositoryRegistrationCollection</c> instance containing the
            collection of repositories attached to the server.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetRepository(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Returns a <c>Repository</c> instance representing the repository referenced by
            the provided <c>RepositoryRegistration</c> instance that is attached to the
            represented server.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which refers
            to a repository registered to the represented server.</param>
            <returns>A <c>Repository</c> instance representing the repository referenced by
            the provided <c>RepositoryRegistration</c> instance that is attached to the
            represented server.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetAllTimeStampAuthorities">
            <summary>
            Returns a <c>ServerTimeStampAuthorityCollection</c> which contains information
            about all the digital timestamp authority (TSA) profiles configured in the
            current repository.
            </summary>
            <returns>A <c>ServerTimeStampAuthorityCollection</c> which contains information
            about all the configured digital timestamp authority (TSA) profiles.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetTimeStampAuthority(System.String)">
            <summary>
            Returns a <c>ServerTimeStampAuthority</c> describing the specified digital
            timestamp authority (TSA) TSA profile.
            </summary>
            <param name="name">The name of the TSA profile to </param>
            <returns>A <c>ServerTimeStampAuthority</c> describing the specified digital
            timestamp authority (TSA) TSA profile.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.DeleteTimeStampAuthority(System.String)">
            <summary>
            Deletes the specified digital timestamp authority (TSA) profile.
            </summary>
            <param name="name">The name of the TSA profile to delete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.ReassignRepository(System.String,System.String,System.String)">
            <summary>
            For Laserfiche internal use only.
            </summary>
            <param name="repositoryName"></param>
            <param name="targetName"></param>
            <param name="sourceName"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetAllRepositories">
            <summary>
            Returns information about all of the repositories attached to all of the published
            Laserfiche servers in the current Active Directory forest.
            </summary>
            <returns>A <c>RepositoryRegistrationCollection</c> instance containing the
            collection of repositories attached to all of the published servers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetAllRepositories(System.TimeSpan)">
            <summary>
            Returns information about the repositories attached to the
            Laserfiche servers published in the current Active Directory forest.
            </summary>
            <param name="timeout">How long to wait before ceasing to retrieve repository
            registations.</param>
            <returns>A <c>RepositoryRegistrationCollection</c> instance containing the
            collection of repositories attached to published servers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetLocalRepositories">
            <summary>
            Returns information about the repositories which have been registered on
            the current machine.
            </summary>
            <returns>>A <c>RepositoryRegistrationCollection</c> instance containing the
            repositories which have been registered on the local machine.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetAllServers">
            <summary>
            Returns information about all of the published Laserfiche servers in the current
            Active Directory forest.
            </summary>
            <returns>A <c>ServerCollection</c> instance containing information
            about all the published servers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetAllServers(System.TimeSpan)">
            <summary>
            Returns information about the published Laserfiche servers found in the given time
            in the current Active Directory forest.
            </summary>
            <param name="timeout">How long to wait before ceasing to retrieve server
            registrations.</param>
            <returns>A <c>ServerCollection</c> instance containing information
            about all the published servers.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Server.GetLocalServers">
            <summary>
            Returns information about Laserfiche servers which are hosting repositories
            that have been registered on the local machine.
            </summary>
            <returns>A <c>ServerCollection</c> instance containing information about
            Laserfiche servers which are hosting repositories that have been registered
            on the local machine.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ServerCollection">
            <summary>
            Represents a read-only collection of <c>Server</c> instances.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.ServerCollection.Item(System.String)">
            <summary>
            Returns the <c>Server</c> instance with the specified name if it is present
            in the collection, or <c>null</c> if no <c>Server</c> with a matching name is found.
            </summary>
            <param name="name">The name of the server to return a corresponding <c>Server</c>
            instance for.</param>
            <returns>The <c>Server</c> instance with the specified name if it is present
            in the collection, or <c>null</c> if no <c>Server</c> with a matching name is
            found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerCollection.CopyTo(Laserfiche.RepositoryAccess.Server[])">
            <summary>
            Copies the entire <c>Server</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.ServerCollection.CopyTo(System.Int32,Laserfiche.RepositoryAccess.Server[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>Server</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AccountInfo">
            <summary>
            The base type for types which represent Laserfiche accounts.
            </summary>
            <seealso cref="T:Laserfiche.RepositoryAccess.GroupInfo"/>
            <seealso cref="T:Laserfiche.RepositoryAccess.UserInfo"/>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.AuditMaskAssigned">
            <summary>
            Gets a boolean indicating if an audit mask was assigned to the trustee
            this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.ReadonlyAccess">
            <summary>
            Gets or sets whether the represented Laserfiche account will log in
            as a read-only (retrieval) user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Id">
            <summary>
            Gets the numeric ID of the represented Laserfiche account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Sid">
            <summary>
            Gets a <c>SecurityIdentifier</c> instance which represents the security
            identifier (SID) of the represented Laserfiche account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.TrusteeType">
            <summary>
            Gets a member of the <c>TrusteeType</c> enumeration which indicates the
            type of Laserfiche account (i.e., user or group) that this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Name">
            <summary>
            Gets or sets the name of the represented Laserfiche account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Description">
            <summary>
            Gets or sets the description for the represented Laserfiche account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Privileges">
            <summary>
            Gets or sets members of the <c>Privileges</c> enumeration which specifies
            the Laserfiche privileges that are assigned directly to this account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.FeatureRights">
            <summary>
            Gets or sets members of the <c>FeatureRights</c> enumeration which specifies
            the Laserfiche feature rights (aka user interface flags) that are assigned
            directly to this account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.SuccessAuditMask">
            <summary>
            Gets or sets members of the <c>AuditClasses</c> enumeration which specifies
            which audit event classes we wish to audit for the account when a success
            event in one of specified the classes occurs.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.FailureAuditMask">
            <summary>
            Gets or sets members of the <c>AuditClasses</c> enumeration which specifies
            which audit event classes we wish to audit for the account when a failure
            event in one of specified the classes occurs.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.LinkedAccounts">
            <summary>
            Gets a <c>SecurityIdentifierCollection</c> instance which manages a
            read-only collection of <c>SecurityIdentifier</c> instances for Windows
            accounts linked to the represented Laserfiche account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Groups">
            <summary>
            Gets an array containing the names of the Laserfiche groups that
            the Laserfiche account represented by this instance is a member of.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.AccountInfo.Flags">
            <summary>
            Gets or sets the flags for the account.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.Delete">
            <summary>
            Marks the Laserfiche account that this instance represents for deletion
            when pending changes are saved to the repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.HasFailureAuditMask(Laserfiche.RepositoryAccess.AuditClasses)">
            <summary>
            Returns a boolean indicating if the requested audit classes are configured
            to be audited on failed operations for the represented trustee.
            </summary>
            <param name="auditmask">An audit mask specifying which audit classes to
            check.</param>
            <returns>A boolean indicating if the requested audit classes are configured
            to be audited on failed operations for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.HasSuccessAuditMask(Laserfiche.RepositoryAccess.AuditClasses)">
            <summary>
            Returns a boolean indicating if the requested audit classes are configured
            to be audited on successful operations for the represented trustee.
            </summary>
            <param name="auditmask">An audit mask specifying which audit classes to
            check.</param>
            <returns>A boolean indicating if the requested audit classes are configured
            to be audited on successful operations for the represented trustee.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.LinkWindowsAccount(System.Security.Principal.IdentityReference)">
            <summary>
            Link a Windows account to the Laserfiche account that this instance represents
            when pending changes are saved to Laserfiche.
            </summary>
            <param name="windowsIdent">An <c>IdentityReference</c> instance which
            references the Windows account to link to the represented Laserfiche account.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.UnlinkWindowsAccount(System.Security.Principal.IdentityReference)">
            <summary>
            Unlink a Windows account from the Laserfiche account that this
            instance represents when pending changes are saved to Laserfiche.
            </summary>
            <param name="windowsIdent">An <c>IdentityReference</c> instance which
            references the Windows account to unlink from the represented Laserfiche
            account.</param>
            <returns>True if the Windows account will be unlinked from the Laserfiche
            account, false if the Windows account was not already linked.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.UnlinkAllWindowsAccounts">
            <summary>
            Unlinks all Windows accounts from the represented Laserfiche account when
            pending changes are next saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.JoinGroup(System.String)">
            <summary>
            Adds the Laserfiche account that this instance represents to the
            specified Laserfiche group when pending changes are saved to Laserfiche.
            </summary>
            <param name="groupName">The name of the Laserfiche group to join.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.LeaveGroup(System.String)">
            <summary>
            Removes the Laserfiche account that this instance represents from the
            specified Laserfiche group when pending changes are saved to Laserfiche.
            </summary>
            <param name="groupName">The name of the Laserfiche group to leave.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.LeaveAllGroups">
            <summary>
            Removes the represented account from all Laserfiche groups.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.AccountInfo.GetTrusteeInfo">
            <summary>
            Returns a <c>TrusteeInfo</c> instance representing the general trustee
            data about the account that this instance represents.
            </summary>
            <returns>A <c>TrusteeInfo</c> instance representing the general trustee
            data about the account that this instance represents.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UnderlineAnnotation">
            <summary>
            Represents a text underline annotation in a Laserfiche document.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UnderlineAnnotation.Direction">
            <summary>
            The direction of the text in the annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UnderlineAnnotation.#ctor">
            <summary>
            Initializes an <c>UnderlineAnnotation</c> representing a new underline
            annotation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UnderlineAnnotation.#ctor(System.Int32,System.Int64,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Construct a <c>UnderlineAnnotation</c> object that represents a new text
            underline annotation on the specified page.
            </summary>
            <param name="entryId">The entry ID of the document the new annotation will belong to.</param>
            <param name="pageId">The page id in the document to create the annotation on.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserArea">
            <summary>
            A collection of static methods for managing user areas in a Laserfiche
            repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.Create(Laserfiche.RepositoryAccess.UserAreaInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new user area for the current user in a Laserfiche repository.
            </summary>
            <param name="info">A <c>UserAreaInfo</c> instance which specifies the
            settings for the new user area.  The instance is not modified.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns></returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.Update(System.Int32,Laserfiche.RepositoryAccess.UserAreaInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings for an existing user area in a Laserfiche repository.
            </summary>
            <param name="userAreaId">The ID of the user area to update.</param>
            <param name="info">A <c>UserAreaInfo</c> instance which represents the
            new settings for the specified user area.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing user area in a Laserfiche repository.
            </summary>
            <param name="userAreaId">The ID of the user area to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes an existing user area in a Laserfiche repository.
            </summary>
            <param name="userAreaName">The name of the user area to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche. This method will only lookup user areas owned by the caller unless
            the call has manage user area privilege.
            </summary>
            <param name="userAreaId">The ID of the user area to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche. This method will only lookup user areas owned by the caller. 
            </summary>
            <param name="userAreaName">The name of the user area to retrieve information
            about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.GetInfo(System.String,System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche. This method will only lookup user areas owned by the user with the input sid. 
            Only users with manage user area privilege can access user areas of other users.
            </summary>
            <param name="userAreaName">The ID of the user area to retrieve information
            about.</param>
            <param name="sid">The sid of the owner of the user area.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfo</c> instance which describes the specified
            user area in Laserfiche.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the current user.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the current user.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.EnumAll(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the specified user.
            </summary>
            <param name="sid">A <c>SecurityIdentifier</c> instance which represents
            the security identifier (SID) of the user to enumerate the user areas
            for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the specified user.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.EnumAll(Laserfiche.RepositoryAccess.UserArea.EnumAreaOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the current user.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaInfoReader</c> instance which can be used to enumerate
            all of the user areas for the current user.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.CreateUserAreaEntryInfo(Laserfiche.RepositoryAccess.UserAreaInfo,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new UserAreaInfo object with the given entry id. 
            </summary>
            <param name="info">A <c>UserAreaInfo</c> instance which specifies the
            area this entry to be created. This instance is not modified.</param>
            <param name="EntryID">The entry id of the User area entry.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaEntryInfo</c> instance which describes the specified
            user area entry in Laserfiche. The actual creation is not done until Save() is called.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserArea.GetUserAreaEntryInfo(Laserfiche.RepositoryAccess.UserAreaInfo,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>UserAreaEntryInfo</c> instance which describes the specified
            user area entry in Laserfiche.
            </summary>
            <param name="UserAreaInfo">A <c>UserAreaInfo</c> instance describing the area the target entry is in. This instance is not modified. </param>
            <param name="EntryID">The entry id of the target entry.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>UserAreaEntryInfo</c> instance which describes the specified
            user area entry in Laserfiche.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserAreaEntryListing">
            <summary>
            Represents an entry listing of the contents of a user area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaEntryListing.UserArea">
            <summary>
            Gets the <c>UserAreaInfo</c> instance representing the user area
            whose contents are contained in the represented entry listing.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserAreaInfo">
            <summary>
            Represents a user area in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.#ctor">
            <summary>
            Initializes a <c>UserAreaInfo</c> instance representing an empty
            user area.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>UserAreaInfo</c> instance representing an empty
            user area.
            </summary>
            <param name="session">The Laserfiche session to associate with the
            new <c>UserAreaInfo</c> instance.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.#ctor(System.Security.Principal.SecurityIdentifier,Laserfiche.RepositoryAccess.Session)">
            <summary>
            This method is for internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="sid"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            This method is for internal Laserfiche.RepositoryAccess use.
            </summary>
            <param name="userAreaId"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.#ctor(Laserfiche.RepositoryAccess.UserAreaInfo)">
            <summary>
            Initialize a <c>UserAreaInfo</c> instance by cloning the entries from
            an existing instance.
            </summary>
            <param name="info">The <c>UserAreaInfo</c> instance to clone.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaInfo.Id">
            <summary>
            Gets the ID of the represented user area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaInfo.Name">
            <summary>
            Gets or sets the name of the represented user area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaInfo.Comment">
            <summary>
            Gets or sets the comment field of the represented user area.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserAreaInfo.Data">
            <summary>
            Gets or sets the data field of the represented user area.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.AddEntry(System.Int32)">
            <summary>
            Adds the specified entry to the represented user area.  The change will
            be saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="entryId">The ID of the entry to add to the user area.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.AddEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Adds the specified entry to the represented user area.  The change will be
            saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance which represents the entry
            to add to the user area.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.RemoveEntry(System.Int32)">
            <summary>
            Removes the specified entry from the represented user area.  The change
            will be saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="entryId">The ID of the entry to remove from the user
            area.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.RemoveEntry(Laserfiche.RepositoryAccess.EntryInfo)">
            <summary>
            Removes the specified entry from the represented user area.  The change will
            be saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="entry">An <c>EntryInfo</c> instance which represents the entry
            to remove from the user area.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.GetEntryListing(Laserfiche.RepositoryAccess.EntryListingSettings)">
            <summary>
            Returns a <c>UserAreaEntryListing</c> instance which represents an entry
            listing of the represented user area's contents.
            </summary>
            <param name="settings">An <c>EntryListingSettings</c> instance which
            specifies the settings to use when creating the entry listing.</param>
            <returns>A <c>UserAreaEntryListing</c> instance which represents an entry
            listing of the represented user area's contents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.GetEntryListing(Laserfiche.RepositoryAccess.EntryListingSettings,System.Int32)">
             <summary>
             Returns a <c>UserAreaEntryListing</c> instance which represents an entry
             listing of the represented user area's contents.
             </summary>
             <param name="settings">An <c>EntryListingSettings</c> instance which
             specifies the settings to use when creating the entry listing.</param>
            <param name="preload">The number of rows to be preloaded when creating a user area
            entry listing.</param>
             <returns>A <c>UserAreaEntryListing</c> instance which represents an entry
             listing of the represented user area's contents.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.Delete">
            <summary>
            Marks the represented user area to be deleted next time pending changes
            are saved to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserAreaInfo.ResetPosition(System.Collections.Generic.List{System.Int32})">
            <summary>
            Reset the position of the entries in this user area according to the input.
            </summary>
            <param name="entryOrder">A list of entry ids where the order of the elements in it represents the new position order.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserAreaInfoReader">
            <summary>
            Provides the ability to enumerate <c>UserAreaInfo</c> instances which
            represent Laserfiche user areas matching the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.NamedUserStatus">
            <summary>
            An enumeration of the named user licensing status of a user account.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.NamedUserStatus.None">
            <summary>
            Not assigned to a named user slot.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.NamedUserStatus.ReadOnly">
            <summary>
            Designated a read-only named user.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.NamedUserStatus.ReadWrite">
            <summary>
            Designated a read-write (full) named user.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.UserInfo">
            <summary>
            Represents a Laserfiche user account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.Password">
            <summary>
            Sets the password for the user.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.CanChangePassword">
            <summary>
            Gets or sets a boolean indicating whether or not the user can change
            their own password.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.CanUsePassword">
            <summary>
            Gets or sets a boolean indicating whether or not the user can authenticate
            to Laserfiche with a password.  If this is false, a Windows user account
            must be linked to the Laserfiche user account and Windows authentication used
            for the Laserfiche user to log in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.IsDisabled">
            <summary>
            Gets or sets a boolean indicating if the user account is disabled.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastLogOnUtc">
            <summary>
            Gets the date and time of the last log on for the represented user account
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastLogOn">
            <summary>
            Gets the date and time of the last log on for the represented user account
            in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastLogOutUtc">
            <summary>
            Gets the date and time of the last log out for the represented user account
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastLogOut">
            <summary>
            Gets the date and time of the last log out for the represented user account
            in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastPasswordChangeUtc">
            <summary>
            Gets the date and time of the last password change for the represented user
            account in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.LastPasswordChange">
            <summary>
            Gets the date and time of the last password change for the represented user
            account in the local time zone.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.MustChangePassword">
            <summary>
            Gets or sets a boolean which indicates if the user must change their
            password at the next log on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.PasswordNeverExpires">
            <summary>
            Gets or sets a boolean which indicates if the user's password is exempt
            from the repository's password expiration policy.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.TemporaryPasswordAgeLimit">
            <summary>
            Gets or sets how long, in days, a temporary password can be used before
            it must be changed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.UserInfo.NamedUserStatus">
            <summary>
            Gets or sets the named user status of the represented Laserfiche user account.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserInfo.#ctor">
            <summary>
            Initializes a <c>UserInfo</c> instance which represents a blank template
            for a new user account.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.UserInfo.#ctor(Laserfiche.RepositoryAccess.UserInfo)">
            <summary>
            Initializes a <c>UserInfo</c> instance from which initial settings shall
            be copied.
            </summary>
            <param name="source">A <c>UserInfo</c> instance to draw settings from.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VersionGroupEntry">
            <summary>
            Represents information about an entry in a link group (previously called version group).
            </summary>
            <remarks>
            "Version groups" were renamed to "link groups" in the Laserfiche 8.3
            user-interface and documentation.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroupEntry.EntryId">
            <summary>
            Gets the ID of the entry.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroupEntry.Note">
            <summary>
            Gets the note associated with the entry in the link group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroupEntry.Version">
            <summary>
            Gets the link number assigned to the entry in the link group.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroupEntry.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a <c>VersionGroupEntry</c> instance.
            </summary>
            <param name="version">The link number assigned to the entry.</param>
            <param name="note">The note associated with the entry.</param>
            <param name="entryId">The ID of the entry.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VersionGroup">
            <summary>
            Represents a link group (previously called version group) in a Laserfiche repository.
            </summary>
            <remarks>
            A link group is a collection of related documents in Laserfiche. 
            Each document within a link group is assigned a  
            link number. When a document is added to the link group,
            a link number for that document must be selected.  A document in Laserfiche
            cannot be a member of more than one link group at a time.  Adding a document
            to a link group automatically removes it from any existing link groups
            it might have been part of.
            
            "Version groups" were renamed to "link groups" in the Laserfiche 8.3
            user-interface and documentation. Version groups are not related to 
            the document version control feature in Laserfiche 8.3 and later.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroup.Id">
            <summary>
            Gets the ID of the represented link group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroup.VersionCount">
            <summary>
            Gets the number of documents in the represented link group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroup.MaxVersion">
            <summary>
            Gets the highest link number in the represented link group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroup.MinVersion">
            <summary>
            Gets the lowest link number in the represented link group.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VersionGroup.Versions">
            <summary>
            Gets an array of items that represent information about each entry 
            in the link group.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>VersionGroup</c> instance representing a new link
            group without any initial documents.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>VersionGroup</c> instance representing an existing link group.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.GetEntryIdFromVersion(System.Int32)">
            <summary>
            Returns the entry ID of the document corresponding to the specified link
            number in the represented link group.
            </summary>
            <param name="version">The link number associated with the corresponding
            entry ID.</param>
            <returns>The entry ID of the document corresponding to the specified link
            number in the represented link group, or 0 if the link was not
            found.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.GetVersionFromEntryId(System.Int32,System.String@)">
            <summary>
            Returns the link number of the document in the link group with
            the specified entry ID.
            </summary>
            <param name="entryId">The entry ID of the document to return the corresponding
            link number of.</param>
            <param name="note">The note attached to the specified document in the link
            group.</param>
            <returns>The link number of the document in the link group with
            the specified entry ID, or 0 if no such document belongs to the represented
            link group.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.RemoveVersion(System.Int32)">
            <summary>
            Removes the specified document from the link group.  The change will
            be saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="version">The link number of the document to remove.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.SetDocumentVersion(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the link number and note for the specified document.  If the
            document is not a member of the link group, it is made a member.
            The change will be saved next time pending changes are sent to Laserfiche.
            </summary>
            <param name="entryId">The entry ID of the document to set the link
            number and note for.</param>
            <param name="version">The new link number of the specified document
            in the represented link group.</param>
            <param name="note">The note to associate with the specified link.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VersionGroup.Delete">
            <summary>
            Marks the represented link group for deletion next time pending changes
            are sent to Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeRights">
            <summary>
            Enumeration of available Laserfiche volume access rights.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.ReadData">
            <summary>
            Permission to read volume data.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.WriteData">
            <summary>
            Permission to write and delete volume data.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.AppendData">
            <summary>
            Permission to append but not overwrite or delete volume data.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.CreateDocument">
            <summary>
            Permission to create documents that reside on the volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.Delete">
            <summary>
            Permission to delete the volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.ReadPermissions">
            <summary>
            Permission to read the volume's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.ChangePermissions">
            <summary>
            Permission to modify the volume's security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.TakeOwnership">
            <summary>
            Permission to take ownership of the volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.Read">
            <summary>
            Generic read access; permission to read the volume's data and
            security descriptor.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.Write">
            <summary>
            Generic write access; permission to write and delete volume data and
            to assign documents to the volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRights.FullControl">
            <summary>
            A combination of all volume access rights.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeAccessRule">
            <summary>
            Represents an access control entry (ACE) for a Laserfiche volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAccessRule.VolumeRights">
            <summary>
            Gets the access mask associated with the represented ACE.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAccessRule.#ctor(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.VolumeRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>IdentityReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="volumeRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAccessRule.#ctor(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.VolumeRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Initializes an <c>EntryAccessRule</c> instance representing a new access
            control entry (ACE) for a Laserfiche entry.
            </summary>
            <param name="identity">An <c>AccountReference</c> instance which represents
            the trustee identity for the new ACE.</param>
            <param name="volumeRights">The access mask of the new ACE.</param>
            <param name="type">A member of the <c>AccessControlType</c> enumeration
            which specifies the type of ACE to create.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DocumentConflictStrategy">
            <summary>
            Enumeration of available strategies that Laserfiche can use to
            resolve document name conflicts.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentConflictStrategy.Fail">
            <summary>
            Abort the import if a document has the same path as an
            existing document.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentConflictStrategy.Overwrite">
            <summary>
            Overwrite existing documents in the repository if there is a conflict.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentConflictStrategy.MakeUnique">
            <summary>
            Give new documents a unique name if a document in the repository has
            the same path.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.DocumentConflictStrategy.Skip">
            <summary>
            Skip documents that have the same path as a document in the repository.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FolderConflictStrategy">
            <summary>
            Enumeration of available strategies that Laserfiche can use to
            resolve folder name conflicts.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FolderConflictStrategy.Merge">
            <summary>
            Use existing folders in the repository if they have the same path as an
            imported folder.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FolderConflictStrategy.MakeUnique">
            <summary>
            Give folders a unqiue name if a folder in the repository has the same path.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.FolderConflictStrategy.Fail">
            <summary>
            Abort the import if a folder has the same path as an
            existing folder.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateMapping">
            <summary>
            Represents a configured mapping of template names when attaching a volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateMapping.ExternalName">
            <summary>
            Gets the name of the template in the exported volume data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TemplateMapping.NewName">
            <summary>
            Gets the target name of the template in the repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateMapping.#ctor(System.String,System.String)">
            <summary>
            Initializes a <c>TemplateMapping</c> value with the specified external and
            target names.
            </summary>
            <param name="externalName">The name of the template in the exported volume data.</param>
            <param name="newName">The target name of the template in the repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateMapping.op_Equality(Laserfiche.RepositoryAccess.TemplateMapping,Laserfiche.RepositoryAccess.TemplateMapping)">
            <summary>
            Determines if two <c>TemplateMapping</c> values are equivalent.
            </summary>
            <param name="x">The first value to check.</param>
            <param name="y">The second value to check.</param>
            <returns>True if the two arguments are equivalent.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TemplateMapping.op_Inequality(Laserfiche.RepositoryAccess.TemplateMapping,Laserfiche.RepositoryAccess.TemplateMapping)">
            <summary>
            Determines if two <c>TemplateMapping</c> values are not equivalent.
            </summary>
            <param name="x">The first value to check.</param>
            <param name="y">The second value to check.</param>
            <returns>True if the two arguments are not equivalent.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TemplateMappingCollection">
            <summary>
            Represents a read-only collection of <c>TemplateMapping</c> values.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldMapping">
            <summary>
            Represents a mapping between template field names to be used when attaching a volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldMapping.ExternalTemplateName">
            <summary>
            Gets the name of the template in the exported volume data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldMapping.ExternalFieldName">
            <summary>
            Gets the name of the template field in the exported volume data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.FieldMapping.NewFieldName">
            <summary>
            Gets the target name of the template field in the repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new <c>FieldMapping</c> value with the specified external
            template and field names and target field name.
            </summary>
            <param name="externalTemplateName">The name of the template in the exported volume
            data.</param>
            <param name="externalFieldName">The name of the template field in the exported
            volume data.</param>
            <param name="newFieldName">The target name of the template field in the
            repository.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldMapping.op_Equality(Laserfiche.RepositoryAccess.FieldMapping,Laserfiche.RepositoryAccess.FieldMapping)">
            <summary>
            Determines if two <c>FieldMapping</c> values are equivalent.
            </summary>
            <param name="x">The first value to check.</param>
            <param name="y">The second value to check.</param>
            <returns>True if the two arguments are equivalent.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.FieldMapping.op_Inequality(Laserfiche.RepositoryAccess.FieldMapping,Laserfiche.RepositoryAccess.FieldMapping)">
            <summary>
            Determines if two <c>FieldMapping</c> values are not equivalent.
            </summary>
            <param name="x">The first value to check.</param>
            <param name="y">The second value to check.</param>
            <returns>True if the two arguments are not equivalent.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.FieldMappingCollection">
            <summary>
            Represents a read-only collection of <c>FieldMapping</c> values.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeAttachSettings">
            <summary>
            Represents the settings used for a volume attach operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.ExternalPath">
            <summary>
            Gets or sets the file system path to the exported volume data.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.ImportPath">
            <summary>
            Gets or sets the repository path to the Laserfiche folder that will be
            used as the root folder for all entries created during the import process.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.FixedPath">
            <summary>
            Gets or sets the new fixed path of the volume that will be attached.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.Password">
            <summary>
            Gets or sets the password used to decrypt the volume that will be attached.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IncludeAllMetaData">
            <summary>
            Gets or sets a boolean indicating if all the metadata in the volume will be
            imported into the repository when attached, or just the metadata assigned to
            the documents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.TemplateNamesMustMatch">
            <summary>
            Gets or sets a boolean indicating if template names must match for templates
            to be considered identical in the exported volume and the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.RemovablePath">
            <summary>
            Gets or sets the new removable path of the volume that will be attached.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IsImageFixed">
            <summary>
            Gets or sets a boolean indicating whether the volume will store images on
            its fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IsReadOnly">
            <summary>
            Gets or sets a boolean indicating if the volume will be read-only after
            attaching.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IsWriteOnce">
            <summary>
            Gets or sets a boolean indicating if the volume will be write-once after
            attaching.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IsTextFixed">
            <summary>
            Gets or sets a boolean indicating whether the volume will store text on
            its fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IsEDocFixed">
            <summary>
            Gets or sets a boolean indicating whether the volume will store electronic
            documents on its fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.MaximumSize">
            <summary>
            Gets or sets the maximum size of the new volume, in bytes.  A size of 0
            indicates there is no enforced size limit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.OnDocumentConflict">
            <summary>
            Gets or sets a member of the <c>DocumentConflictStrategy</c> enumeration
            that specifies the action Laserfiche will take upon encountering a document
            name conflict during the volume attach.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.OnFolderConflict">
            <summary>
            Gets or sets a member of the <c>FolderConflictStrategy</c> enumeration
            that specifies the action Laserfiche will take upon encountering a folder
            name conflict during the volume attach.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.IndexOption">
            <summary>
            Gets or sets a member of the <c>IndexOption</c> enumeration which specifies
            which documents in the attached volume to schedule for full-text indexing.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.TemplateMappings">
            <summary>
            Gets a <c>TemplateMappingCollection</c> instance which provides a collection
            of <c>TemplateMapping</c> values that will be used to control template name
            mapping for the volume attach.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeAttachSettings.FieldMappings">
            <summary>
            Gets a <c>FieldMappingCollection</c> instance which provides a collection
            of <c>FieldMapping</c> values that will be used to control template field
            name mapping for the volume attach.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAttachSettings.AddTemplateMapping(Laserfiche.RepositoryAccess.TemplateMapping)">
            <summary>
            Adds a template name mapping to be used for the volume attach.
            </summary>
            <param name="mapping">A <c>TemplateMapping</c> value which describes a
            template name mapping that will be added to the mapping collection.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAttachSettings.RemoveTemplateMapping(System.String)">
            <summary>
            Removes a previously configured template name mapping.
            </summary>
            <param name="externalName">The name of the exported template definition
            to remove the mapping of.</param>
            <returns>True if a mapping was found and removed for the specified template
            name, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAttachSettings.AddFieldMapping(Laserfiche.RepositoryAccess.FieldMapping)">
            <summary>
            Adds a template field name mapping to be used for the volume attach.
            </summary>
            <param name="mapping">A <c>FieldMapping</c> value which describes a
            template field name mapping that will be added to the mapping collection.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeAttachSettings.RemoveFieldMapping(System.String,System.String)">
            <summary>
            Removes a previously configured template field name mapping.
            </summary>
            <param name="externalTemplateName">The name of the exported template
            to remove the associated mapping for.</param>
            <param name="externalFieldName">The name of the exported field to
            remove the associated mapping for.</param>
            <returns>True if the name mapping for the specified template field
            was found and removed, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ImageFileIdentifier">
            <summary>
            Contains information about an image file that had its checksum verified.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ElectronicFileIdentifier">
            <summary>
            Contains information about an electronic document file that had its checksum verified.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.AttachmentFileIdentifier">
            <summary>
            Contains information about an attachment file that had its checksum verified.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeChecksumReport">
            <summary>
            Results from a volume checksum verification operation.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeChecksumReport.#ctor(System.Int32,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Runs a volume checksum verification operation and initializes a
            <c>VolumeChecksumReport</c> instance which contains the results.
            </summary>
            <param name="volumeId">The ID of the Laserfiche volume to check.</param>
            <param name="samplePercent">The percent of files on the volume to sample,
            from 1 to 100.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeChecksumReport.#ctor(System.String,System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Runs a volume checksum verification operation and initializes a
            <c>VolumeChecksumReport</c> instance which contains the results.
            </summary>
            <param name="volumeName">The name of the Laserfiche volume to check.</param>
            <param name="samplePercent">The percent of files on the volume to sample,
            from 1 to 100.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.Volume">
            <summary>
            Gets a <c>VolumeInfo</c> instance representing the volume that the checksum
            verification was run on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.SamplePercent">
            <summary>
            Gets the sampling percentage used for the checksum verification.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.Operation">
            <summary>
            Gets the <c>LongOperation</c> instance representing the associated volume
            checksum verification operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.AttachmentFileMismatches">
            <summary>
            Gets information about attachment files with an incorrect checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.AttachmentFilesMissingChecksum">
            <summary>
            Gets information about attachment files with a missing checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.AttachmentFilesMissingData">
            <summary>
            Gets information about attachment files that are missing from the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.AttachmentFilesChecked">
            <summary>
            Gets a count of the number of attachments files that were checked in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ElectronicFileMismatches">
            <summary>
            Gets information about electronic document files with an incorrect checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ElectronicFilesMissingChecksum">
            <summary>
            Gets information about electronic document files with a missing checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ElectronicFilesMissingData">
            <summary>
            Gets information about electronic document files that are missing from the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ElectronicFilesChecked">
            <summary>
            Gets a count of the number of electronic document files that were checked in
            the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ImageFileMismatches">
            <summary>
            Gets information about image files with an incorrect checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ImageFilesMissingChecksum">
            <summary>
            Gets information about image files with a missing checksum.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ImageFilesMissingData">
            <summary>
            Gets information about image files that are missing from the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeChecksumReport.ImageFilesChecked">
            <summary>
            Gets a count of the number of image files that were checked in the volume.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeChecksumReport.Refresh">
            <summary>
            Refreshes the status of the checksum verification operation and returns true
            if the checksum report is ready.
            </summary>
            <returns>True if the checksum report is ready, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeFormatVersion">
            <summary>
            Enumeration of Laserfiche exported volume format versions.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeFormatVersion.Version6">
            <summary>
            Laserfiche 6 and above compatible exported volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeFormatVersion.Version7">
            <summary>
            Laserfiche 7 and above compatible exported volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeFormatVersion.Version8">
            <summary>
            Laserfiche 8 and above compatible exported volume.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeExportSettings">
            <summary>
            Represents the settings for a Laserfiche volume export operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.CopyFiles">
            <summary>
            Gets or sets a boolean indicating if the data files in the volume
            will be copied.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.IncludeShortcuts">
            <summary>
            Gets or sets a boolean indicating if shortcuts to documents residing
            in the volume will be included in the volume's exported metadata.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.Path">
            <summary>
            Gets or sets the path to the directory to which to export the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.VolumeFormatVersion">
            <summary>
            Gets or sets a member of the <c>VolumeFormatVersion</c> enumeration
            which specifies which volume export format version to use.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.Password">
            <summary>
            Gets or sets the password used to encrypt the exported volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.CompressFiles">
            <summary>
            Gets or sets a boolean indicating if the exported volume will be compressed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeExportSettings.EncryptFiles">
            <summary>
            Gets or sets a boolean indicating if the exported volume will be encrypted.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeExportSettings.#ctor">
            <summary>
            Initializes a new <c>VolumeExportSettings</c> instance.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeSecurity">
            <summary>
            Represents the access control information for a volume
            in a Laserfiche repository.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.#ctor">
            <summary>
            Initializes a <c>VolumeSecurity</c> instance with an empty ACL.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeSecurity.EffectiveRights">
            <summary>
            Gets the rights the current session has to the associated volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeSecurity.AccessRightType">
            <summary>
            Gets a <c>Type</c> instance for the <c>VolumeRights</c> type,
            representing the access rights supported for volumes.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identityReference">Not used.</param>
            <param name="accessMask">Not used.</param>
            <param name="isInherited">Not used.</param>
            <param name="inheritanceFlags">Not used.</param>
            <param name="propagationFlags">Not used.</param>
            <param name="flags">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeSecurity.AuditRuleType">
            <summary>
            This property is not supported.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.AddAccessRule(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Adds an access control entry (ACE) to the ACL represented by this instance.
            </summary>
            <param name="rule">A <c>VolumeAccessRule</c> representing the new ACE to
            add to the template security configuration.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.GetOwner(System.Type)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="targetType">Not used.</param>
            <returns>Does not return a value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.RemoveAccessRule(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Removes the specified access control entry from the represented security
            configuration.
            </summary>
            <param name="rule">A <c>VolumeAccessRule</c> instance which represents the
            access control entry to remove from the represented security configuration.</param>
            <returns>True if the specified <c>VolumeAccessRule</c> instance was found
            and removed, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.RemoveAccessRuleAll(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Removes all the access rules with an account identity that matches the
            one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>VolumeAccessRule</c> instance whose trustee
            identity matches the account identities of all the access rules
            removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.RemoveAccessRuleSpecific(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Removes all the access rules with an account identity and ACE type that
            match the one in the rule represented by the <paramref name="rule"/> argument.
            </summary>
            <param name="rule">A <c>VolumeAccessRule</c> instance whose trustee
            identity and ACE type match the access rules removed by this method.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.ResetAccessRule(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Removes all the access rules managed by this instance and resets the ACL
            to consist of only the specified access rule.
            </summary>
            <param name="rule">The <c>VolumeAccessRule</c> instance which will comprise
            the new ACL.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.SetAccessRule(Laserfiche.RepositoryAccess.VolumeAccessRule)">
            <summary>
            Removes all access rules in the existing ACL which match the ACE type
            and trustee identity of the rule specified by the <paramref name="rule"/>
            argument, and adds the argument to the ACL.
            </summary>
            <param name="rule">The <c>VolumeAccessRule</c> instance used when removing
            matching access rules from the ACL and to add to the ACL once the removal
            is complete.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.SetOwner(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Not supported; throws a <c>NotSupportedException</c> exception.
            </summary>
            <param name="identity">Not used.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeSecurity.VolumeRightsToString(Laserfiche.RepositoryAccess.VolumeRights)">
            <summary>
            Returns the standard Laserfiche string representation for the specified set of
            volume rights.
            </summary>
            <param name="rights">The set of volume rights to get the string representation
            of.</param>
            <returns>The standard Laserfiche string representation for the specified set of
            volume rights.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeStatistics">
            <summary>
            Represents a collection of statistics describing a Laserfiche volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.OldestDocumentCreationUtc">
            <summary>
            Gets the creation date/time for the oldest document in the volume
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.OldestDocumentCreation">
            <summary>
            Gets the creation date/time for the oldest document in the volume
            in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.NewestDocumentCreationUtc">
            <summary>
            Gets the creation date/time for the newest document in the volume
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.NewestDocumentCreation">
            <summary>
            Gets the creation date/time for the newest document in the volume
            in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.MostRecentModificationUtc">
            <summary>
            Gets the last modification date/time for the most recently modified
            document on the volume in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.MostRecentModification">
            <summary>
            Gets the last modification date/time for the most recently modified
            document on the volume in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.FixedSize">
            <summary>
            Gets the total sum of all file sizes stored under the volume's fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.RemovableSize">
            <summary>
            Gets the total sum of all file sizes stored under the volume's removable
            path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.FixedFileCount">
            <summary>
            Gets the count of the number of files stored under the volume's fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.RemovableFileCount">
            <summary>
            Gets the count of the number of files stored under the volume's removable path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.DocumentCount">
            <summary>
            Gets the count of the number of documents that reside in the volume, including
            those in the recycle bin not yet purged.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.IndexedDocumentCount">
            <summary>
            Gets the count of the number of indexed documents that reside in the volume,
            including those in the recycle bin not yet purged.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.UniqueTemplateCount">
            <summary>
            Get a count of the total number of unique templates assigned to documents
            that reside in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.PageCount">
            <summary>
            Gets a count of the total number of document pages that reside in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveRemovableFileCount">
            <summary>
            Gets the count of the number of live files stored under the volume's removable path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveFixedFileCount">
            <summary>
            Gets the count of the number of lives files stored under the volume's fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveRemovableFileSize">
            <summary>
            Gets the total sum of live file sizes stored under the volume's removable
            path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveFixedFileSize">
            <summary>
            Gets the total sum of live file sizes stored under the volume's fixed path.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveDocumentCount">
            <summary>
            Gets the count of the number of live documents that reside in the volume,
            which excludes those in the recycle bin.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveIndexedDocumentCount">
            <summary>
            Gets the count of the number of indexed live documents that reside in the volume,
            which excludes those in the recycle bin.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LivePageCount">
            <summary>
            Gets a count of the total number of live document pages that reside in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveUniqueTemplateCount">
            <summary>
            Get a count of the total number of unique templates assigned to live documents
            that reside in the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.OldestLiveDocumentCreationUtc">
            <summary>
            Gets the creation date/time for the oldest document in the volume
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.OldestLiveDocumentCreation">
            <summary>
            Gets the creation date/time for the oldest live document in the volume
            in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.NewestLiveDocumentCreationUtc">
            <summary>
            Gets the creation date/time for the newest live document in the volume
            in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.NewestLiveDocumentCreation">
            <summary>
            Gets the creation date/time for the newest live document in the volume
            in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveMostRecentModificationUtc">
            <summary>
            Gets the last modification date/time for the most recently modified
            live document on the volume in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.LiveMostRecentModification">
            <summary>
            Gets the last modification date/time for the most recently modified
            live document on the volume in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.SizeOnDisk">
            <summary>
            Gets the total amount of disk storage space the volume data consumes.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.FreeDiskSpace">
            <summary>
            Gets the amount of free space left on the disk where the volume's fixed path resides.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeStatistics.TotalDiskSpace">
            <summary>
            Gets the capacity of the disk where the volume's fixed path resides.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WatermarkCollection">
            <summary>
            Represents a read-only collection of Laserfiche watermark text strings.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WatermarkCollection.CopyTo(System.String[])">
            <summary>
            Copies the entire <c>String</c> collection to a compatible
            one-dimensional <c>System.Array</c>, starting at the beginning of the
            target array.
            </summary>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have
            zero-based indexing.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WatermarkCollection.CopyTo(System.Int32,System.String[],System.Int32,System.Int32)">
            <summary>
            Copies the specified portion of the <c>String</c> collection to
            a compatible one-dimensional <c>System.Array</c>, starting at the specified
            index in the array.
            </summary>
            <param name="index">The zero-based index in the collection from which to begin
            copying elements.</param>
            <param name="array">The one-dimensional array that is the target of the
            elements copied from the collection.  The array must have zero-based
            indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array
            from which to place the destination elements.</param>
            <param name="count">The number of elements in the collection to copy.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WindowsAccountReader">
            <summary>
            Provides the ability to enumerate <c>TrusteeInfo</c> instances
            which represent references to Windows accounts configured in a Laserfiche
            repository that match the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SearchHitHighlight">
            <summary>
            Represents the information required to draw a highlight for a single search hit
            returned in the results from a Laserfiche search operation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.HitType">
            <summary>
            Gets a member of the <c>HitType</c> enumeration which specifies what
            kind of hit type this instance represents.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.IsAnnotationHit">
            <summary>
            Gets a boolean indicating if this instance represents a hit on text stored
            in an annotation.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.AnnotationId">
            <summary>
            Gets the annotation ID of the annotation that the hit that this instance
            represents is associated with, if any.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.EntryId">
            <summary>
            Gets the entry ID of the document that the represented search hit belongs to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.PageNumber">
            <summary>
            Gets the page number of the document that the represented search hit resides on.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.TextOffset">
            <summary>
            Gets the character offset of the represented hit relative to the start of
            the page or annotation text.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.HitLength">
            <summary>
            Gets the length of the represented search hit in number of characters.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SearchHitHighlight.ImageLocation">
            <summary>
            Gets a <c>LfRectangle</c> value which represents the highlight area on the
            page image corresponding to the represented search hit.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TextRange">
            <summary>
            Represents a single, contiguous range of text in a text stream, usually
            in a single page in a Laserfiche document.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a <c>TextRange</c> value.
            </summary>
            <param name="start">The starting position to store.</param>
            <param name="end">The ending position to store.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextRange.StartPosition">
            <summary>
            Gets or sets the position of the first character in the range.
            </summary>
            <remarks>
            The first character in the stream has position 0, the second character
            is position 1, etc.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextRange.EndPosition">
            <summary>
            Gets or sets the position of the last character in the range.
            </summary>
            <remarks>
            This property is inclusive, so the character referenced by <c>EndPosition</c>
            is part of the range.  The first character in the stream has position 0,
            the second character is position 1, etc.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextRange.Length">
            <summary>
            Gets the length of the represented text range, in characters.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.Union(Laserfiche.RepositoryAccess.TextRange)">
            <summary>
            Returns the smallest <c>TextRange</c> that spans this <c>TextRange</c>
            and the specified value.
            </summary>
            <param name="other">The other <c>TextRange</c> value to calculate the
            union of.</param>
            <returns>The smallest <c>TextRange</c> that spans this <c>TextRange</c>
            and the specified value.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.Union(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.TextRange})">
            <summary>
            Returns the smallest <c>TextRange</c> that spans the given list of
            <c>TextRange</c> values.
            </summary>
            <param name="ranges">A list of <c>TextRange</c> values to calculate
            the union of.</param>
            <returns>The smallest <c>TextRange</c> that spans the given list of
            <c>TextRange</c> values.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.op_Equality(Laserfiche.RepositoryAccess.TextRange,Laserfiche.RepositoryAccess.TextRange)">
            <summary>
            Returns a boolean indicating if two <c>TextRange</c> values are equal.
            </summary>
            <param name="lhs">The first <c>TextRange</c> value to compare.</param>
            <param name="rhs">The second <c>TextRange</c> value to compare.</param>
            <returns>True if the arguments are equal to each other, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.op_Inequality(Laserfiche.RepositoryAccess.TextRange,Laserfiche.RepositoryAccess.TextRange)">
            <summary>
            Returns a boolean indicating if two <c>TextRange</c> values are not equal.
            </summary>
            <param name="lhs">The first <c>TextRange</c> value to compare.</param>
            <param name="rhs">The second <c>TextRange</c> value to compare.</param>
            <returns>True if the arguments are not equal to each other, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextRange.Equals(Laserfiche.RepositoryAccess.TextRange)">
            <summary>
            Returns true if this value is equal to the specified <c>TextRange</c>.
            </summary>
            <param name="other">A <c>TextRange</c> value to compare for equality.</param>
            <returns>True if this <c>TextRange</c> value is equal to the specified
            value, false otherwise.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.TextLinker">
            <summary>
            Provides the ability to match and link a page's OCR locations rectangles
            with its text.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.#ctor(Laserfiche.RepositoryAccess.WordsReader,Laserfiche.RepositoryAccess.WordLocationsReader)">
            <summary>
            Initializes a <c>TextLinker</c> instance from the provided
            <c>WordsReader</c> instance and <c>WordLocationsReader</c> instance.
            </summary>
            <param name="text">A <c>WordsReader</c> instance that represents the
            page text as a sequence of words.</param>
            <param name="locations">A <c>WordLocationsReader</c> instance that
            represents the word locations for the words returned by the specified
            <c>WordsReader</c> instance.</param>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.TextLinker.WordCount">
            <summary>
            Gets the number of words in the stored word locations list.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetRectanglesInRange(System.Int32,System.Int32)">
            <summary>
            Gets the list of word location rectangles for the text in the specified
            character position range.
            </summary>
            <param name="begin">The starting character position of the text range to
            return corresponding word locations for.</param>
            <param name="end">The inclusive end character position of the text range to
            return corresponding word locations for.</param>
            <returns>A list of <c>LfRectangle</c> values representing word locations
            for the words in the specified character range.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetRectanglesInRange(Laserfiche.RepositoryAccess.TextRange)">
            <summary>
            Returns a list of location rectangles that are in the specified text range.
            </summary>
            <param name="range">The text range to return rectangles for.</param>
            <returns>A  list of location rectangles that are in the specified text range.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetSpanningTextRange(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the starting and ending character position for the specified word
            location rectangle.
            </summary>
            <param name="rectangleNumber">The 0-based index of the word location
            rectangle to look up.</param>
            <param name="startPos">The starting character position of the corresponding
            word.</param>
            <param name="endPos">The ending character position of the corresponding
            word.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetSpanningTextRange(System.Int32)">
            <summary>
            Returns the starting and ending character position for the specified word
            location rectangle.
            </summary>
            <param name="rectangleNumber">The 0-based index of the word location
            rectangle to look up.</param>
            <returns>The starting and ending character position for the specified word
            location rectangle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetSpanningTextRange(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the starting and ending character position for the specified range
            of word location rectangles.
            </summary>
            <param name="startingRectNumber">The 0-based starting index of the word
            location rectangles to look up.</param>
            <param name="endingRectNumber">The 0-based inclusive ending index of the word
            location rectangles to look up.</param>
            <param name="startPos">The starting character position of the corresponding
            word range.</param>
            <param name="endPos">The ending character position of the corresponding
            word range.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetSpanningTextRange(System.Int32,System.Int32)">
            <summary>
            Returns the starting and ending character position for the specified range
            of word location rectangles.
            </summary>
            <param name="startingRectNumber">The 0-based starting index of the word
            location rectangles to look up.</param>
            <param name="endingRectNumber">The 0-based inclusive ending index of the word
            location rectangles to look up.</param>
            <returns>The starting and ending character position for the specified range
            of word location rectangles.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetTextRanges(Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Returns a minimal list of text ranges that cover the specified location
            rectangle.
            </summary>
            <param name="rectangle">The 0-based starting index of the word
            location rectangle to look up.</param>
            <returns>A minimal list of text ranges that are covered by the specified
            location rectangle.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.TextLinker.GetTextRanges(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.Common.LfRectangle})">
            <summary>
            Returns a minimal list of text ranges that cover the specified set of
            location rectangles.
            </summary>
            <param name="rectangles">A set of location rectangles to return a corresponding
            minimally covering set of <c>TextRange</c> values for.</param>
            <returns>A minimal list of text ranges that cover the specified set of
            location rectangles.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.GeoPoint">
            <summary>
            A class represents a point in geography
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.WkbGeoType">
            <summary>
            An enumeration of GeoType.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.Point2D">
            <summary>
            A class represents a single wkb point
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.PointZ">
            <summary>
            A class represents a single wkb point with Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.PointM">
            <summary>
            A class represents a single wkb point with M
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Laserfiche.RepositoryAccess.Spatial.PointZM" -->
        <member name="T:Laserfiche.RepositoryAccess.Spatial.LineString">
            <summary>
            A class represents a single wkb line string
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.LineStringZ">
            <summary>
            A class represents a single wkb line string with Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.LineStringM">
            <summary>
            A class represents a single wkb line string with M
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Laserfiche.RepositoryAccess.Spatial.LineStringZM" -->
        <member name="T:Laserfiche.RepositoryAccess.Spatial.Polygon">
            <summary>
            A class represents a single wkb polygon
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.PolygonZ">
            <summary>
            A class represents a single wkb polygon with Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.PolygonM">
            <summary>
            A class represents a single wkb polygon with M
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.PolygonZM">
            <summary>
            A class represents a single wkb polygon with ZM
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPoint">
            <summary>
            A class represents a multi wkb point
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPointZ">
            <summary>
            A class represents a multi wkb point with Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPointM">
            <summary>
            A class represents a multi wkb point with M
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPointZM">
            <summary>
            A class represents a multi wkb point with ZM
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiLineString">
            <summary>
            A class represents a multi wkb line tring
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiLineStringZ">
            <summary>
            A class represents a multi wkb line tring with Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiLineStringM">
            <summary>
            A class represents a multi wkb line tring with M
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiLineStringZM">
            <summary>
            A class represents a multi wkb line tring with ZM
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPolygon">
            <summary>
            A class represents a multi wkb polygon
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPolygonZ">
            <summary>
            A class represents a multi wkb polygon Z
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPolygonM">
            <summary>
            A class represents a multi wkb polygon M
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.MultiPolygonZM">
            <summary>
            A class represents a multi wkb polygon ZM
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Spatial.GeoConverter">
            <summary>
            A set of utility methods to convert between different representations of
            geometry types.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePoint2D(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPoint</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPoint</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePoint2D(System.String)">
            <summary>
            Convert to an instance of <c>WkbPoint</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPoint</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePointZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPointZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPointZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePointZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbPointZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPointZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePointM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPointM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPointM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePointM(System.String)">
            <summary>
            Convert to an instance of <c>WkbPointM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPointM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePointZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPointZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPointZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePointZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbPointZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPointZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeLineString(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbLineString</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbLineString</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseLineString(System.String)">
            <summary>
            Convert to an instance of <c>WkbLineString</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbStringLine</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeLineStringZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbLineStringZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbLineStringZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseLineStringZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbLineStringZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbStringLineZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeLineStringM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbLineStringM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbLineStringM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseLineStringM(System.String)">
            <summary>
            Convert to an instance of <c>WkbLineStringM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbStringLineM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeLineStringZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbLineStringZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbLineStringZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseLineStringZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbLineStringZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbStringLineZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePolygon(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPolygon</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPolygon</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePolygon(System.String)">
            <summary>
            Convert to an instance of <c>WkbPolygon</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPolygon</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePolygonZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPolygonZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPolygonZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePolygonZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbPolygonZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPolygonZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePolygonM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPolygonM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPolygonM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePolygonM(System.String)">
            <summary>
            Convert to an instance of <c>WkbPolygonM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPolygonM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodePolygonZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbPolygonZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbPolygonZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParsePolygonZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbPolygonZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbPolygonZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPoint(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPoint</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPoint</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPoint(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPoint</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPoint</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPointZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPointZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPointZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPointZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPointZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPointZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPointM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPointM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPointM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPointM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPointM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPointM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPointZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPointZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPointZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPointZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPointZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPointZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiLineString(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiLineString</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiLineString</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiLineString(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiLineString</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiLineString</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiLineStringZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiLineStringZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiLineStringZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiLineStringZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiLineStringM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiLineStringM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiLineStringM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiLineStringM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiLineStringZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiLineStringZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiLineStringZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiLineStringZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiLineStringZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPolygon(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygon</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPolygon</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPolygon(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygon</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPolygon</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPolygonZ(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonZ</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPolygonZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPolygonZ(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonZ</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPolygonZ</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPolygonM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPolygonM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPolygonM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPolygonM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeMultiPolygonZM(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonZM</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="pos">the start index.</param>
            <returns>An instance of <c>WkbMultiPolygonZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.ParseMultiPolygonZM(System.String)">
            <summary>
            Convert to an instance of <c>WkbMultiPolygonZM</c> from the wkt
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <returns>An instance of <c>WkbMultiPolygonZM</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.DecodeWkb(System.Byte[],System.Int32@)">
            <summary>
            Convert to an instance of <c>WkbShape</c> from the wkb
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="index">the start index.</param>
            <returns>An instance of <c>WkbShape</c>
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.WktToWkb(System.String)">
            <summary>
            Convert from the Well-Known Text to its Well-Known Binary
            </summary>
            <param name="wkt">the wkb that need to be converted</param>
            <returns>the Well-Known binary converted from the given Well-Konwn Text
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.WktToEwkb(System.String,System.Int32)">
            <summary>
            Convert from the Well-Known Text to its Extended Well-Known Binary
            The first four bytes are SRID.
            </summary>
            <param name="wkt">the wkt that need to be converted</param>
            <param name="srid">the specified srid</param>
            <returns>the Extended Well-Known Text converted from the given Well-Konwn Binary
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.EwkbToWkt(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Convert from the Extended Well-Known Binary to its Well-Known Text
            </summary>
            <param name="ewkb">the wkb that need to be converted</param>
            <param name="startIndex">start index.</param>
            <param name="srid">The SRID of the object described by the EWKB blob.</param>
            <returns>the Extended Well-Known binary converted from the given Well-Konwn Text
            </returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Spatial.GeoConverter.WkbToWkt(System.Byte[],System.Int32)">
            <summary>
            Convert from the Well-Known Binary to its Well-Known Text
            </summary>
            <param name="wkb">the wkb that need to be converted</param>
            <param name="startIndex">start index.</param>
            <returns>the Well-Known binary converted from the given Well-Konwn Text
            </returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WordLocationsReader">
            <summary>
            Reads and decodes OCR word locations from a raw locations data stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordLocationsReader.EndOfStream">
            <summary>
            Gets a boolean indicating if an end of stream condition has been encountered.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordLocationsReader.WordLocationCount">
            <summary>
            Gets a count of the number of word location rectangles.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordLocationsReader.Position">
            <summary>
            Gets the current position in the data stream, as a location index number.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a <c>WordLocationsReader</c> instance from a raw byte oriented
            stream of OCR locations data.
            </summary>
            <param name="fileName">A <c>Stream</c> instance representing a raw word locations data.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.#ctor(System.Byte[])">
            <summary>
            Initializes a <c>WordLocationsReader</c> instance from a raw byte oriented
            stream of OCR locations data.
            </summary>
            <param name="data">The raw location data stored in a byte array.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a <c>WordLocationsReader</c> instance from a raw byte oriented
            stream of OCR locations data.
            </summary>
            <param name="data">The raw location data stored in a byte array.</param>
            <param name="index">The offset in the byte array from where the location data starts.</param>
            <param name="count">The length of the location data, in bytes.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.Read">
            <summary>
            Reads the next OCR word location from the stream.
            </summary>
            <returns>The next word location rectangle in the stream.</returns>
            <exception cref="T:System.IO.EndOfStreamException">If EndOfStream is true when the method is called.</exception>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.Read(Laserfiche.RepositoryAccess.Common.LfRectangle[],System.Int32,System.Int32)">
            <summary>
            Reads one or more OCR word locations from the current position
            in the stream.
            </summary>
            <param name="buffer">The array to store the OCR word locations in.</param>
            <param name="index">The index in the array referenced by the
            <paramref name="buffer"/> to begin storing data at.</param>
            <param name="count">The maximum number of <c>LfRectangle</c> values
            to read.</param>
            <returns>The number of OCR word locations read from the stream.  Zero
            indicates an end of file condition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsReader.Close">
            <summary>
            Closes the underlying stream and releases allocated resources.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WordLocationsWriter">
            <summary>
            Writes OCR word locations data to a stream.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordLocationsWriter.BaseStream">
            <summary>
            Gets the underlying <c>Stream</c> instance that the OCR word locations
            data is written to.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a <c>WordLocationsWriter</c> instance.
            </summary>
            <param name="baseStream">The underlying stream to write the output to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsWriter.Write(Laserfiche.RepositoryAccess.Common.LfRectangle[],System.Int32,System.Int32)">
            <summary>
            Writes an array of OCR word locations to the data stream.
            </summary>
            <param name="buffer">An array of <c>LfRectangle</c> values representing
            the OCR word locations to write.</param>
            <param name="offset">The offset in the array referenced by the
            <paramref name="buffer"/> argument to begin reading data from.</param>
            <param name="count">The number of <c>LfRectangle</c> values to write.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsWriter.Write(Laserfiche.RepositoryAccess.Common.LfRectangle)">
            <summary>
            Writes a <c>LfRectangle</c> value representing an OCR word location to the
            data stream.
            </summary>
            <param name="rectangle">A <c>LfRectangle</c> value representing the OCR
            word location to write.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordLocationsWriter.Close">
            <summary>
            Closes the data stream and releases all allocated resources.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.WordsReader">
            <summary>
            Breaks up a text stream into words, following the same rules as the Laserfiche
            OCR system.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordsReader.EndOfStream">
            <summary>
            Gets a boolean indicating if an end of stream condition has been encountered.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.WordsReader.Position">
            <summary>
            Gets the current position in the underlying data stream in terms of the byte
            offset from when the current instance began reading from.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a <c>WordsReader</c> instance from a <c>Stream</c> instance.
            </summary>
            <param name="input">A <c>Stream</c> instance representing the underlying
            data stream, which must be open and readable.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a <c>WordsReader</c> instance from a <c>Stream</c> instance,
            using the specified character encoding.
            </summary>
            <param name="input">A <c>Stream</c> instance representing the underlying
            data stream, which must be open and readable.</param>
            <param name="encoding">An <c>Encoding</c> instance specifying the text
            encoding of the data stream.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a <c>WordsReader</c> instance from a <c>TextReader</c> instance.
            </summary>
            <param name="input">A <c>TextReader</c> instance representing the
            underlying data stream, which must be open and readable.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.Read(Laserfiche.RepositoryAccess.PageTextWord@)">
            <summary>
            Reads and returns the next word in the data stream, and advances the
            stream position.
            </summary>
            <param name="pageWord">On output, contains the next word in the data strea, or
            a null reference if an end of stream condition was encountered.</param>
            <returns>True if a word was read, false if an end of stream condition
            was encountered.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.Read">
            <summary>
            Reads and returns the next word from the text stream.  The position
            is advanced.
            </summary>
            <returns>The PageTextWord representing the next word in the stream, or a null
            reference if an end of stream condition was encountered.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.Read(Laserfiche.RepositoryAccess.PageTextWord[],System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Attempts to read the specified number of words starting from the current
            position in the stream, and advances the stream position.
            </summary>
            <param name="words">A reference to the array where the data will be
            written to.</param>
            <param name="index">The index in the array from which to begin storing
            words.</param>
            <param name="count">The maximum number of words to read from the stream.</param>
            <param name="textStart">On return, contains the position of the first character
            of the first word returned.</param>
            <param name="textEnd">On return, contains the position of the last character
            of the last word returned.</param>
            <returns>The number of words read and returned.  A value of 0 indicates an
            end of stream condition.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.WordsReader.Close">
            <summary>
            Closes the stream and releases all allocated resources.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.XmlUtil">
            <summary>
            Utility class for XML operations.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.XmlUtil.GetStdReader(System.IO.Stream)">
            <summary>
            Returns an <c>XmlReader</c> instance for a given stream with the standard
            settings.
            </summary>
            <param name="input">The stream containing XML data to parse.</param>
            <returns>An <c>XmlReader</c> instance for the stream specified
            by <paramref name="input"/>.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.XmlUtil.EscapeXML(System.String)">
            <summary>
            Escape control characters for transmissing in an XML document.
            All non-printable ASCII control characters are
            escaped in the format \XX, where 'XX' is the hex value of the
            character.
            </summary>
            <param name="xmlValue">The XML value string to escape.</param>
            <returns>An escaped string value.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.RepositoryRegistration">
            <summary>
            Represents a Laserfiche repository registration.
            </summary>
            <remarks>
            A repository registration is an entity that describes the information
            about a repository necessary to connect to it.  The presence of a
            registration does not guarantee that the described repository is
            currently available to connect to, or that it even still exists.
            
            Repository registrations may be published on the network, in the Windows
            registry, or in files.  Certain Laserfiche client applications cache
            information about a repository to the local system after successfully
            connecting to it.  Some Laserfiche applications and utilities allow users
            to manage the set of repository registrations on a host.
            </remarks>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RepositoryRegistration.DEFAULT_PORT">
            <summary>
            The default TCP port that Laserfiche uses for communicating with HTTP.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.RepositoryRegistration.DEFAULT_SECURE_PORT">
            <summary>
            The default TCP port that Laserfiche uses for communicating with HTTP over
            TLS/SSL, also known as secure HTTP.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.Name">
            <summary>
            Gets or sets the name of the repository.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.ServerName">
            <summary>
            Gets or sets the host name of the computer that hosts the Laserfiche content
            server instance that the repository is attched to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.Port">
            <summary>
            Gets or sets the TCP port number that the Laserfiche content server instance that the
            repository is attached to is listening on for HTTP requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.SecurePort">
            <summary>
            Gets or sets the TCP port number that the Laserfiche content server instance that the
            repository is attached to is listening on for HTTP over TLS/SSL (secure HTTP) requests.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.NotificationsPort">
            <summary>
            Gets or sets the TCP port number that the Laserfiche content server instance
            that the repository is attached to is listening for notification requests over LRNP.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.RepositoryRegistration.UseTls">
            <summary>
            Gets a boolean which enables or disables the use of TLS/SSL.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistration.#ctor">
            <summary>
            Initializes a <c>RepositoryRegistration</c> instance using "localhost" for the
            <c>ServerName</c> property, "default" for the <c>Name</c> property, and
            the default Laserfiche ports.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistration.#ctor(System.String,System.String)">
            <summary>
            Initializes a <c>RepositoryRegistration</c> instance using the specified
            server name and repository name.
            </summary>
            <param name="serverName">The name of the computer that the Laserfiche content
            server that the repository is attached to is running on.</param>
            <param name="name">The Laserfiche repository name.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistration.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a <c>RepositoryRegistration</c> instance using the specified
            server name, repository name and TCP port numbers.
            </summary>
            <param name="serverName">The name of the computer that the Laserfiche content
            server that the repository is attached to is running on.</param>
            <param name="name">The Laserfiche repository name.</param>
            <param name="port">The TCP port number that Laserfiche listens on for
            communication with HTTP.</param>
            <param name="securePort">The TCP port number that Laserfiche listens on for
            communication with HTTP over TLS/SSL.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistration.#ctor(Laserfiche.RepositoryAccess.Server,System.String)">
            <summary>
            Initializes a <c>RepositoryRegistration</c> instance from a <c>Server</c> instance
            and a repository name.
            </summary>
            <param name="server">A <c>Server</c> instance that represents the Laserfiche
            content server instance hosting the repository.</param>
            <param name="name">The Laserfiche repository name.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.RepositoryRegistration.GetServer">
            <summary>
            Returns a <c>Server</c> instance which represents the Laserfiche server that
            the referenced repository is attached to.
            </summary>
            <returns>A <c>Server</c> instance which represents the Laserfiche server that
            the referenced repository is attached to.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LogInEventArgs">
            <summary>
            Information describing a log in event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogInEventArgs.UserName">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogInEventArgs.Repository">
            <summary>
            Gets the repository name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogInEventArgs.Server">
            <summary>
            Gets the server name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LogInEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a <c>LogInEventArgs</c> instance.
            </summary>
            <param name="userName">The user name.</param>
            <param name="repoName">The repository name.</param>
            <param name="server">The server name.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.LogOutEventArgs">
            <summary>
            Information describing a log out event.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogOutEventArgs.UserName">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogOutEventArgs.Repository">
            <summary>
            Gets the repository name.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.LogOutEventArgs.Server">
            <summary>
            Gets the server name.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.LogOutEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a <c>LogOutEventArgs</c> instance.
            </summary>
            <param name="userName">The user name.</param>
            <param name="repoName">The repository name.</param>
            <param name="server">The server name.</param>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.DelegatedAccessToken">
            <summary>
            A user name and password combination for logging in using delegated access.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DelegatedAccessToken.UserName">
            <summary>
            The username to log in with.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.DelegatedAccessToken.Password">
            <summary>
            The password to use to log in.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Session">
             <summary>
             Represents a session in a Laserfiche server instance.
             </summary>
             <remarks>
             The <c>Session</c> class handles connecting to a Laserfiche server, logging
             in, maintaining a session, and logging out.  Most classes that communicate
             with a Laserfiche server in the <c>Laserfiche.RepositoryAccess</c> namespace require
             a <c>Session</c> object.  When a session is terminated, the objects associated
             with the <c>Session</c> object do not automatically become disassociated with
             the <c>Session</c> instance, but they can no longer save to or refresh state
             from the server until a new session is established.
            
             Whenever a LaserficheObject derived class associated with a session is modified,
             a reference to the class instance is stored in an internal list of pending
             objects maintained by the <c>Session</c> class.  All of these changes can be
             saved or discarded en masse through the <c>Save</c> and <c>Discard</c> member
             functions.
            
             The <c>Session</c> class is not thread-safe.  Multiple threads must synchronize
             access to an instance of the <c>Session</c> class.
             </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetHostIds">
            <summary>
            Returns the host IDs (MAC addresses) of all active NICs on this computer
            </summary>
            <returns>The computer's host ID.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetClientName">
            <summary>
            Returns the host name of the client for the current Terminal Server session.
            </summary>
            <returns>The host name of the client for the current Terminal Server session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetClientHostName">
            <summary>
            Returns the client host name to be reported to the server when logging in.
            </summary>
            <returns>A string whose value is the client host name.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetSerializedConnection(System.Double)">
            <summary>
            Returns an <c>IStream</c> containing the serialized connection data.
            </summary>
            <param name="earliestVersion">The earliest version of LFSO that will use this serialized connection.</param>
            <returns>An <c>IStream</c> containing the serialized connection data.</returns>
            <remarks>
            This method can be used to initialize an LFSO <c>LFConnection</c> object with
            this instance's connection data using the <c>ILFConnection.CloneFromSerializedConnection</c>
            method. The <c>LFConnection</c> object will use the same session as this
            originating <c>Session</c> object.
            
            Older versions of LFSO used a different format. Specifying a version of 8.1 or
            greater will use the new format. Specifying 8.0 will combine the legacy format
            with the new format.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetSerializedConnectionString(System.Double)">
            <summary>
            Returns a string containing the serialized connection data.
            </summary>
            <param name="earliestVersion">The earliest version of LFSO that will use this serialized connection.</param>
            <returns>A string containing the serialized connection data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.CreateFromSerializedLFConnection(System.Object)">
            <summary>
            Creates a <c>Session</c> instance from serialized connection data acquired from
            LFSO's <c>ILFConnection.SerializedConnection</c> property.  The <c>Session</c>
            will use the same session as the originating <c>LFConnection</c> object.
            </summary>
            <param name="serializedConn">An object reference returned from the
            <c>ILFConnection.SerializedConnection</c> property.</param>
            <returns>A <c>Session</c>c instance that shares the Laserfiche session with the
            originating <c>LFConnection</c> object.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.CreateFromSerializedLFConnectionString(System.String)">
            <summary>
            Creates a <c>Session</c> instance from a serialized connection data string
            acquired from LFSO's <c>ILFConnection.SerializedConnectionString</c> property.
            The <c>Session</c> will use the same session as the originating <c>LFConnection</c>
            object.
            </summary>
            <param name="serializedConnString">A string returned from the
            <c>ILFConnection.SerializedConnectionString</c> property.</param>
            <returns>A <c>Session</c> instance that shares the Laserfiche session with the
            originating <c>LFConnection</c> object.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetDelegatedAccessToken(System.DateTime,System.Int32,Laserfiche.RepositoryAccess.Privileges,System.Boolean)">
            <summary>
            Returns credentials that can be used to log in to Laserfiche to create a new
            session with an access token that is identical to the current session.
            </summary>
            <param name="expiration">The time at which the delegated access token expires.</param>
            <param name="maxUses">The maximum number of times a session can be created using
            the returned credentials</param>
            <param name="privMask">A privilege mask; the new session's resulting privilges
            will be the bitwise AND of the current session's privileges and this mask.</param>
            <param name="readOnly">A boolean indicating whether the new session should be
            marked as read-only.</param>
            <returns>A <c>DelegatedAccessToken</c> instance containing credentials that can
            be used to log in to Laserfiche to create a new session with an access token that
            is identical to the current session.</returns>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Locale">
            <summary>
            Gets the <c>System.Globalization.CultureInfo</c> object associated with the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.TimeZone">
            <summary>
            Gets the <c>System.TimeZoneInfo</c> object associated with the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.ApplicationName">
            <summary>
            Gets or sets the application name associated with the session.
            </summary>
            <remarks>
            The <c>ApplicationName</c> property cannot be modified after logging in.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.ApplicationId">
            <summary>
            Gets or sets the registered application ID.  This should only be set
            by registered applications.
            </summary>
            <remarks>
            The <c>ApplicationId</c> property cannot be modified after logging in.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.CanShareLicense">
            <summary>
            Gets or sets whether the user license is shareable with other sessions.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Connection">
            <summary>
            Gets the <c>HttpConnection</c> instance to the Laserfiche server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.AutoReconnect">
            <summary>
            Gets or sets whether the connection should automatically log back in.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.HasPendingChanges">
            <summary>
            Returns true if there are pending LaserficheObject changes to be sent to
            Laserfiche; returns false otherwise.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IntegratedSecurity">
            <summary>
            Returns true if the session logged on using Windows Authentication; false
            otherwise.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.OSUserName">
            <summary>
            Gets the Windows user name if the session logged on using Windows Authentication.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.HostName">
            <summary>
            Gets the host name that will be sent to the server.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsSecure">
            <summary>
            Gets or sets a boolean indicating if the connection to the server will use
            TLS/SSL encryption.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.ServerCertificateInfo">
            <summary>
            Gets information about the server's certificate if an encrypted connection
            over TLS/SSL is being used.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsAuthenticated">
            <summary>
            Returns true if this session is authenticated to a Laserfiche instance;
            returns false otherwise.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsConnected">
            <summary>
            Gets a boolean indicating if this instance has established a connection to
            Laserfiche.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsReadOnly">
            <summary>
            Returns true if this session is read-only; returns false otherwise.
            </summary>
            <remarks>
            The <c>IsReadOnly</c> property cannot be modified after logging in.
            </remarks>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsFromCD">
            <summary>
            For internal use only; do not set.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Repository">
            <summary>
            Gets information about the repository the session is connected to.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Id">
            <summary>
            Gets the session ID.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Guid">
            <summary>
            Gets the session Guid.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.FeatureRights">
            <summary>
            Gets the effective feature rights of the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.SuccessAuditMask">
            <summary>
            Gets the successful event audit mask.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.FailureAuditMask">
            <summary>
            Gets the failure event audit mask.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LastLogInUtc">
            <summary>
            Gets the date and time of the current user's last log in to the
            current Laserfiche repository in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LastLogIn">
            <summary>
            Gets the date and time of the current user's last log in to the
            current Laserfiche repository in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LastLogOutUtc">
            <summary>
            Gets the date and time of the current user's last log out from
            the current Laserfiche repository in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LastLogOut">
            <summary>
            Gets the date and time of the current user's last log out from
            the current Laserfiche repository in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LogInTimeUtc">
            <summary>
            Gets the date and time this session logged in to Laserfiche in Universal time (UTC).
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.LogInTime">
            <summary>
            Gets the date and time this session logged in to Laserfiche in local time.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.PasswordHasExpired">
            <summary>
            Returns true if the password is expired; returns false otherwise.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.PasswordExpirationWarningDays">
            <summary>
            Gets the number of days before the password is set to expire, or -1 if the password
            does not expire.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.Privileges">
            <summary>
            Gets the effective privileges of the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.IsCommunicationCompressed">
            <summary>
            Gets or sets a boolean indicating whether network communications to
            Laserfiche are compressed or not.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.ServerVersion">
            <summary>
            Gets the server version associated with the session.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.ServerVersionNumber">
            <summary>
            Gets the server's product version.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.SupportedFeatures">
            <summary>
            Gets a collection of features that the Laserfiche content repository
            service supports.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.UserIdentity">
            <summary>
            Gets the <c>SecurityIdentifier</c> object that represents the identity of
            the session's user account.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.Session.UserName">
            <summary>
            Gets the account name of the current user.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <c>Session</c> object and logs in using a Laserfiche user
            account with password authentication.
            </summary>
            <param name="serverName">The name of the Laserfiche server to log in to.</param>
            <param name="repositoryName">The Laserfiche repository name.</param>
            <param name="userName">The Laserfiche user name.</param>
            <param name="password">The password to log in with.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(System.String,System.String)">
            <summary>
            Creates a new <c>Session</c> object and logs in to Laserfiche using
            the current thread's Windows credentials.
            </summary>
            <param name="serverName">The name of the Laserfiche server to log in to.</param>
            <param name="repositoryName">The Laserfiche repository name.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(Laserfiche.RepositoryAccess.RepositoryRegistration,System.String,System.String)">
            <summary>
            Creates a new <c>Session</c> object and logs in using a Laserfiche user
            account with password authentication.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance specifying
            the Laserfiche repository to log into.</param>
            <param name="userName">The Laserfiche user name.</param>
            <param name="password">The password to log in with.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Creates a new <c>Session</c> object and logs in to Laserfiche using
            the current thread's Windows credentials.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance specifying
            the Laserfiche repository to log into.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(Laserfiche.RepositoryAccess.RepositoryRegistration,Laserfiche.SecurityTokenService.Ticket)">
            <summary>
            Creates a new <c>Session</c> object and logs in to Laserfiche using
            a <c>Ticket</c> received from a Laserfiche Directory Server.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance specifying
            the Laserfiche repository to log into.</param>
            <param name="ticket">The ticket containing the bearer token.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Create(System.String,Laserfiche.RepositoryAccess.CloudTicket)">
            <summary>
            Creates a new <c>Session</c> object and logs in to Laserfiche using a
            <c>CloudTicket</c> received from the hosted Laserfiche account control
            system (ACS) service.
            </summary>
            <param name="repositoryHost">The DNS name of the repository host to connect
            to.</param>
            <param name="ticket">An instance of <c>CloudTicket</c> representing the
            log in session to use when connecting.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.CreateSecure(Laserfiche.RepositoryAccess.RepositoryRegistration,System.String,System.String)">
            <summary>
            Creates a new <c>Session</c> object and logs in using a Laserfiche user
            account with password authentication with SSL/TLS enabled.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance specifying
            the Laserfiche repository to log into.</param>
            <param name="userName">The Laserfiche user name.</param>
            <param name="password">The password to log in with.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>CreateSecure</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.CreateSecure(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Creates a new <c>Session</c> object and logs in to Laserfiche using
            the current thread's Windows credentials with SSL/TLS enabled.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance specifying
            the Laserfiche repository to log into.</param>
            <returns>The logged in <c>Session</c> object.</returns>
            <remarks>
            The <c>Create</c> static method is an alternative to instantiating a
            <c>Session</c> instance and calling LogIn.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.#ctor">
            <summary>
            Initializes a new <c>Session</c> instance.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Connect(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Establishes a connection to a Laserfiche repository without logging in.
            If TLS/SSL is used, the server's certificate can be checked.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which
            specifies the repository to connect to.</param>
            <remarks>
            The <c>Connect</c> method is intended to be used with TLS/SSL connection
            security.  A secure connection to Laserfiche can be made and the server's
            X.509 certificate can be examined before sending any credentials over.
            Some overloads of the <c>LogIn</c> method will connect to the Laserfiche
            server automatically without the need to call <c>Connect</c> first.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(System.String,System.String,Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Log in to Laserfiche using a Laserfiche user account with password
            authentication.
            </summary>
            <param name="userName">The Laserfiche user name.</param>
            <param name="password">The password to log in with.</param>
            <param name="repository">The repository to log in to.</param>
            <remarks>
            This overload of <c>LogIn</c> will connect to the Laserfiche server automatically.
            If <c>Connect</c> was already called to connect to a different repository,
            this method will throw an <c>InvalidOperationException</c> exception.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(Laserfiche.RepositoryAccess.RepositoryRegistration)">
            <summary>
            Log in to Laserfiche using the current thread's Windows credentials.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which
            specifies the repository to log in to.</param>
            <remarks>
            This overload of <c>LogIn</c> will connect to the Laserfiche server automatically.
            If <c>Connect</c> was already called to connect to a different repository,
            this method will throw an <c>InvalidOperationException</c> exception.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(System.String,System.String)">
            <summary>
            Logs in to the currently connected repository.
            </summary>
            <param name="userName">The Laserfiche user name.</param>
            <param name="password">The password to log in with.</param>
            <remarks>
            The <c>Connect</c> method must have already been called successfully to
            establish a connection to Laserfiche.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn">
            <summary>
            Log in to the currently connected repository using the current thread's
            Windows credentials.
            </summary>
            <remarks>
            The <c>Connect</c> method must have already been called to establish
            a connection to Laserfiche.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(Laserfiche.RepositoryAccess.RepositoryRegistration,Laserfiche.SecurityTokenService.Ticket)">
            <summary>
            Log in to Laserfiche using a <c>Ticket</c> received from a Laserfiche Directory
            Server instance as a bearer token.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which
            specifies the repository to log in to.</param>
            <param name="ticket">The ticket containing the bearer token.</param>
            <remarks>
            This overload of <c>LogIn</c> will connect to the Laserfiche server automatically.
            If <c>Connect</c> was already called to connect to a different repository,
            this method will throw an <c>InvalidOperationException</c> exception.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(System.String,Laserfiche.RepositoryAccess.CloudTicket)">
            <summary>
            Log in to Laserfiche using a <c>CloudTicket</c> received from the Laserfiche hosted
            account control system.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which
            specifies the repository to log in to.</param>
            <param name="ticket">The ticket containing the bearer token.</param>
            <remarks>
            This overload of <c>LogIn</c> will connect to the Laserfiche server automatically.
            If <c>Connect</c> was already called to connect to a different repository,
            this method will throw an <c>InvalidOperationException</c> exception.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogIn(Laserfiche.RepositoryAccess.RepositoryRegistration,Laserfiche.RepositoryAccess.CloudTicket)">
            <summary>
            Log in to Laserfiche using a <c>CloudTicket</c> received from the Laserfiche hosted
            account control system.
            </summary>
            <param name="repository">A <c>RepositoryRegistration</c> instance which
            specifies the repository to log in to.</param>
            <param name="ticket">The ticket containing the bearer token.</param>
            <remarks>
            This overload of <c>LogIn</c> will connect to the Laserfiche server automatically.
            If <c>Connect</c> was already called to connect to a different repository,
            this method will throw an <c>InvalidOperationException</c> exception.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.LogOut">
            <summary>
            Terminate the current session.
            </summary>
            <remarks>
            All pending changes will be discarded, all non-persistent locks will be
            freed, all associated LRNP sessions will be terminated and disconnected,
            and all HTTP connections will be closed.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetAuditReasons">
            <summary>
            Returns a collection of tuples that contain information about the audit reasons
            available to the session. The reason ID and audit event type are returned.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetGroupIdentities">
            <summary>
            Gets the identities of the trustees in the session's group list.
            </summary>
            <returns>A collection of the security identifiers of the groups and other
            accounts this session is a member of.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetWatermarks">
            <summary>
            Gets the watermarks assigned to the current session.
            </summary>
            <returns>A collection of the watermarks assigned to the current session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.EnumAuthorizedTags">
            <summary>
            Retrieves the set of tags the current session is authorized to.
            </summary>
            <returns>A <c>TagInfoReader</c> to enumerate the authorized tags.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.EnumPersonalStamps">
            <summary>
            Retrieves the set of personal stamps the current session is authorized to.
            </summary>
            <returns>A <c> StampInfoReader</c> to enumerate the personal stamps.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.ChangePassword(System.String,System.String)">
            <summary>
            Sends a request to change the current user's password.
            </summary>
            <param name="oldPassword">A string whose value is the old password, or
            a null reference to not provide the old password.</param>
            <param name="newPassword">A string whose value is the new password.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetSessionLocale">
            <summary>
            Gets the locale information for the session.
            </summary>
            <returns>A <c>SessionLocale</c> object representing the session's
            locale data.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.HasAllPrivileges(Laserfiche.RepositoryAccess.Privileges)">
            <summary>
            Returns a boolean indicating if this session possesses all of the
            requested privileges.
            </summary>
            <param name="pr">The set of privileges to check.</param>
            <returns>A boolean indicating if this session possesses all of the
            requested privileges.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.HasAnyPrivileges(Laserfiche.RepositoryAccess.Privileges)">
            <summary>
            Returns a boolean indicating if this session possesses any of the
            requested privileges.
            </summary>
            <param name="pr">The set of privileges to check.</param>
            <returns>A boolean indicating if this session possesses any of the
            requested privileges.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.HasAllFeatureRights(Laserfiche.RepositoryAccess.FeatureRights)">
            <summary>
            Returns a boolean indicating if this session possesses all of the
            requested feature rights.
            </summary>
            <param name="fr">The set of feature rights to check.</param>
            <returns>A boolean indicating if this session possesses all of the
            requested feature rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.HasAnyFeatureRights(Laserfiche.RepositoryAccess.FeatureRights)">
            <summary>
            Returns a boolean indicating if this session possesses any of the
            requested feature rights.
            </summary>
            <param name="fr">The set of feature rights to check.</param>
            <returns>A boolean indicating if this session possesses any of the
            requested feature rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Save">
            <summary>
            Saves all pending changes to the repository.
            </summary>
            <remarks>
            The objects are not saved in any particular order.  If ordering is desired,
            call the <c>Save</c> method on each individual object instance.  Instances
            are removed from the pending list when their changes are saved to the server.
            </remarks>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Discard">
            <summary>
            Discards all pending changes and releases all locks.
            This function should only be called when the session is/will no longer exist in LFS.
            as this function assume LFS will take care of certain things such as unlocking all session held locks.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.SetVariable(System.String,System.Object)">
            <summary>
            Sets a session variable to the specified value.  The variable is created if necessary.
            </summary>
            <param name="name">The name of the session variable to set.</param>
            <param name="value">The value to set the session variable to.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetVariable(System.String)">
            <summary>
            Gets the value of a session variable.
            </summary>
            <param name="name">The name of the session variable to retrieve the value for.</param>
            <returns>The value of the session variable or a null reference if the variable is not set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.GetAllVariables">
            <summary>
            Gets the name and value of all set variables for the current Laserfiche session.
            </summary>
            <returns>A reference to an enumerable collection of <c>SessionVariable</c>
            instances for each variable in the current Laserfiche session.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.UnsetVariable(System.String)">
            <summary>
            Unsets (deletes) a single session variable in the current Laserfiche session.
            </summary>
            <param name="name">The name of the session variable to unset.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.UnsetAllVariables">
            <summary>
            Unsets (deletes) all the variables in the current Laserfiche session.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Session.Close">
            <summary>
            Logs out and disconnects from Laserfiche and disposes of all allocated resources.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.SessionVariable">
            <summary>
            Represents the value of a Laserfiche session variable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionVariable.Name">
            <summary>
            Gets the name of the session variable.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.SessionVariable.Value">
            <summary>
            Gets the value of the session variable.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.Volume">
            <summary>
            Collection of static methods for managing Laserfiche volumes.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Create(Laserfiche.RepositoryAccess.VolumeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Creates a new Laserfiche volume in the current repository.
            </summary>
            <param name="info">A <c>VolumeInfo</c> instance that specifies the settings
            for the new volume.  The instance is not modified.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A new <c>VolumeInfo</c> instance which represents the new
            Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Update(System.Int32,Laserfiche.RepositoryAccess.VolumeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings for an existing volume definition in a Laserfiche
            repository.
            </summary>
            <param name="volumeId">The ID of the existing volume definition to update.</param>
            <param name="info">A <c>VolumeInfo</c> instance that describes the new
            settings for the specified volume.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Update(System.String,Laserfiche.RepositoryAccess.VolumeInfo,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Updates the settings for an existing volume definition in a Laserfiche
            repository.
            </summary>
            <param name="volumeName">The name of the existing volume definition to
            update.</param>
            <param name="info">A <c>VolumeInfo</c> instance that describes the new
            settings for the specified volume.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Delete(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a volume definition in the current Laserfiche repository.
            </summary>
            <param name="volumeId">The ID of the Laserfiche volume to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Delete(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a volume definition in the current Laserfiche repository.
            </summary>
            <param name="volumeName">The name of the Laserfiche volume to delete.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Delete(System.Int32,Laserfiche.RepositoryAccess.VolumeDeleteOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a volume definition in the current Laserfiche repository.
            </summary>
            <param name="volumeId">The ID of the Laserfiche volume to delete.</param>
            <param name="options">Members of the <c>VolumeDeleteOptions</c> enumeration
            which specifies options that control volume deletion.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance representing the deletion operation if
            the <c>BackgroundDelete</c> option was specified, otherwise null.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Delete(System.String,Laserfiche.RepositoryAccess.VolumeDeleteOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Deletes a volume definition in the current Laserfiche repository.
            </summary>
            <param name="volumeName">The name of the Laserfiche volume to delete.</param>
            <param name="options">Members of the <c>VolumeDeleteOptions</c> enumeration
            which specifies options that control volume deletion.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance representing the deletion operation if
            the <c>BackgroundDelete</c> option was specified, otherwise null.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetInfo(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfo</c> instance which describes the settings for the
            specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfo</c> instance which describes the settings for the
            specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetInfo(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfo</c> instance which describes the settings for the
            specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to retrieve information about.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfo</c> instance which describes the settings for the
            specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAccessControl(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to retrieve access control
            settings for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAccessControl(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to retrieve access control
            settings for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetDefaultAccessControl(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeSecurity</c> instances representing the
            default ACL for new volumes.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeSecurity</c> instances representing the
            default ACL for new volumes.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.SetDefaultAccessControl(Laserfiche.RepositoryAccess.VolumeSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the default ACL for new volumes.
            </summary>
            <param name="volSecurity">A <c>VolumeSecurity</c> instance representing
            the default ACL for new volumes.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetDefaultEffectiveRights(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the effective access rights of the current session assuming a
            volume with the default volume ACL.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>VolumeRights</c> enumeration representing
            the effective access rights of the current session assuming a
            volume with the default volume ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetDefaultAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the ACL display rights for the specified Laserfiche account assuming
            a volume with the default ACL.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the Laserfiche account to calculate ACL display rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>VolumeRights</c> enumeration representing
            the ACL display rights for the specified Laserfiche account assuming a
            volume with the default volume ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a volume with the default ACL.
            </summary>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>AccountReference</c> of accounts to one or more values 
            from the <c>VolumeRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a volume with the default ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetDefaultAclDisplayRights(System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch retrieves the ACL display rights for the input Laserfiche accounts assuming
            a volume with the default ACL.
            </summary>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session"></param>
            <returns>a <c>Dictionary</c> mapping <c>SecurityIdentifier</c> of accounts to one or more values 
            from the <c>VolumeRights</c> enumeration representing the ACL display rights for 
            the specified Laserfiche account assuming a volume with the default ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetDefaultAclDisplayRights(System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Retrieves the ACL display rights for the specified Windows account assuming
            a volume with the default ACL.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the Windows account to calculate ACL display rights for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>One or more values from the <c>VolumeRights</c> enumeration representing
            the ACL display rights for the specified Windows account assuming a
            volume with the default volume ACL.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.SetAccessControl(System.Int32,Laserfiche.RepositoryAccess.VolumeSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the access control configuration for the specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to configure access control
            settings for.</param>
            <param name="volumeSecurity">A <c>VolumeSecurity</c> instance which
            describes the new access control settings for the specified volume.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.SetAccessControl(System.String,Laserfiche.RepositoryAccess.VolumeSecurity,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets the access control configuration for the specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to configure access control
            settings for.</param>
            <param name="volumeSecurity">A <c>VolumeSecurity</c> instance which
            describes the new access control settings for the specified volume.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the current session has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to return the current session's
            access rights to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the current session possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the current session has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to return the current session's
            access rights to.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the current session possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the specified user has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to return the specified user's
            access rights to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the specified user possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the effective rights granted to the referenced trustees for the target volumes.
            </summary>
            <param name="volumeIds">The IDs of the target volumes.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target volumes to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetEffectiveRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch calculates the effective rights granted to the referenced trustees for the target volumes.
            </summary>
            <param name="volumeIds">The IDs of the target volumes.</param>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target volumes to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the specified user has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to return the specified user's
            access rights to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the specified user possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the specified user has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to return the specified user's
            access rights to.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the specified user possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetEffectiveRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the effective access rights that the specified user has to the
            specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to return the specified user's
            access rights to.</param>
            <param name="ident">An <c>IdentityReference</c> instance representing a
            reference to the user account to calculate access for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which specify
            which access rights the specified user possesses to the specified
            volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAclDisplayRights(System.Int32,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access rights granted to the specified trustee by the specified
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="volumeId">The ID of the volume to return rights that the
            specified user is granted access to by the volume's security
            configuration.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche account.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the specified
            volume's security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{Laserfiche.RepositoryAccess.AccountReference},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch returns the rights granted to the referenced trustees by the target
            volumes' security configurations.
            </summary>
            <param name="volumeIds">The IDs of the target volumes.</param>
            <param name="lfAccts">The <c>AccountReference</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target volumes to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>AccountReference</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.BatchGetAclDisplayRights(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Security.Principal.SecurityIdentifier},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Batch returns the rights granted to the referenced trustees by the target
            volumes' security configurations.
            </summary>
            <param name="volumeIds">The IDs of the target volumes.</param>
            <param name="sids">The <c>SecurityIdentifier</c> instances of target accounts.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A<c> Dictionary</c> mapping IDs of target volumes to corresponding rights
            organized in <c>Dictionary</c> instances mapping <c>SecurityIdentifier</c> of target trunstees to granted rights.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAclDisplayRights(System.Int32,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access rights granted to the specified trustee by the specified
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="volumeId">The ID of the volume to return rights that the
            specified user is granted access to by the volume's security
            configuration.</param>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a Windows trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the specified
            volume's security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAclDisplayRights(System.String,Laserfiche.RepositoryAccess.AccountReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access rights granted to the specified trustee by the specified
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="volumeName">The name of the volume to return rights that the
            specified user is granted access to by the volume's security
            configuration.</param>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche account.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the specified
            volume's security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetAclDisplayRights(System.String,System.Security.Principal.IdentityReference,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the access rights granted to the specified trustee by the specified
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="volumeName">The name of the volume to return rights that the
            specified user is granted access to by the volume's security
            configuration.</param>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a Windows trustee.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the specified
            volume's security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetVolumeStatistics(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to retrieve statistics for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetVolumeStatistics(System.Int32,Laserfiche.RepositoryAccess.VolumeStatistics.Flags,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.
            </summary>
            <param name="volumeId">The ID of the volume to retrieve statistics for.</param>
            <param name="flags">Members of the <c>VolumeStatistics.Flags</c> enumeration
            specifying the types of statistics to calculate and return.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetVolumeStatistics(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to retrieve statistics for.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetVolumeStatistics(System.String,Laserfiche.RepositoryAccess.VolumeStatistics.Flags,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.
            </summary>
            <param name="volumeName">The name of the volume to retrieve statistics for.</param>
            <param name="flags">Members of the <c>VolumeStatistics.Flags</c> enumeration
            specifying the types of statistics to calculate and return.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeStatistics</c> instance which describes various statistics
            for the specified Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Export(System.Int32,Laserfiche.RepositoryAccess.VolumeExportSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Exports a volume's metadata to the file system on the server host.  The
            export operation runs asynchronously.
            </summary>
            <param name="volumeId">The ID of the volume to export.</param>
            <param name="settings">A <c>VolumeExportSettings</c> instance which
            specifies the settings to use when exporting the volume.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance which can be used to track
            the progress of or cancel the export operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Export(System.String,Laserfiche.RepositoryAccess.VolumeExportSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Exports a volume's metadata to the file system on the server host.  The
            export operation runs asynchronously.
            </summary>
            <param name="volumeName">The name of the volume to export.</param>
            <param name="settings">A <c>VolumeExportSettings</c> instance which
            specifies the settings to use when exporting the volume.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance which can be used to track
            the progress of or cancel the export operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Attach(System.String,Laserfiche.RepositoryAccess.VolumeAttachSettings,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Attaches a previously exported volume to the current Laserfiche repository.
            </summary>
            <param name="newVolumeName">A string specifying the name of the new
            volume.</param>
            <param name="settings">A <c>VolumeAttachSettings</c> instance which specifies
            the settings to use when attaching the volume.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>LongOperation</c> instance which can be used to track
            the progress of or cancel the attach operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Rollover(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Performs an immediate rollover of the specified logical volume.
            </summary>
            <param name="volumeId">The ID of the logical volume to rollover.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Rollover(System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Performs an immediate rollover of the specified logical volume.
            </summary>
            <param name="volumeName">The name of the logical volume to rollover.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.EnumAll(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.EnumAll(Laserfiche.RepositoryAccess.VolumeReaderOptions,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository that meet the specified
            criteria.
            </summary>
            <param name="options">Members of the <c>VolumeReaderOptions</c> enumeration
            which control which volumes will be returned by the reader.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository that meet the specified
            criteria.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.EnumAll(Laserfiche.RepositoryAccess.VolumeReaderOptions,Laserfiche.RepositoryAccess.VolumeReaderProperties,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository that meet the specified
            criteria.
            </summary>
            <param name="options">Members of the <c>VolumeReaderOptions</c> enumeration
            which control which volumes will be returned by the reader.</param>
            <param name="properties">Members of the <c>VolumeReaderProperty</c> enumeration
            which control which volume properties will be returned by the reader.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfoReader</c> instance which can be used to enumerate all
            of the volumes in the current Laserfiche repository that meet the specified
            criteria.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.EnumPhysicalVolumes(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a <c>VolumeInfoReader</c> which can be used to enumerate all of
            the physical volumes associated with the specified logical volume.
            </summary>
            <param name="logicalVolumeId">The ID of the parent logical volume for
            which all the associated physical volumes shall be returned.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A <c>VolumeInfoReader</c> which can be used to enumerate all of
            the physical volumes associated with the specified logical volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.ValidateExportedVolumePassword(System.String,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Determines if the volume at the specified exported path is encrypted with
            the specified password.
            </summary>
            <param name="volumePath">The path on the server to the root of the exported
            volume.</param>
            <param name="password">The password to check.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if the password can decrypt the exported volume, false otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.ValidateExportedVolumePath(System.String,System.Boolean@,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Determines if the specified file system path on the Laserfiche server system
            contains a valid exported Laserfiche volume.
            </summary>
            <param name="volumePath">A directory path to check.</param>
            <param name="isEncrypted">On output, contains a boolean indicating if the
            exported volume is compressed.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>True if the volume is potentially a valid Laserfiche volume, false
            otherwise.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Index(System.Int32,Laserfiche.RepositoryAccess.IndexOption,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Schedules documents on the specified volume to be (re)indexed by the
            Laserfiche Full-Text Search Engine.
            </summary>
            <param name="volumeId">The ID of the volume whose associated documents
            shall be scheduled for full-text indexing.</param>
            <param name="indexOpt">A member of the <c>IndexOption</c> enumeration
            which specifies which documents shall be indexed.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Relock(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Locks the specified encrypted volume so that is must be unlocked
            before it can accessed.
            </summary>
            <param name="volumeId">The ID of the encrypted volume to lock.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.Unlock(System.Int32,System.String,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Unlocks an encrypted volume so that it can be accessed.  This does not
            decrypt the volume.
            </summary>
            <param name="volumeId">The ID of the encrypted volume to unlock.</param>
            <param name="password">The password that was used to encrypt the volume.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetProperties(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of all the custom properties for the specified volume.
            </summary>
            <param name="volumeId">The ID of the volume.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of all the custom properties for the specified volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetProperties(System.Int32,System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns a dictionary of the named custom properties for the specified volume.
            </summary>
            <param name="volumeId">The ID of the volume.</param>
            <param name="propertyNames">The names of the properties to retrieve.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>A dictionary of the named custom properties for the specified volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.SetProperties(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.String},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Sets and removes custom properties for the specified volume.
            </summary>
            <param name="volumeId">The ID of the volume.</param>
            <param name="toSet">An optional dictonary of properties to set.  Existing properties
            are overwritten.</param>
            <param name="toRemove">An optional list of properties to remove.</param>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetExtendedProperties(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns all the system and custom properties for all volumes.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
            <returns>All the system and custom properties for all volumes.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.Volume.GetExtendedProperties(System.Collections.Generic.IList{Laserfiche.RepositoryAccess.PropValue},Laserfiche.RepositoryAccess.Session)">
            <summary>
            Returns the specified system and custom properties for all volumes.
            </summary>
            <param name="propertyNames">A list of property names.</param>
            <param name="session">The Laserfiche session to use.</param>
            <returns>The specified system and custom properties.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeRolloverUnit">
            <summary>
            An enumeration of Laserfiche volume rollover schedule time units.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRolloverUnit.None">
            <summary>
            Do not rollover the volume on a scheduled basis.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRolloverUnit.Daily">
            <summary>
            Rollover the volume on a daily schedule.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRolloverUnit.Weekly">
            <summary>
            Rollover the volume on a weekly schedule.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeRolloverUnit.Monthly">
            <summary>
            Rollover the volume on a monthly schedule.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeType">
            <summary>
            Enumeration of Laserfiche volume types.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeType.Physical">
            <summary>
            A physical volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeType.Logical">
            <summary>
            A logical volume, also known as a volume group or rollover volume.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeDeleteOptions">
            <summary>
            Enumeration of options that control deleting Laserfiche volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeDeleteOptions.None">
            <summary>
            No volume deletion options provided.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeDeleteOptions.DeleteFiles">
            <summary>
            Delete the files on disk that belonged to the deleted volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeDeleteOptions.BackgroundDelete">
            <summary>
            Perform the deletion as a long operation.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm">
            <summary>
            An enumeration of algorithms used to encrypt Laserfiche volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm.None">
            <summary>
            No encryption will be applied.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm.Aes128Ctr">
            <summary>
            Use AES encryption with a 128-bit key in CTR mode.  This is a legacy algorithm.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm.Aes128Gcm">
            <summary>
            Use AES encryption with a 128-bit key in GCM mode.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm.Aes192Gcm">
            <summary>
            Use AES encryption with a 192-bit key in GCM mode.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeEncryptionAlgorithm.Aes256Gcm">
            <summary>
            Use AES encryption with a 256-bit key in GCM mode.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeInfo">
            <summary>
            Represents a volume definition in a Laserfiche repository.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeInfo.UNLIMITED_SIZE">
            <summary>
            Constant for use with the <c>MaximumSize</c> property indicating no size
            limit.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.Id">
            <summary>
            Gets the ID of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.Name">
            <summary>
            Gets or sets the name of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.LocalId">
            <summary>
            Gets the local ID of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.FixedPath">
            <summary>
            Gets or sets the fixed path in the file system of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.RemovablePath">
            <summary>
            Gets or sets the removable path in the file system of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.MaximumSize">
            <summary>
            Gets or sets the maximum size of the represented volume, in megabytes.  For logical
            volumes, this is the rollover trigger size for the current physical volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.SourceVolumeId">
            <summary>
            Gets the ID of the source logical volume if the represented volume is a
            physical volume created from a logical volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.VolumeType">
            <summary>
            Gets, and for new volumes, sets a member of the <c>VolumeType</c> enumeration
            which specifies the type of volume the represented volume is.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsMounted">
            <summary>
            Gets a boolean indicating if the volume is mounted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsOffline">
            <summary>
            Gets or sets a boolean indicating if the volume is offline.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsReadOnly">
            <summary>
            Gets or sets a boolean indicating if the represented volume is read-only.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsWriteOnce">
            <summary>
            Gets or sets a boolean indicating if the represented volume is write-once.
            That is, once a file has been written, it cannot be overwritten, modified,
            or deleted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsImageFixed">
            <summary>
            Gets or sets a boolean indicating if image files are stored under the fixed
            path of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsTextFixed">
            <summary>
            Gets or sets a boolean indicating if text files are stored under the fixed
            path of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsEDocFixed">
            <summary>
            Gets or sets a boolean indicating if electronic document files are stored
            under the fixed path of the represented volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsLocked">
            <summary>
            Gets a boolean indicating if the volume is locked because it is encrypted
            and a valid key has not been provided to unlock it.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsEncrypted">
            <summary>
            Gets a boolean indicating if the volume is encrypted.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.EncryptionAlgorithm">
            <summary>
            Gets or sets the algorithm used to encrypt the volume.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsCompressed">
            <summary>
            Gets or sets a boolean indicating if the volume is compressed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.IsDataChecksummed">
            <summary>
            Gets or sets a boolean indicating whether data stored in the volume is
            automatically checksummed.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.RolloverBaseDate">
            <summary>
            Gets or sets the base date for scheduled volume rollover.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.RolloverPeriod">
            <summary>
            Gets or sets the amount of time to elapse between scheduled volume rollovers.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.RolloverDate">
            <summary>
            Gets or sets the date of the next volume rollover.
            </summary>
        </member>
        <member name="P:Laserfiche.RepositoryAccess.VolumeInfo.RolloverUnit">
            <summary>
            Gets or sets the unit of time between scheduled volume rollovers.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.#ctor">
            <summary>
            Initializes a <c>VolumeInfo</c> instance representing a new Laserfiche
            volume.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.#ctor(Laserfiche.RepositoryAccess.Session)">
            <summary>
            Initializes a <c>VolumeInfo</c> instance.
            </summary>
            <param name="session">The Laserfiche session to use.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.#ctor(System.Int32,Laserfiche.RepositoryAccess.Session)">
            <summary>
            For internal Laserfiche use only.
            </summary>
            <param name="volId"></param>
            <param name="session"></param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.#ctor(Laserfiche.RepositoryAccess.VolumeInfo)">
            <summary>
            Initializes a <c>VolumeInfo</c> instance from the properties of an existing
            <c>VolumeInfo</c> instance.
            </summary>
            <param name="source">A <c>VolumeInfo</c> instance to draw data from.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.ClearPasswords">
            <summary>
            Removes all the passwords from this volume's password set and clears the
            encryption option.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.AddPassword(System.String)">
            <summary>
            Adds a password to this volume's password set.  The volume is encrypted
            if it is not already encrypted.
            </summary>
            <param name="password">The password to add to the password set.</param>
            <returns>True if the password was added, false if the password was
            already a member of the set.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Delete">
            <summary>
            Marks the represented volume for deletion next time pending changes
            are sent to Laserfiche.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Delete(Laserfiche.RepositoryAccess.VolumeDeleteOptions)">
            <summary>
            Marks the represented volume for deletion next time pending changes
            are sent to Laserfiche.
            </summary>
            <param name="options">Members of the <c>VolumeDeleteOptions</c> enumeration
            which control how the volume will be deleted.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.SaveAsync">
            <summary>
            Saves the changes to the represented volume to Laserfiche asynchronously.
            </summary>
            <returns>A <c>LongOperation</c> instance which represents the volume
            defintion update operation running asynchronously, or null if the update
            was completed immediately.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetStatistics">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes various statistics
            for the represented Laserfiche volume.
            </summary>
            <returns>A <c>VolumeStatistics</c> instance which describes various statistics
            for the represented Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetStatistics(Laserfiche.RepositoryAccess.VolumeStatistics.Flags)">
            <summary>
            Returns a <c>VolumeStatistics</c> instance which describes the specified
            statistics for the represented Laserfiche volume.
            </summary>
            <param name="flags">Members of the <c>VolumeStatistics.Flags</c> enumeration
            specifying the types of statistics to calculate and return.</param>
            <returns>A <c>VolumeStatistics</c> instance which describes the specified
            statistics for the represented Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetPhysicalVolumes">
            <summary>
            Returns a <c>VolumeInfoReader</c> which can be used to enumerate all of
            the physical volumes associated with the represented logical volume.
            </summary>
            <returns>A <c>VolumeInfoReader</c> which can be used to enumerate all of
            the physical volumes associated with the represented logical volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Export(Laserfiche.RepositoryAccess.VolumeExportSettings)">
            <summary>
            Exports the represented volume's metadata to the file system on the server
            host.  The export operation runs asynchronously.
            </summary>
            <param name="settings">A <c>VolumeExportSettings</c> instance which
            specifies the settings to use when exporting the volume.</param>
            <returns>A <c>LongOperation</c> instance which can be used to track
            the progress of or cancel the export operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Rollover">
            <summary>
            Performs an immediate rollover of the represented logical volume.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Index(Laserfiche.RepositoryAccess.IndexOption)">
            <summary>
            Schedules documents on the represented volume to be (re)indexed by the
            Laserfiche Full-Text Search Engine.
            </summary>
            <param name="indexOpt">A member of the <c>IndexOption</c> enumeration
            which specifies which documents shall be indexed.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.VerifyChecksums(System.Int32)">
            <summary>
            Verifies checksums on the represented volume and reports back the results.
            </summary>
            <param name="samplePercent">The percentage of documents residing on the
            volume to verify, from 1 to 100.</param>
            <returns>A <c>VolumeChecksumReport</c> representing the results of the
            verification operation.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Unlock(System.String)">
            <summary>
            Unlocks the current encrypted volume so that it can be accessed.  This
            operation does not decrypt the volume.
            </summary>
            <param name="password">The password used to encrypt the volume.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.Relock">
            <summary>
            Locks the current encrypted volume so that it cannot be subseqently
            accessed without first unlocking it.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetAccessControl">
            <summary>
            Returns a <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the represented Laserfiche volume.
            </summary>
            <returns>A <c>VolumeSecurity</c> instance which describes the configured
            access control settings for the represented Laserfiche volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.SetAccessControl(Laserfiche.RepositoryAccess.VolumeSecurity)">
            <summary>
            Sets the access control configuration for the represented Laserfiche volume.
            </summary>
            <param name="volumeSecurity">A <c>VolumeSecurity</c> instance which
            describes the new access control settings for the represented volume.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetEffectiveRights">
            <summary>
            Calculates and returns the effective access rights of the current session
            to the represented volume.
            </summary>
            <returns>>Members of the <c>VolumeRights</c> enumeration specifying the
            current session's effective access to the represented volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetEffectiveRights(System.Security.Principal.IdentityReference)">
            <summary>
            Calculates and returns the effective access rights the specified user has
            to the represented volume.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a Windows trustee.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration representing the
            effective access rights the specified user has to the represented volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetEffectiveRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Calculates and returns the effective access rights the specified user has
            to the represented volume.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Windows trustee.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration representing the
            effective access rights the specified user has to the represented volume.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetAclDisplayRights(Laserfiche.RepositoryAccess.AccountReference)">
            <summary>
            Returns the access rights granted to the specified trustee by the represented
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="lfAcct">An <c>AccountReference</c> instance which represents
            a reference to a Laserfiche account trustee.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the represented
            volume's security configuration.</returns>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.VolumeInfo.GetAclDisplayRights(System.Security.Principal.IdentityReference)">
            <summary>
            Returns the access rights granted to the specified trustee by the represented
            volume's security configuration.  This calculation does not take into
            consideration privileges or feature rights, and may miss Windows trustees
            that could be present in access tokens after logging in.
            </summary>
            <param name="ident">An <c>IdentityReference</c> instance which represents
            a reference to a Windows trustee.</param>
            <returns>Members of the <c>VolumeRights</c> enumeration which represent
            the access rights granted to the specified trustee by the represented
            volume's security configuration.</returns>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeReaderOptions">
            <summary>
            Enumeration of options which control which volumes a
            <c>VolumeInfoReader</c> instance will return.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.None">
            <summary>
            The default behavior; returns all types of volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.ReadOnly">
            <summary>
            Returns only read-only volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.WritableOnly">
            <summary>
            Returns only writable volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.FixedOnly">
            <summary>
            Returns only volumes with only fixed paths.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.RemovableOnly">
            <summary>
            Returns only volumes with only removable paths.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.LogicalOnly">
            <summary>
            Returns only logical volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.PhysicalOnly">
            <summary>
            Returns only physical volumes.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.SourceOnly">
            <summary>
            Returns only logical volumes with an active physical volume.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.AppendableOnly">
            <summary>
            Returns only volumes where the current session has permissions
            to append data.
            </summary>
        </member>
        <member name="F:Laserfiche.RepositoryAccess.VolumeReaderOptions.CreatableOnly">
            <summary>
            Returns only volumes where the current session has permissions to
            create documents.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeReaderProperties">
            <summary>
            Enumeration of flags that control which volume properties a <c>VolumeInfoReader</c>
            instance retrieves from Laserfiche.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.VolumeInfoReader">
            <summary>
            Provides the ability to return <c>VolumeInfo</c> instances which represent
            the Laserfiche volumes matching the specified criteria.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.MethodTracer">
            <summary>
            Provides access to a static instance of MethodTracer for logging RepositoryAccess messages.
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MethodTracer.InitializeMethodTracer(System.String)">
            <summary>
            Start the trace logger for RepositoryAccess.
            </summary>
            <param name="logFilePath">A <c>string</c> instance which references the output
            file path of the trace logger.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MethodTracer.InitializeMethodTracer(System.String,System.Boolean)">
            <summary>
            Start the trace logger for RepositoryAccess.
            </summary>
            <param name="logFilePath">A <c>string</c> instance which references the output file path of the trace logger.</param>
            <param name="logConsole">The flag to turn on console output.</param>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MethodTracer.ShutdownMethodTracer">
            <summary>
            Shuts down the trace logger for RepositoryAccess.
            </summary>
        </member>
        <member name="T:Laserfiche.RepositoryAccess.ThreadSafeTextWriterTraceListener">
            <summary>
            TextWriterTraceListener base class is not thread safe, and calls to Write/WriteLine from different threads can interleave their text
            in the output file.  This class adds a simple lock around calls to Write/WriteLine
            </summary>
        </member>
        <member name="M:Laserfiche.RepositoryAccess.MethodTracerBase.IsTracerClassMethod(System.Diagnostics.StackFrame)">
            <summary>
            Checks whether this stack frame belongs to the MethodTracer class itself
            (which implies it should be hidden from the trace log)
            </summary>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="T:Laserfiche.SecurityTokenService.TicketRequestSettings">
            <summary>
            Settings that control how the Laserfiche <c>Ticket</c> instance should be acquired
            from a ticket granting service.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.TicketServer">
            <summary>
            Gets or sets the ticket granting server name.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.Realm">
            <summary>
            Gets or sets the realm name.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.OrganizationName">
            <summary>
            Gets or sets the organization name.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.MacAddresses">
            <summary>
            Gets or sets the MAC (network interface) addresses for device licensing.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.UseSsl">
            <summary>
            Gets or sets whether or not SSL should be used.
            </summary>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.TicketRequestSettings.IdentityProviderName">
            <summary>
            Gets or sets the identity provider name.
            </summary>
        </member>
        <member name="T:Laserfiche.SecurityTokenService.Ticket">
            <summary>
            Represents a Laserfiche "ticket" issued by a Laserfiche directory server which
            may grant access to Laserfiche services.
            </summary>
            <seealso cref="T:Laserfiche.SecurityTokenService.TicketFactory"/>
        </member>
        <member name="M:Laserfiche.SecurityTokenService.Ticket.#ctor(System.String)">
            <summary>
            Initializes a <c>Ticket</c> instance from a security token XML fragment.
            </summary>
            <param name="tokenXml">The XML representation of a Laserfiche security token.</param>
        </member>
        <member name="M:Laserfiche.SecurityTokenService.Ticket.SerializeAsString(System.String)">
            <summary>
            Serializes the security token in the specified format as a <c>String</c>.
            </summary>
            <param name="format">The format to write out the ticket in.</param>
            <returns>The encapsulated Laserfiche ticket in the specified format.</returns>
        </member>
        <member name="P:Laserfiche.SecurityTokenService.Ticket.TokenXml">
            <summary>
            Gets the encapsulated security token XML.
            </summary>
        </member>
        <member name="T:Laserfiche.SecurityTokenService.TicketFactory">
            <summary>
            Provides a service to connect to a Laserfiche ticket granting server
            and to request a service ticket.
            </summary>
        </member>
        <member name="M:Laserfiche.SecurityTokenService.TicketFactory.GetEncodedTokenSigningKey(Laserfiche.SecurityTokenService.TicketRequestSettings)">
            <summary>
            For internal Laserfiche use.
            </summary>
        </member>
        <member name="M:Laserfiche.SecurityTokenService.TicketFactory.GetTicket(Laserfiche.SecurityTokenService.TicketRequestSettings)">
            <summary>
            Returns a <c>Ticket</c> instance representing a Laserfiche ticket used to access a
            Laserfiche service.
            </summary>
            <param name="settings">A <c>TicketRequestSettings</c> instance specifying the
            settings to use when sending a request for a Laserfiche ticket.</param>
            <returns>A <c>Ticket</c> instance representing a Laserfiche ticket used to access a
            Laserfiche service.</returns>
        </member>
    </members>
</doc>
